{"remainingRequest":"/Users/haofuyang/Desktop/yang-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/haofuyang/Desktop/yang-blog/node_modules/vuepress-theme-vt/plugins/fulltext-search/services/flexsearchSvc.js","dependencies":[{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/vuepress-theme-vt/plugins/fulltext-search/services/flexsearchSvc.js","mtime":1658561763877},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/cache-loader/dist/cjs.js","mtime":1658561742978},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/babel-loader/lib/index.js","mtime":1658561742936}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/haofuyang/Desktop/yang-blog/node_modules/vuepress-theme-vt/plugins/fulltext-search/services/flexsearchSvc.js"],"names":["Flexsearch","_","index","cyrillicIndex","cjkIndex","pagesByPath","cjkRegex","buildIndex","allPages","options","pages","filter","p","frontmatter","search","indexSettings","encode","tokenize","split","async","doc","id","field","add","cyrillicPages","charsets","cyrillic","cjkPages","cjk","length","str","cjkWords","m","exec","push","keyBy","match","queryString","queryTerms","limit","searchParams","query","boost","searchResult1","searchResult2","searchResult3","searchResult","uniqBy","result","map","page","parentPageTitle","getParentPageTitle","getAdditionalInfo","normalizeString","resultByParent","groupBy","values","arr","x","i","flat","pathParts","path","parentPagePath","parentPage","title","toLowerCase","getMatch","getFullHeading","slug","contentStr","headerIndex","headers","findLastIndex","h","charIndex","getContentStr","headingStr","headersPath","header","unshift","level","join","prefixPath","slice","prefixLength","sum","headingHighlight","termLength","terms","matches","t","getHeaderMatch","getContentMatch","every","find","term","normalizedTitle","indexOf","normalizedContent","snippetLength","lineStartIndex","content","lastIndexOf","lineEndIndex","line","lineCharIndex","contentHighlight","additionalCharactersFromStart","round","snippetStart","Math","max","snippetEnd","min","trim","normalize","replace"],"mappings":"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","sourcesContent":["import Flexsearch from \"flexsearch\";\n// Use when flexSearch v0.7.0 will be available\n// import cyrillicCharset from 'flexsearch/dist/lang/cyrillic/default.min.js'\n// import cjkCharset from 'flexsearch/dist/lang/cjk/default.min.js'\nimport _ from \"lodash\";\n\nlet index = null;\nlet cyrillicIndex = null;\nlet cjkIndex = null;\nlet pagesByPath = null;\n\nconst cjkRegex =\n  /[\\u3131-\\u314e|\\u314f-\\u3163|\\uac00-\\ud7a3]|[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]|[\\u3041-\\u3096]|[\\u30A1-\\u30FA]/giu;\n\nexport default {\n  buildIndex(allPages, options) {\n    const pages = allPages.filter(\n      (p) => !p.frontmatter || p.frontmatter.search !== false\n    );\n    const indexSettings = {\n      encode: options.encode || \"simple\",\n      tokenize: options.tokenize || \"forward\",\n      split: options.split || /\\W+/,\n      async: true,\n      doc: {\n        id: \"key\",\n        // here you choose the fields you want to index.\n        // for me I will search in the title and the content of each page.\n        // of course I stripped the content before so I use the plain text content not the markdown text\n        field: [\"title\", \"headersStr\", \"content\"],\n      },\n    };\n    index = new Flexsearch(indexSettings);\n    index.add(pages);\n\n    const cyrillicPages = pages.filter((p) => p.charsets.cyrillic);\n    const cjkPages = pages.filter((p) => p.charsets.cjk);\n\n    if (cyrillicPages.length) {\n      cyrillicIndex = new Flexsearch({\n        ...indexSettings,\n        encode: \"icase\",\n        split: /\\s+/,\n        tokenize: \"forward\",\n      });\n      cyrillicIndex.add(cyrillicPages);\n    }\n    if (cjkPages.length) {\n      cjkIndex = new Flexsearch({\n        ...indexSettings,\n        encode: false,\n        tokenize: function (str) {\n          const cjkWords = [];\n          let m = null;\n          do {\n            m = cjkRegex.exec(str);\n            if (m) {\n              cjkWords.push(m[0]);\n            }\n          } while (m);\n          return cjkWords;\n        },\n      });\n      cjkIndex.add(cjkPages);\n    }\n    pagesByPath = _.keyBy(pages, \"path\");\n  },\n  async match(queryString, queryTerms, limit = 7) {\n    const searchParams = [\n      {\n        field: \"title\",\n        query: queryString,\n        limit,\n        boost: 10,\n      },\n      {\n        field: \"headersStr\",\n        query: queryString,\n        limit,\n        boost: 7,\n      },\n      {\n        field: \"content\",\n        query: queryString,\n        limit,\n      },\n    ];\n    const searchResult1 = await index.search(searchParams);\n    const searchResult2 = cyrillicIndex\n      ? await cyrillicIndex.search(searchParams)\n      : [];\n    const searchResult3 = cjkIndex ? await cjkIndex.search(searchParams) : [];\n    const searchResult = _.uniqBy(\n      [...searchResult1, ...searchResult2, ...searchResult3],\n      \"path\"\n    );\n    const result = searchResult.map((page) => ({\n      ...page,\n      parentPageTitle: getParentPageTitle(page),\n      ...getAdditionalInfo(page, normalizeString(queryString), queryTerms),\n    }));\n\n    const resultByParent = _.groupBy(result, \"parentPageTitle\");\n    return _.values(resultByParent)\n      .map((arr) =>\n        arr.map((x, i) => {\n          if (i === 0) return x;\n          return { ...x, parentPageTitle: null };\n        })\n      )\n      .flat();\n  },\n  normalizeString,\n};\n\nfunction getParentPageTitle(page) {\n  const pathParts = page.path.split(\"/\");\n  let parentPagePath = \"/\";\n  if (pathParts[1]) parentPagePath = `/${pathParts[1]}/`;\n\n  const parentPage = pagesByPath[parentPagePath] || page;\n  return parentPage.title;\n}\n\nfunction getAdditionalInfo(page, queryString, queryTerms) {\n  const query = queryString.toLowerCase();\n  const match = getMatch(page, query, queryTerms);\n  if (!match)\n    return {\n      ...getFullHeading(page),\n      slug: \"\",\n      contentStr: null,\n    };\n\n  if (match.headerIndex != null) {\n    // header match\n    return {\n      ...getFullHeading(page, match.headerIndex, match),\n      slug: \"#\" + page.headers[match.headerIndex].slug,\n      contentStr: null,\n    };\n  }\n\n  // content match\n  let headerIndex = _.findLastIndex(\n    page.headers || [],\n    (h) => h.charIndex != null && h.charIndex < match.charIndex\n  );\n  if (headerIndex === -1) headerIndex = null;\n\n  return {\n    ...getFullHeading(page, headerIndex),\n    slug: headerIndex == null ? \"\" : \"#\" + page.headers[headerIndex].slug,\n    ...getContentStr(page, match),\n  };\n}\n\nfunction getFullHeading(page, headerIndex, match) {\n  if (headerIndex == null) return { headingStr: page.title };\n  const headersPath = [];\n  while (headerIndex != null) {\n    const header = page.headers[headerIndex];\n    headersPath.unshift(header);\n    headerIndex = _.findLastIndex(\n      page.headers,\n      (h) => h.level === header.level - 1,\n      headerIndex - 1\n    );\n    if (headerIndex === -1) headerIndex = null;\n  }\n\n  const headingStr = headersPath.map((h) => h.title).join(\" > \");\n  const prefixPath = headersPath.slice(0, -1);\n  const prefixLength =\n    _.sum(prefixPath.map((p) => (p.title || \"\").length)) +\n    prefixPath.length * 3;\n  const headingHighlight = match &&\n    match.headerIndex != null && [\n      match.charIndex + prefixLength,\n      match.termLength,\n    ];\n  return { headingStr, headingHighlight };\n}\n\nfunction getMatch(page, query, terms) {\n  const matches = terms\n    .map((t) => {\n      return getHeaderMatch(page, t) || getContentMatch(page, t);\n    })\n    .filter((m) => m);\n  if (matches.length === 0) return null;\n\n  if (matches.every((m) => m.headerIndex != null)) {\n    return getHeaderMatch(page, query) || matches[0];\n  }\n\n  return (\n    getContentMatch(page, query) || matches.find((m) => m.headerIndex == null)\n  );\n}\n\nfunction getHeaderMatch(page, term) {\n  if (!page.headers) return null;\n  for (let i = 0; i < page.headers.length; i++) {\n    const h = page.headers[i];\n    const charIndex = h.normalizedTitle.indexOf(term);\n    if (charIndex === -1) continue;\n    return {\n      headerIndex: i,\n      charIndex,\n      termLength: term.length,\n    };\n  }\n  return null;\n}\n\nfunction getContentMatch(page, term) {\n  if (!page.normalizedContent) return null;\n  const charIndex = page.normalizedContent.indexOf(term);\n  if (charIndex === -1) return null;\n\n  return { headerIndex: null, charIndex, termLength: term.length };\n}\n\nfunction getContentStr(page, match) {\n  const snippetLength = 120;\n  const { charIndex, termLength } = match;\n\n  let lineStartIndex = page.content.lastIndexOf(\"\\n\", charIndex);\n  let lineEndIndex = page.content.indexOf(\"\\n\", charIndex);\n\n  if (lineStartIndex === -1) lineStartIndex = 0;\n  if (lineEndIndex === -1) lineEndIndex = page.content.length;\n\n  const line = page.content.slice(lineStartIndex, lineEndIndex);\n  const lineCharIndex = charIndex - lineStartIndex;\n  const contentHighlight = [lineCharIndex, termLength];\n\n  if (snippetLength >= line.length)\n    return { contentStr: line, contentHighlight };\n\n  const additionalCharactersFromStart = _.round(\n    (snippetLength - termLength) / 2\n  );\n  const snippetStart = Math.max(\n    lineCharIndex - additionalCharactersFromStart,\n    0\n  );\n  const snippetEnd = Math.min(snippetStart + snippetLength, line.length);\n  let contentStr = line.slice(snippetStart, snippetEnd);\n  contentHighlight[0] = contentHighlight[0] - snippetStart;\n\n  if (snippetStart > 0) {\n    contentStr = \"...\" + contentStr;\n    contentHighlight[0] = contentHighlight[0] + 3;\n  }\n  if (snippetEnd < line.length) contentStr = contentStr + \"...\";\n  return {\n    contentStr,\n    contentHighlight,\n  };\n}\n\nfunction normalizeString(str) {\n  if (!str) return str;\n  return str\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\");\n}\n"]}]}