{"remainingRequest":"/Users/haofuyang/Desktop/yang-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/haofuyang/Desktop/yang-blog/node_modules/vuepress-theme-vt/plugins/code-switcher/components/CodeSwitcher.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/vuepress-theme-vt/plugins/code-switcher/components/CodeSwitcher.vue","mtime":1658561763877},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/css-loader/dist/cjs.js","mtime":1658561743226},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658561743504},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/postcss-loader/src/index.js","mtime":1658561743382},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/stylus-loader/index.js","mtime":1658561743917},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/cache-loader/dist/cjs.js","mtime":1658561742978},{"path":"/Users/haofuyang/Desktop/yang-blog/node_modules/vue-loader/lib/index.js","mtime":1658561743504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKJGJvcmRlciA9IDEuNXB4OwoKLmNvZGUtc3dpdGNoZXIgewogIGRpdltjbGFzcyo9J2xhbmd1YWdlLSddOjpiZWZvcmUgewogICAgY29udGVudDogJyc7CiAgfQoKICAudGFiLWhlYWRlciB7CiAgICB1bCB7CiAgICAgIHBhZGRpbmc6IDA7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgbWFyZ2luLWJvdHRvbTogLTVweDsKICAgICAgbWFyZ2luLXRvcDogMjBweDsKICAgIH0KCiAgICBsaSB7CiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OwogICAgICBoZWlnaHQ6IDIwcHg7CiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwogICAgICBmb250LXNpemU6IDEycHg7CiAgICAgIGNvbG9yOiB2YXIoLS12cC1jLXRleHQtMik7CiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgcGFkZGluZzogMCAxMHB4OwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIGJvcmRlcjogJGJvcmRlciBzb2xpZCB2YXIoLS12cC1jLWRpdmlkZXIpOwogICAgICBib3JkZXItcmlnaHQ6IG5vbmU7CiAgICAgIC8vIHRyYW5zaXRpb246IGFsbCAwLjFzIGVhc2UtaW4tb3V0OwoKICAgICAgJjpiZWZvcmUgewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICAgIH0KCiAgICAgICY6Zmlyc3QtY2hpbGQgewogICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE1cHg7CiAgICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTVweDsKICAgICAgfQoKICAgICAgJjpsYXN0LWNoaWxkIHsKICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTVweDsKICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDsKICAgICAgICBib3JkZXItcmlnaHQ6ICRib3JkZXIgc29saWQgdmFyKC0tdnAtYy1kaXZpZGVyKTsKICAgICAgfQoKICAgICAgJjpob3ZlciB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdnAtYy1iZy1zb2Z0KTsKICAgICAgfQoKICAgICAgJi5hY3RpdmUgewogICAgICAgIGJvcmRlcjogJGJvcmRlciBzb2xpZCB2YXIoLS1jLWJyYW5kLWxpZ2h0KTsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS12cC1jLWJnLXNvZnQpOwoKICAgICAgICAmIH4gbGkgewogICAgICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CodeSwitcher.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeSwitcher.vue","sourceRoot":"node_modules/vuepress-theme-vt/plugins/code-switcher/components","sourcesContent":["<template>\n  <div class=\"code-switcher\">\n    <div class=\"tab-header\">\n      <ul>\n        <li\n          v-for=\"(name, shorthand) in actualLanguages\"\n          :key=\"shorthand\"\n          @click=\"switchLanguage(shorthand)\"\n          :class=\"{ active: selectedLanguage === shorthand }\"\n        >\n          {{ name }}\n        </li>\n      </ul>\n    </div>\n\n    <div\n      class=\"tab-content\"\n      :key=\"shorthand\"\n      v-for=\"(name, shorthand) in actualLanguages\"\n      v-show=\"shorthand === selectedLanguage\"\n    >\n      <slot :name=\"shorthand\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n// see https://vuepress.vuejs.org/plugin/option-api.html#clientdynamicmodules\nimport codeSwitcherGroups from \"@dynamic/code-switcher-groups\";\nconsole.log(\"codeSwitcherGroups\", codeSwitcherGroups);\n\nexport default {\n  props: {\n    name: {\n      type: String,\n      default: \"default\",\n    },\n    isolated: {\n      type: Boolean,\n      default: true,\n    },\n    languages: {\n      type: Object,\n      required: false,\n    },\n  },\n\n  data() {\n    return {\n      selectedLanguage: this.languages ? Object.keys(this.languages)[0] : null,\n      actualLanguages: this.languages,\n    };\n  },\n\n  computed: {\n    root() {\n      let parent = this,\n        p;\n      while ((p = parent.$parent)) {\n        parent = p;\n      }\n\n      return parent;\n    },\n\n    localStorageKey() {\n      return `vuepress-plugin-code-switcher@${this.name}`;\n    },\n  },\n\n  methods: {\n    switchLanguage(value) {\n      if (this.isolated) {\n        return (this.selectedLanguage = value);\n      }\n\n      if (typeof localStorage !== \"undefined\") {\n        localStorage.setItem(this.localStorageKey, value);\n      }\n      this.root.$emit(\"change\", { name: this.name, value });\n    },\n\n    setConfiguredDefaultLanguages() {\n      // No need to override the language list if we already have manually\n      // specified languages\n      if (this.languages) return;\n\n      if (codeSwitcherGroups && codeSwitcherGroups[this.name]) {\n        this.actualLanguages = codeSwitcherGroups[this.name];\n        this.selectedLanguage = Object.keys(this.actualLanguages)[0];\n      }\n    },\n  },\n\n  created() {\n    this.setConfiguredDefaultLanguages();\n\n    if (this.isolated) return;\n\n    if (!this.actualLanguages) {\n      throw new Error(\n        'You must specify either the \"languages\" prop or use the \"groups\" option when configuring the plugin.'\n      );\n    }\n\n    if (typeof localStorage !== \"undefined\") {\n      let selected = localStorage.getItem(this.localStorageKey);\n      if (\n        selected &&\n        Object.keys(this.actualLanguages).indexOf(selected) !== -1\n      )\n        this.selectedLanguage = selected;\n    }\n\n    this.root.$on(\"change\", ({ name, value }) => {\n      debugger;\n      if (name === this.name) this.selectedLanguage = value;\n    });\n  },\n};\n</script>\n\n<style lang=\"stylus\">\n$border = 1.5px;\n\n.code-switcher {\n  div[class*='language-']::before {\n    content: '';\n  }\n\n  .tab-header {\n    ul {\n      padding: 0;\n      text-align: center;\n      margin-bottom: -5px;\n      margin-top: 20px;\n    }\n\n    li {\n      box-sizing: content-box;\n      height: 20px;\n      line-height: 20px;\n      font-size: 12px;\n      color: var(--vp-c-text-2);\n      display: inline-block;\n      padding: 0 10px;\n      cursor: pointer;\n      border: $border solid var(--vp-c-divider);\n      border-right: none;\n      // transition: all 0.1s ease-in-out;\n\n      &:before {\n        display: none;\n      }\n\n      &:first-child {\n        border-top-left-radius: 15px;\n        border-bottom-left-radius: 15px;\n      }\n\n      &:last-child {\n        border-top-right-radius: 15px;\n        border-bottom-right-radius: 15px;\n        border-right: $border solid var(--vp-c-divider);\n      }\n\n      &:hover {\n        background-color: var(--vp-c-bg-soft);\n      }\n\n      &.active {\n        border: $border solid var(--c-brand-light);\n        background-color: var(--vp-c-bg-soft);\n\n        & ~ li {\n          border-left: none;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}