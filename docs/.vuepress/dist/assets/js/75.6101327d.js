(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{522:function(t,e,v){"use strict";v.r(e);var a=v(59),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"mvvm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),v("h2",{attrs:{id:"mvc-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvc-原理"}},[t._v("#")]),t._v(" MVC 原理")]),t._v(" "),v("ul",[v("li",[t._v("View 传送指令到 Controller")]),t._v(" "),v("li",[t._v("Controller 完成业务逻辑后，要求 Model 改变状态")]),t._v(" "),v("li",[t._v("Model 将新的数据发送到 View，用户得到反馈")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/Vue/MVC.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"mvvm-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvvm-原理"}},[t._v("#")]),t._v(" MVVM 原理")]),t._v(" "),v("p",[v("img",{attrs:{src:"/Vue/MVVM.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"vue中的mvvm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue中的mvvm"}},[t._v("#")]),t._v(" Vue中的MVVM")]),t._v(" "),v("blockquote",[v("p",[t._v("视图层和数据层的双向绑定，让我们无需再去关心DOM操作的事情，更多的精力放在数据和业务逻辑上去")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/Vue/vue-mvvm.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("View 即 Vue template")]),t._v(" "),v("li",[t._v("Model 即 Vue data")]),t._v(" "),v("li",[t._v("VM 即 Vue 其他核心功能，负责 View 和 Model 通讯")])])])}),[],!1,null,null,null);e.default=r.exports}}]);