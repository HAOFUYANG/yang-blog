(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{528:function(t,a,s){"use strict";s.r(a);var r=s(59),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"虚拟dom和diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom和diff算法"}},[t._v("#")]),t._v(" 虚拟dom和diff算法")]),t._v(" "),s("h2",{attrs:{id:"vdom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vdom"}},[t._v("#")]),t._v(" vdom")]),t._v(" "),s("h3",{attrs:{id:"为什么使用vdom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用vdom"}},[t._v("#")]),t._v(" 为什么使用vdom？")]),t._v(" "),s("p",[t._v("因为js的运行速度比操作dom的速度要快很多，把操作dom这个思路转变为操作js，通过js模拟dom结构，识别dom变更，然后更新视图\n不断的修改真实的DOM会引发回流和重绘，大大降低了页面的渲染能力，而虚拟DOM的产生则是减少了频繁操作DOM而带来的一系列性能问题")]),t._v(" "),s("h3",{attrs:{id:"模拟一个vdom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模拟一个vdom"}},[t._v("#")]),t._v(" 模拟一个vdom")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("div1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("container"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("vdom"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),s("span",{pre:!0,attrs:{class:"token value css language-css"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("20px")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("a"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div1'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vdom'")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ul'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'font-size:20px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("children")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"框架的价值-vue-react"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#框架的价值-vue-react"}},[t._v("#")]),t._v(" 框架的价值(Vue,React)")]),t._v(" "),s("ul",[s("li",[t._v("组件化 —— 这不是核心原因。WebComponent 已提出多年，当仍未发展壮大")]),t._v(" "),s("li",[t._v("数据视图分离，数据驱动视图("),s("strong",[t._v("核心")]),t._v(")")])]),t._v(" "),s("h3",{attrs:{id:"vdom真的很快吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vdom真的很快吗"}},[t._v("#")]),t._v(" vdom真的很快吗？")]),t._v(" "),s("ul",[s("li",[t._v("直接进行 DOM 操作永远都是最快的（但要目标明确，不能有无谓的 DOM 操作 —— 这很难）")]),t._v(" "),s("li",[t._v("如果业务复杂，要“数据视图分离，数据驱动视图”，无法直接修改 DOM ，那 vdom 就是一个很好的选择")])]),t._v(" "),s("p",[t._v("所以，"),s("strong",[t._v("vdom 并不比 DOM 操作更快")]),t._v("（反而更慢，它做了 JS 运算），它只是在某个特定的场景下，无法做到精准 DOM 修改时，一个更优的选择。")]),t._v(" "),s("h3",{attrs:{id:"扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.sveltejs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Svelte"),s("OutboundLink")],1),t._v(" 不使用 vdom ，它将组件修改，编译为精准的 DOM 操作。和 React 设计思路完全不一样。")]),t._v(" "),s("h2",{attrs:{id:"diff算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" diff算法")]),t._v(" "),s("h3",{attrs:{id:"步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),s("ul",[s("li",[t._v("用JavaScript 对象结构表示DOM树的结构；然后用这个树构建一个真正的DOM树，插到文档当中")]),t._v(" "),s("li",[t._v("当状态变更的时候，重新构造一棵新的对象树。然后用新的树和旧的树进行比较(diff)，记录两棵树差异")]),t._v(" "),s("li",[t._v("把第二棵树所记录的差异应用到第一棵树所构建的真正的DOM树上(patch)，视图就更新了")])]),t._v(" "),s("h3",{attrs:{id:"diff策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff策略"}},[t._v("#")]),t._v(" diff策略")]),t._v(" "),s("p",[t._v("diff整体策略为："),s("code",[t._v("深度")]),t._v("优先，同层比较，不会跨级，从两边向中间")]),t._v(" "),s("p",[t._v("DOM的频繁改变会产生一系列性能问题，而使用虚拟DOM替代真实DOM，最大的优势在于不断的去修改虚拟DOM后，才会一次性的与真实DOM的差异性做对比，然后只会去修改真实的DOM一次。而这种差异性对比，也就是diff算法。")]),t._v(" "),s("p",[t._v("**注：**Vue React 都是用于网页开发，基于 DOM 结构，对 diff 算法都进行了优化（或者简化）,最终把时间复杂度降低到 "),s("code",[t._v("O(n)")])]),t._v(" "),s("ul",[s("li",[t._v("只在同一层级比较，不夸层级 （DOM 结构的变化，很少有跨层级移动）")]),t._v(" "),s("li",[s("code",[t._v("tag")]),t._v(" 不同则直接删掉重建，不去对比内部细节（DOM 结构变化，很少有只改外层，不改内层）")]),t._v(" "),s("li",[t._v("同一个节点下的子节点，通过 "),s("code",[t._v("key")]),t._v(" 区分")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/Vue/tree-diff.png"),alt:"foo"}}),t._v(" "),s("h3",{attrs:{id:"vue2-diff-特点-双端相互比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue2-diff-特点-双端相互比较"}},[t._v("#")]),t._v(" Vue2 diff 特点 - 双端相互比较")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1Ph41117hq?spm_id_from=333.337.search-card.all.click&vd_source=69d50714712d5f1a163b015dc8a48fcf",target:"_blank",rel:"noopener noreferrer"}},[t._v("b站上的一个视频"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("好比在列表中插入值")]),t._v(" "),s("ul",[s("li",[t._v("定义四个指针，分别比较")]),t._v(" "),s("li",[t._v("oldStartNode 和 newStartNode")]),t._v(" "),s("li",[t._v("oldStartNode 和 newEndNode")]),t._v(" "),s("li",[t._v("oldEndNode 和 newStartNode")]),t._v(" "),s("li",[t._v("oldEndNode 和 newEndNode")]),t._v(" "),s("li",[t._v("指针继续向中间移动，知道指针汇合。")])]),t._v(" "),s("p",[s("img",{attrs:{src:t.$withBase("/Vue/vue2-diff.png"),alt:"foo"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/weixin_43638968/article/details/112686317",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"vue3-diff-特点-最长递增子序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3-diff-特点-最长递增子序列"}},[t._v("#")]),t._v(" Vue3 diff 特点 - 最长递增子序列")]),t._v(" "),s("p",[t._v("例如数组 "),s("code",[t._v("[3，5，7，1，2，8]")]),t._v(" 的最长递增子序列就是 "),s("code",[t._v("[3，5，7，8 ]")]),t._v(" 。这是一个专门的算法。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/Vue/vue3-diff.png"),alt:"foo"}}),t._v(" "),s("ul",[s("li",[t._v("1、通过“前-前”比较找到开始的不变节点 "),s("code",[t._v("[A, B]")])]),t._v(" "),s("li",[t._v("2、通过“后-后”比较找到末尾的不变节点 "),s("code",[t._v("[G]")])]),t._v(" "),s("li",[t._v("3、剩余的有变化的节点 "),s("code",[t._v("[F, C, D, E, H]")])]),t._v(" "),s("li",[t._v("4、通过 "),s("code",[t._v("newIndexToOldIndexMap")]),t._v(" 拿到 oldChildren 中对应的 index "),s("code",[t._v("[5, 2, 3, 4, -1]")]),t._v(" （"),s("code",[t._v("-1")]),t._v(" 表示之前没有，要新增）")]),t._v(" "),s("li",[t._v("5、计算"),s("strong",[t._v("最长递增子序列")]),t._v("得到 "),s("code",[t._v("[2, 3, 4]")]),t._v(" ，对应的就是 "),s("code",[t._v("[C, D, E]")]),t._v(" ，即这些节点可以不变")]),t._v(" "),s("li",[t._v("6、剩余的节点，根据 index 进行新增、删除")])]),t._v(" "),s("h3",{attrs:{id:"diff-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-的原理"}},[t._v("#")]),t._v(" diff 的原理")]),t._v(" "),s("p",[t._v("当data变化之后，视图会触发更新，那么这个过程是什么样的呢？\n首先data变化后，会触发setter\n接着，编译模板为render函数\nrender函数生成vNode，这是个新的vNode\n接着会patch(oldVnode, newVnode)，这个对比过程中用到的就是diff算法\n接着异步渲染更新\n由于vNode使用对象表示DOM的形式，大体上是一颗多叉树。")]),t._v(" "),s("h3",{attrs:{id:"diff-算法中的-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法中的-key"}},[t._v("#")]),t._v(" diff 算法中的 key")]),t._v(" "),s("p",[t._v("key是给每一个vnode的唯一id，也是diff的一种优化策略，可以根据key，更准确， 更快的找到对应的vnode节点")]),t._v(" "),s("ul",[s("li",[t._v("根据key判断元素是否要删除")]),t._v(" "),s("li",[t._v("匹配到key，只移动元素-性能较好")]),t._v(" "),s("li",[t._v("未匹配到key，则删除重建-性能较差")]),t._v(" "),s("li",[t._v("加了key之后，可以便于diff算法的计算，大幅度增加性能")])]),t._v(" "),s("p",[t._v("推荐key使用唯一值(例如唯一的id)")])])}),[],!1,null,null,null);a.default=e.exports}}]);