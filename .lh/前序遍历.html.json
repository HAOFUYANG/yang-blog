{
    "sourceFile": "前序遍历.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 41,
            "patches": [
                {
                    "date": 1648988566458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1648988572163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,6 @@\n <html>\n-  <header>\n-    <div>深度优先遍历</div>\n-    <div>广度优先遍历</div>\n-  </header>\n+  \n </html>\n <script type=\"text/javascript\">\n   // 树(模拟二叉树)\n   const tree = {\n"
                },
                {
                    "date": 1648988582663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n <html>\n   \n </html>\n <script type=\"text/javascript\">\n-  // 树(模拟二叉树)\n   const tree = {\n     val: \"a\",\n     children: [\n       {\n"
                },
                {
                    "date": 1648994862158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,23 +2,17 @@\n   \n </html>\n <script type=\"text/javascript\">\n   const tree = {\n-    val: \"a\",\n-    children: [\n-      {\n-        val: \"b\",\n-        children: [\n-          { val: \"d\", children: [] },\n-          { val: \"e\", children: [] },\n-        ],\n-      },\n-      {\n-        val: \"c\",\n-        children: [\n-          { val: \"f\", children: [] },\n-          { val: \"g\", children: [] },\n-        ],\n-      },\n-    ],\n+    val: \"1\",\n+    left:{\n+      val:'2',\n+      left:{val:'4',left:null,right:null},\n+      right:{val:'5',left:null,right:null}\n+    },\n+    right:{\n+      val:'3',\n+      left:{val:'6',left:null,right:null},\n+      right:{val:'7',left:null,right:null}\n+    }\n   };\n </script>\n"
                },
                {
                    "date": 1648994867525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,16 @@\n-<html>\n-  \n-</html>\n+<html></html>\n <script type=\"text/javascript\">\n   const tree = {\n     val: \"1\",\n-    left:{\n-      val:'2',\n-      left:{val:'4',left:null,right:null},\n-      right:{val:'5',left:null,right:null}\n+    left: {\n+      val: \"2\",\n+      left: { val: \"4\", left: null, right: null },\n+      right: { val: \"5\", left: null, right: null },\n     },\n-    right:{\n-      val:'3',\n-      left:{val:'6',left:null,right:null},\n-      right:{val:'7',left:null,right:null}\n-    }\n+    right: {\n+      val: \"3\",\n+      left: { val: \"6\", left: null, right: null },\n+      right: { val: \"7\", left: null, right: null },\n+    },\n   };\n </script>\n"
                },
                {
                    "date": 1648995402329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,5 +12,16 @@\n       left: { val: \"6\", left: null, right: null },\n       right: { val: \"7\", left: null, right: null },\n     },\n   };\n+\n+  // 递归\n+  var preorderTraversal = function(root) {\n+    if(!root.val) return []\n+    const result = []\n+    result.push(root.val)\n+    \n+    return result\n+  };\n+  preorderTraversal(tree)\n+  console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648995604747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,12 @@\n   // 递归\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n     const result = []\n-    result.push(root.val)\n+    var func = (node)=>{\n+      result.push(node.val)\n+    }\n+    func(root)\n     \n     return result\n   };\n   preorderTraversal(tree)\n"
                },
                {
                    "date": 1648995633483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n     if(!root.val) return []\n     const result = []\n     var func = (node)=>{\n       result.push(node.val)\n+      \n     }\n     func(root)\n-    \n     return result\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n"
                },
                {
                    "date": 1648995662706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n     const result = []\n     var func = (node)=>{\n+      if(node)\n       result.push(node.val)\n       \n     }\n     func(root)\n"
                },
                {
                    "date": 1648995758371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,11 +18,16 @@\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n     const result = []\n     var func = (node)=>{\n-      if(node)\n-      result.push(node.val)\n-      \n+      if(node){\n+        // 先添加根节点\n+        result.push(node.val)\n+        //遍历左子树\n+        func(node.left)\n+        //遍历右子树\n+        func(node.rigth)\n+      }\n     }\n     func(root)\n     return result\n   };\n"
                },
                {
                    "date": 1648995783811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         result.push(node.val)\n         //遍历左子树\n         func(node.left)\n         //遍历右子树\n-        func(node.rigth)\n+        func(node.right)\n       }\n     }\n     func(root)\n     return result\n"
                },
                {
                    "date": 1648996629477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,5 +32,11 @@\n     return result\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n+  //栈\n+  var preorderTraversal = function(root) {\n+   \n+  };\n+  preorderTraversal(tree)\n+  console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648996641882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈\n   var preorderTraversal = function(root) {\n-   \n+    if(!root.val) return []\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648996817179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n+    \n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648998095128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,15 @@\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n-    \n+    let result = []\n+    let stack = [root]\n+    while(stack.length){\n+      //出栈\n+      let o = stack.pop()\n+      console.log('o :>> ', o);\n+    }\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648998235468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,8 +41,11 @@\n     while(stack.length){\n       //出栈\n       let o = stack.pop()\n       console.log('o :>> ', o);\n+      result.push(o.val)\n+      stack.right && stack.push(o.right)\n+      stack.left && stack.push(o.left)\n     }\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n"
                },
                {
                    "date": 1648998273336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,9 @@\n       result.push(o.val)\n       stack.right && stack.push(o.right)\n       stack.left && stack.push(o.left)\n     }\n+    return result\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648998341707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,10 +42,10 @@\n       //出栈\n       let o = stack.pop()\n       console.log('o :>> ', o);\n       result.push(o.val)\n-      stack.right && stack.push(o.right)\n-      stack.left && stack.push(o.left)\n+      o.right && stack.push(o.right)\n+      o.left && stack.push(o.left)\n     }\n     return result\n   };\n   preorderTraversal(tree)\n"
                },
                {
                    "date": 1648998355837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n       //出栈\n       let o = stack.pop()\n       console.log('o :>> ', o);\n       result.push(o.val)\n+      //入栈\n       o.right && stack.push(o.right)\n       o.left && stack.push(o.left)\n     }\n     return result\n"
                },
                {
                    "date": 1648999308244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,5 +50,21 @@\n     return result\n   };\n   preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n+  //栈的另一种写法(上面的写法报错)\n+  var preorderTraversal = function (root) {\n+      const result = [];\n+      const stack = [];\n+      let current = root;\n+      while (current || stack.length > 0) {\n+        while (current) {\n+          result.push(current.val);\n+          stack.push(current);\n+          current = current.left;\n+        }\n+        current = stack.pop();\n+        current = current.right;\n+      }\n+      return result;\n+    };\n </script>\n"
                },
                {
                    "date": 1648999542208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n         }\n-        current = stack.pop();\n-        current = current.right;\n+        // current = stack.pop();\n+        // current = current.right;\n       }\n       return result;\n     };\n </script>\n"
                },
                {
                    "date": 1648999562855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,27 +31,26 @@\n     func(root)\n     return result\n   };\n   preorderTraversal(tree)\n-  console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n+  // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈\n   var preorderTraversal = function(root) {\n     if(!root.val) return []\n     let result = []\n     let stack = [root]\n     while(stack.length){\n       //出栈\n       let o = stack.pop()\n-      console.log('o :>> ', o);\n       result.push(o.val)\n       //入栈\n       o.right && stack.push(o.right)\n       o.left && stack.push(o.left)\n     }\n     return result\n   };\n   preorderTraversal(tree)\n-  console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n+  // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈的另一种写法(上面的写法报错)\n   var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [];\n@@ -66,5 +65,7 @@\n         // current = current.right;\n       }\n       return result;\n     };\n+    preorderTraversal(tree)\n+  console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1648999585774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,10 @@\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n         }\n-        // current = stack.pop();\n-        // current = current.right;\n+        current = stack.pop();\n+        current = current.right;\n       }\n       return result;\n     };\n     preorderTraversal(tree)\n"
                },
                {
                    "date": 1648999605081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,10 @@\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n         }\n-        current = stack.pop();\n-        current = current.right;\n+        // current = stack.pop();\n+        // current = current.right;\n       }\n       return result;\n     };\n     preorderTraversal(tree)\n"
                },
                {
                    "date": 1648999619151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,10 +60,10 @@\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n         }\n-        // current = stack.pop();\n-        // current = current.right;\n+        current = stack.pop();\n+        current = current.right;\n       }\n       return result;\n     };\n     preorderTraversal(tree)\n"
                },
                {
                    "date": 1649059158822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,9 @@\n       while (current || stack.length > 0) {\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n+          console.log('stack :>> ', stack);\n           current = current.left;\n         }\n         current = stack.pop();\n         current = current.right;\n"
                },
                {
                    "date": 1649059200670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,12 +58,13 @@\n       while (current || stack.length > 0) {\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n-          console.log('stack :>> ', stack);\n+          \n           current = current.left;\n         }\n         current = stack.pop();\n+        console.log('stack :>> ', stack);\n         current = current.right;\n       }\n       return result;\n     };\n"
                },
                {
                    "date": 1649059243465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n           stack.push(current);\n           \n           current = current.left;\n         }\n+        console.log('stack :>> ', stack);\n         current = stack.pop();\n-        console.log('stack :>> ', stack);\n         current = current.right;\n       }\n       return result;\n     };\n"
                },
                {
                    "date": 1649059272520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,12 +58,12 @@\n       while (current || stack.length > 0) {\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n-          \n+          console.log('111 :>> ', 111); \n           current = current.left;\n         }\n-        console.log('stack :>> ', stack);\n+        console.log('222 :>> ', 222);\n         current = stack.pop();\n         current = current.right;\n       }\n       return result;\n"
                },
                {
                    "date": 1649059291313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,8 @@\n       while (current || stack.length > 0) {\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n-          console.log('111 :>> ', 111); \n           current = current.left;\n         }\n         console.log('222 :>> ', 222);\n         current = stack.pop();\n"
                },
                {
                    "date": 1649059604154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,14 +59,16 @@\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n+          debugger\n         }\n         console.log('222 :>> ', 222);\n         current = stack.pop();\n         current = current.right;\n       }\n       return result;\n     };\n+    [1,2,4,]\n     preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1649059655458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,16 +54,16 @@\n   var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [];\n       let current = root;\n+\n       while (current || stack.length > 0) {\n+        debugger\n         while (current) {\n           result.push(current.val);\n           stack.push(current);\n           current = current.left;\n-          debugger\n         }\n-        console.log('222 :>> ', 222);\n         current = stack.pop();\n         current = current.right;\n       }\n       return result;\n"
                },
                {
                    "date": 1649083226023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,18 +54,24 @@\n   var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [];\n       let current = root;\n-\n-      while (current || stack.length > 0) {\n-        debugger\n-        while (current) {\n-          result.push(current.val);\n-          stack.push(current);\n-          current = current.left;\n+      while (stack.length > 0) {\n+        // while (current) {\n+        //   result.push(current.val);\n+        //   stack.push(current);\n+        //   current = current.left;\n+        // }\n+        // current = stack.pop();\n+        // current = current.right;\n+        result.push(current.val)\n+        current = stack.pop()\n+        if(current.right) {\n+          stack.push(current.right)\n         }\n-        current = stack.pop();\n-        current = current.right;\n+        if(current.left){\n+          stack.push(current.left)\n+        }\n       }\n       return result;\n     };\n     [1,2,4,]\n"
                },
                {
                    "date": 1649083288423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,24 +53,24 @@\n   //栈的另一种写法(上面的写法报错)\n   var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [];\n-      let current = root;\n+      // let current = root;\n       while (stack.length > 0) {\n         // while (current) {\n         //   result.push(current.val);\n         //   stack.push(current);\n         //   current = current.left;\n         // }\n         // current = stack.pop();\n         // current = current.right;\n-        result.push(current.val)\n-        current = stack.pop()\n-        if(current.right) {\n-          stack.push(current.right)\n+        result.push(root.val)\n+        root = stack.pop()\n+        if(root.right) {\n+          stack.push(root.right)\n         }\n-        if(current.left){\n-          stack.push(current.left)\n+        if(root.left){\n+          stack.push(root.left)\n         }\n       }\n       return result;\n     };\n"
                },
                {
                    "date": 1649083346290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,10 +52,11 @@\n   // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈的另一种写法(上面的写法报错)\n   var preorderTraversal = function (root) {\n       const result = [];\n-      const stack = [];\n+      const stack = [root];\n       // let current = root;\n+      result.push(current.val);\n       while (stack.length > 0) {\n         // while (current) {\n         //   result.push(current.val);\n         //   stack.push(current);\n"
                },
                {
                    "date": 1649083355649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n   var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [root];\n       // let current = root;\n-      result.push(current.val);\n+      // result.push(current.val);\n       while (stack.length > 0) {\n         // while (current) {\n         //   result.push(current.val);\n         //   stack.push(current);\n"
                },
                {
                    "date": 1649083381489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       const result = [];\n       const stack = [root];\n       // let current = root;\n       // result.push(current.val);\n-      while (stack.length > 0) {\n+      while (root || stack.length > 0) {\n         // while (current) {\n         //   result.push(current.val);\n         //   stack.push(current);\n         //   current = current.left;\n"
                },
                {
                    "date": 1649083390170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       const result = [];\n       const stack = [root];\n       // let current = root;\n       // result.push(current.val);\n-      while (root || stack.length > 0) {\n+      while ( stack.length > 0) {\n         // while (current) {\n         //   result.push(current.val);\n         //   stack.push(current);\n         //   current = current.left;\n"
                },
                {
                    "date": 1649083447138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,11 @@\n         //   current = current.left;\n         // }\n         // current = stack.pop();\n         // current = current.right;\n+        \n+        root = stack.pop()\n         result.push(root.val)\n-        root = stack.pop()\n         if(root.right) {\n           stack.push(root.right)\n         }\n         if(root.left){\n"
                },
                {
                    "date": 1649083529640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n   preorderTraversal(tree)\n   // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈的另一种写法(上面的写法报错)\n   var preorderTraversal = function (root) {\n+    if(!root.val) return []\n       const result = [];\n       const stack = [root];\n       // let current = root;\n       // result.push(current.val);\n"
                },
                {
                    "date": 1649083896343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,34 +50,22 @@\n   };\n   preorderTraversal(tree)\n   // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈的另一种写法(上面的写法报错)\n-  var preorderTraversal = function (root) {\n-    if(!root.val) return []\n+  var inorderTraversal = function (root) {\n       const result = [];\n-      const stack = [root];\n-      // let current = root;\n-      // result.push(current.val);\n-      while ( stack.length > 0) {\n-        // while (current) {\n-        //   result.push(current.val);\n-        //   stack.push(current);\n-        //   current = current.left;\n-        // }\n-        // current = stack.pop();\n-        // current = current.right;\n-        \n-        root = stack.pop()\n-        result.push(root.val)\n-        if(root.right) {\n-          stack.push(root.right)\n+      const stack = [];\n+      let current = root;\n+      while (current || stack.length > 0) {\n+        while (current) {\n+          stack.push(current);\n+          current = current.left;\n         }\n-        if(root.left){\n-          stack.push(root.left)\n-        }\n+        current = stack.pop();\n+        result.push(current.val);\n+        current = current.right;\n       }\n       return result;\n     };\n-    [1,2,4,]\n     preorderTraversal(tree)\n   console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n </script>\n"
                },
                {
                    "date": 1649138918939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,19 +50,19 @@\n   };\n   preorderTraversal(tree)\n   // console.log('preorderTraversal(tree) :>> ', preorderTraversal(tree));\n   //栈的另一种写法(上面的写法报错)\n-  var inorderTraversal = function (root) {\n+  var preorderTraversal = function (root) {\n       const result = [];\n       const stack = [];\n       let current = root;\n       while (current || stack.length > 0) {\n         while (current) {\n+          result.push(current.val);\n           stack.push(current);\n           current = current.left;\n         }\n         current = stack.pop();\n-        result.push(current.val);\n         current = current.right;\n       }\n       return result;\n     };\n"
                }
            ],
            "date": 1648988566458,
            "name": "Commit-0",
            "content": "<html>\n  <header>\n    <div>深度优先遍历</div>\n    <div>广度优先遍历</div>\n  </header>\n</html>\n<script type=\"text/javascript\">\n  // 树(模拟二叉树)\n  const tree = {\n    val: \"a\",\n    children: [\n      {\n        val: \"b\",\n        children: [\n          { val: \"d\", children: [] },\n          { val: \"e\", children: [] },\n        ],\n      },\n      {\n        val: \"c\",\n        children: [\n          { val: \"f\", children: [] },\n          { val: \"g\", children: [] },\n        ],\n      },\n    ],\n  };\n</script>\n"
        }
    ]
}