{
    "sourceFile": "哈希表.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1649600979788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649601169007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,22 @@\n <html></html>\n <script type=\"text/javascript\">\n-\n+class HashTable {\n+  constructor(){\n+    this.table = []\n+  }\n+  hashCode(key) {\n+    let hash = 0\n+    for(let i = 0;i<key.length;i++){\n+      hash+=key.charCodeAt(i)\n+    }\n+    return hash\n+  }\n+  put(key,val){\n+    let hashKey = this.hashCode(key)\n+    this.table[hashKey] = val\n+  }\n+  set(){\n+    \n+  }\n+}\n </script>\n"
                },
                {
                    "date": 1649601329472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n     let hashKey = this.hashCode(key)\n     this.table[hashKey] = val\n   }\n   set(){\n-    \n+\n   }\n }\n+let hashTable = new HashTable()\n+console.log('hashTable :>> ', hashTable);\n </script>\n"
                },
                {
                    "date": 1649601661798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,5 +20,6 @@\n   }\n }\n let hashTable = new HashTable()\n console.log('hashTable :>> ', hashTable);\n+hashTable('person','章三')\n </script>\n"
                },
                {
                    "date": 1649601691203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,7 +19,7 @@\n \n   }\n }\n let hashTable = new HashTable()\n+hashTable.put('person','章三')\n console.log('hashTable :>> ', hashTable);\n-hashTable('person','章三')\n </script>\n"
                },
                {
                    "date": 1649601727938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n   constructor(){\n     this.table = []\n   }\n   hashCode(key) {\n+    console.log('key :>> ', key);\n     let hash = 0\n     for(let i = 0;i<key.length;i++){\n       hash+=key.charCodeAt(i)\n     }\n"
                },
                {
                    "date": 1649601744796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   constructor(){\n     this.table = []\n   }\n   hashCode(key) {\n-    console.log('key :>> ', key);\n+    console.log('key :>> ', key.length);\n     let hash = 0\n     for(let i = 0;i<key.length;i++){\n       hash+=key.charCodeAt(i)\n     }\n"
                },
                {
                    "date": 1649601762326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,12 +4,12 @@\n   constructor(){\n     this.table = []\n   }\n   hashCode(key) {\n-    console.log('key :>> ', key.length);\n     let hash = 0\n     for(let i = 0;i<key.length;i++){\n       hash+=key.charCodeAt(i)\n+      console.log('hash :>> ', hash);\n     }\n     return hash\n   }\n   put(key,val){\n"
                },
                {
                    "date": 1649602035121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n   }\n   hashCode(key) {\n     let hash = 0\n     for(let i = 0;i<key.length;i++){\n+      console.log('i :>> ', i);\n       hash+=key.charCodeAt(i)\n       console.log('hash :>> ', hash);\n     }\n     return hash\n"
                },
                {
                    "date": 1649602063351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,9 @@\n   }\n   hashCode(key) {\n     let hash = 0\n     for(let i = 0;i<key.length;i++){\n-      console.log('i :>> ', i);\n       hash+=key.charCodeAt(i)\n-      console.log('hash :>> ', hash);\n     }\n     return hash\n   }\n   put(key,val){\n"
                },
                {
                    "date": 1649602359611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,11 @@\n   put(key,val){\n     let hashKey = this.hashCode(key)\n     this.table[hashKey] = val\n   }\n-  set(){\n-\n+  get(){\n+    let hashKey = this.hashCode(key)\n+    return this.table\n   }\n }\n let hashTable = new HashTable()\n hashTable.put('person','章三')\n"
                },
                {
                    "date": 1649602369954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,6 +21,6 @@\n   }\n }\n let hashTable = new HashTable()\n hashTable.put('person','章三')\n-console.log('hashTable :>> ', hashTable);\n+console.log('hashTable :>> ', hashTable.put('person','章三'));\n </script>\n"
                },
                {
                    "date": 1649602404339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,6 +21,6 @@\n   }\n }\n let hashTable = new HashTable()\n hashTable.put('person','章三')\n-console.log('hashTable :>> ', hashTable.put('person','章三'));\n+console.log('hashTable :>> ', hashTable.get('person'));\n </script>\n"
                },
                {
                    "date": 1649602415105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   put(key,val){\n     let hashKey = this.hashCode(key)\n     this.table[hashKey] = val\n   }\n-  get(){\n+  get(key){\n     let hashKey = this.hashCode(key)\n     return this.table\n   }\n }\n"
                },
                {
                    "date": 1649602447904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     this.table[hashKey] = val\n   }\n   get(key){\n     let hashKey = this.hashCode(key)\n-    return this.table\n+    return this.table[hashKey]\n   }\n }\n let hashTable = new HashTable()\n hashTable.put('person','章三')\n"
                },
                {
                    "date": 1649603080804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,6 +21,18 @@\n   }\n }\n let hashTable = new HashTable()\n hashTable.put('person','章三')\n-console.log('hashTable :>> ', hashTable.get('person'));\n+// console.log('hashTable :>> ', hashTable.get('person'));\n+\n+var findRepeatNumber = function(nums) {\n+    const map=new Map();\n+    for(let num of nums){\n+        if(map.has(num)) return num;\n+        else{map.set(num,true);}\n+    }\n+    return -1;\n+};\n+const nums = [1,2,3,1,1,1,]\n+findRepeatNumber(nums)\n+console.log('findRepeatNumber(nums) :>> ', findRepeatNumber(nums));\n </script>\n"
                },
                {
                    "date": 1649603095329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,8 @@\n         else{map.set(num,true);}\n     }\n     return -1;\n };\n-const nums = [1,2,3,1,1,1,]\n+const nums = [1,2,2,3,1,1,1,]\n findRepeatNumber(nums)\n console.log('findRepeatNumber(nums) :>> ', findRepeatNumber(nums));\n </script>\n"
                },
                {
                    "date": 1649603175323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,8 @@\n         else{map.set(num,true);}\n     }\n     return -1;\n };\n-const nums = [1,2,2,3,1,1,1,]\n+const nums = [1,3,3,2,2,3,1,1,1,]\n findRepeatNumber(nums)\n console.log('findRepeatNumber(nums) :>> ', findRepeatNumber(nums));\n </script>\n"
                },
                {
                    "date": 1649603193104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     for(let num of nums){\n         if(map.has(num)) return num;\n         else{map.set(num,true);}\n     }\n-    return -1;\n+    return map;\n };\n const nums = [1,3,3,2,2,3,1,1,1,]\n findRepeatNumber(nums)\n console.log('findRepeatNumber(nums) :>> ', findRepeatNumber(nums));\n"
                },
                {
                    "date": 1649603214248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n // console.log('hashTable :>> ', hashTable.get('person'));\n \n var findRepeatNumber = function(nums) {\n     const map=new Map();\n+    console.log('map :>> ', map);\n     for(let num of nums){\n         if(map.has(num)) return num;\n         else{map.set(num,true);}\n     }\n"
                },
                {
                    "date": 1649657901742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,6 +34,6 @@\n     return map;\n };\n const nums = [1,3,3,2,2,3,1,1,1,]\n findRepeatNumber(nums)\n-console.log('findRepeatNumber(nums) :>> ', findRepeatNumber(nums));\n+\n </script>\n"
                }
            ],
            "date": 1649600979788,
            "name": "Commit-0",
            "content": "<html></html>\n<script type=\"text/javascript\">\n\n</script>\n"
        }
    ]
}