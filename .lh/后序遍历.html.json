{
    "sourceFile": "后序遍历.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1649140011351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1649140436465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,18 +32,19 @@\n     const result = []\n     const func = (root)=>{\n       if(!root) return\n       func(root.left)\n+     \n+      func(root.right)\n       result.push(root.val)\n-      func(root.right)\n     }\n     func(root)\n     return result\n   };\n   postorderTraversal(tree)\n   //栈\n   var postorderTraversal = function(root) {\n-   \n+    \n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649140443781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,9 @@\n     func(root)\n     return result\n   };\n   postorderTraversal(tree)\n+  console.log(' postorderTraversal(tree) :>> ',  postorderTraversal(tree));\n   //栈\n   var postorderTraversal = function(root) {\n     \n   };\n"
                },
                {
                    "date": 1649140459747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,8 @@\n     const result = []\n     const func = (root)=>{\n       if(!root) return\n       func(root.left)\n-     \n       func(root.right)\n       result.push(root.val)\n     }\n     func(root)\n"
                },
                {
                    "date": 1649140512558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n   // };\n   // postorderTraversal(tree)\n   // console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n   var postorderTraversal = function(root) {\n-    debugger\n     const result = []\n     const func = (root)=>{\n       if(!root) return\n       func(root.left)\n@@ -39,9 +38,8 @@\n     func(root)\n     return result\n   };\n   postorderTraversal(tree)\n-  console.log(' postorderTraversal(tree) :>> ',  postorderTraversal(tree));\n   //栈\n   var postorderTraversal = function(root) {\n     \n   };\n"
                },
                {
                    "date": 1649140530515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n   };\n   postorderTraversal(tree)\n   //栈\n   var postorderTraversal = function(root) {\n-    \n+    const result =[]\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649140617081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n     return result\n   };\n   postorderTraversal(tree)\n   //栈\n+  弹出栈，放入回收栈，push后reverse\n+  先左再右进栈\n   var postorderTraversal = function(root) {\n     const result =[]\n   };\n   postorderTraversal(tree)\n"
                },
                {
                    "date": 1649140878142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,13 +38,28 @@\n     func(root)\n     return result\n   };\n   postorderTraversal(tree)\n+  console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n+\n   //栈\n-  弹出栈，放入回收栈，push后reverse\n-  先左再右进栈\n+  // 弹出栈，放入回收栈，push后reverse\n+  // 先左再右进栈\n   var postorderTraversal = function(root) {\n     const result =[]\n+    const current= root\n+    const stack = []\n+    const tmpStack = []\n+    while(current|| stack.length) {\n+      while(current) {\n+        stack.push(current)\n+        current = current.left\n+      }\n+      current = stack.pop()\n+      tmpStack = tmpStack.push(current)\n+      current = current.right\n+      \n+    }\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649140902220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,22 +44,15 @@\n   //栈\n   // 弹出栈，放入回收栈，push后reverse\n   // 先左再右进栈\n   var postorderTraversal = function(root) {\n-    const result =[]\n-    const current= root\n-    const stack = []\n-    const tmpStack = []\n-    while(current|| stack.length) {\n-      while(current) {\n-        stack.push(current)\n-        current = current.left\n-      }\n-      current = stack.pop()\n-      tmpStack = tmpStack.push(current)\n-      current = current.right\n-      \n+    while (current) {\n+      result.push(current.val);\n+      stack.push(current);\n+      current = current.left;\n     }\n+    current = stack.pop();\n+    current = current.right;\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649140922489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,15 +44,21 @@\n   //栈\n   // 弹出栈，放入回收栈，push后reverse\n   // 先左再右进栈\n   var postorderTraversal = function(root) {\n+    const result = [];\n+  const stack = [];\n+  let current = root;\n+  while (current || stack.length > 0) {\n     while (current) {\n       result.push(current.val);\n       stack.push(current);\n       current = current.left;\n     }\n     current = stack.pop();\n     current = current.right;\n+  }\n+  return result.reverse();\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649141440325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,21 +44,23 @@\n   //栈\n   // 弹出栈，放入回收栈，push后reverse\n   // 先左再右进栈\n   var postorderTraversal = function(root) {\n-    const result = [];\n-  const stack = [];\n-  let current = root;\n-  while (current || stack.length > 0) {\n-    while (current) {\n-      result.push(current.val);\n-      stack.push(current);\n-      current = current.left;\n+    if(root!==null) {\n+      const stack1 = []\n+      const stack2 = []\n+      stack1.push(root)\n+      while(stack1.length){\n+        root= stack1.pop()\n+        stack2.push(root)\n+        if(root.left!==null) {\n+          stack1.push(root.left)\n+        }\n+        if(root.right!==null) {\n+          stack1.push(root.right)\n+        }\n+      }\n     }\n-    current = stack.pop();\n-    current = current.right;\n-  }\n-  return result.reverse();\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649141475297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,11 @@\n         if(root.right!==null) {\n           stack1.push(root.right)\n         }\n       }\n+      while(stack2.length) {\n+        console.log('stack2.pop() :>> ', stack2.pop());\n+      }\n     }\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n"
                },
                {
                    "date": 1649141530422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n   //栈\n   // 弹出栈，放入回收栈，push后reverse\n   // 先左再右进栈\n   var postorderTraversal = function(root) {\n+    const result = []\n     if(root!==null) {\n       const stack1 = []\n       const stack2 = []\n       stack1.push(root)\n@@ -59,11 +60,12 @@\n           stack1.push(root.right)\n         }\n       }\n       while(stack2.length) {\n-        console.log('stack2.pop() :>> ', stack2.pop());\n+        result.push(stack2.pop())\n       }\n     }\n+    return result\n   };\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n"
                },
                {
                    "date": 1649141543713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n           stack1.push(root.right)\n         }\n       }\n       while(stack2.length) {\n-        result.push(stack2.pop())\n+        result.push(stack2.pop().val)\n       }\n     }\n     return result\n   };\n"
                },
                {
                    "date": 1649141576512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,9 @@\n         if(root.right!==null) {\n           stack1.push(root.right)\n         }\n       }\n+      console.log('stack2 :>> ', stack2);\n       while(stack2.length) {\n         result.push(stack2.pop().val)\n       }\n     }\n"
                },
                {
                    "date": 1649141595452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,10 @@\n         if(root.right!==null) {\n           stack1.push(root.right)\n         }\n       }\n-      console.log('stack2 :>> ', stack2);\n       while(stack2.length) {\n+        console.log('stack2 :>> ', stack2);\n         result.push(stack2.pop().val)\n       }\n     }\n     return result\n"
                },
                {
                    "date": 1649141614484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,8 @@\n           stack1.push(root.right)\n         }\n       }\n       while(stack2.length) {\n-        console.log('stack2 :>> ', stack2);\n         result.push(stack2.pop().val)\n       }\n     }\n     return result\n"
                },
                {
                    "date": 1649146797625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   postorderTraversal(tree)\n   console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n \n   //栈\n-  // 弹出栈，放入回收栈，push后reverse\n+  // 弹出栈，放入回收栈，\n   // 先左再右进栈\n   var postorderTraversal = function(root) {\n     const result = []\n     if(root!==null) {\n"
                },
                {
                    "date": 1649146830985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n \n   //栈\n   // 弹出栈，放入回收栈，\n   // 先左再右进栈\n+  // 循环这个操作\n   var postorderTraversal = function(root) {\n     const result = []\n     if(root!==null) {\n       const stack1 = []\n"
                },
                {
                    "date": 1649171052152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n       left: { val: \"6\", left: null, right: null },\n       right: { val: \"7\", left: null, right: null },\n     },\n   };\n-\n   // 递归\n   // var postorderTraversal = function(root,result=[]) {\n   //   debugger\n   //   if(root){\n"
                }
            ],
            "date": 1649140011351,
            "name": "Commit-0",
            "content": "<html></html>\n<script type=\"text/javascript\">\n  const tree = {\n    val: \"1\",\n    left: {\n      val: \"2\",\n      left: { val: \"4\", left: null, right: null },\n      right: { val: \"5\", left: null, right: null },\n    },\n    right: {\n      val: \"3\",\n      left: { val: \"6\", left: null, right: null },\n      right: { val: \"7\", left: null, right: null },\n    },\n  };\n\n  // 递归\n  // var postorderTraversal = function(root,result=[]) {\n  //   debugger\n  //   if(root){\n  //     inorderTraversal(root.left,result) \n  //     \n  //     inorderTraversal(root.right,result)\n        //result.push(root.val)\n  //   }\n  //   return result\n  // };\n  // postorderTraversal(tree)\n  // console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n  var postorderTraversal = function(root) {\n    debugger\n    const result = []\n    const func = (root)=>{\n      if(!root) return\n      func(root.left)\n      result.push(root.val)\n      func(root.right)\n    }\n    func(root)\n    return result\n  };\n  postorderTraversal(tree)\n  //栈\n  var postorderTraversal = function(root) {\n   \n  };\n  postorderTraversal(tree)\n  console.log('postorderTraversal(tree) :>> ', postorderTraversal(tree));\n\n</script>\n"
        }
    ]
}